<apex:page id="TipPowerBiPage" controller="TipPowerBiCtrl" showHeader="false" showChat="false" sideBar="false" action="{!redirect}">

	<apex:includeScript value="{!$Resource.PBIJS}"/>

	<div>
		<div id="report" ></div>
	</div>

	<style type="text/css">

            iframe {
                border:none;
            }

            #report {
                position:absolute;
               	height:100%;
              	width:100%;
            }

    </style>

	<script>

        let element = document.getElementById('report');

        let models = window['powerbi-client'].models;
        let reportId = "{!objectId}";
        let token = "{!accessToken}";
        let embedUrl = "{!embedUrl}";
        let groupId = "{!groupId}";
        let datasetId = "{!datasetId}";
        let expiration = "{!expiration}";

        let embedConfiguration = {
            id: reportId,
            type: "report",
            embedUrl: embedUrl,
            tokenType: models.TokenType.Embed,
            pageView: "actualSize",
            accessToken: token,
            settings : {
                filterPaneEnabled: false,
                navContentPaneEnabled: true
            }
        };

        let report = powerbi.embed(element, embedConfiguration);

        let expDate = new Date(expiration);

        report.off("loaded");
        report.on("loaded", function() {
            // Set token expiration listener (expDate, minutesBeforeExpiration, reportId, groupId, datasetId)
            setTokenExpirationListener(expDate, 3, reportId, groupId, datasetId);
        });


        function setTokenExpirationListener(tokenExpiration, minutesToRefresh, reportId, groupId, datasetId){
            // get current time
            let currentTime = Date.now();
            let expiration = Date.parse(tokenExpiration);
            let safetyInterval = minutesToRefresh* 60 * 1000;

            // time until token refresh in milliseconds
            let timeout = expiration - currentTime - safetyInterval;

            // if token already expired, generate new token and set the access token
            if (timeout<=0) {
                updateEmbedToken(reportId, groupId, datasetId);
            }
            // set timeout so minutesToRefresh minutes before token expires, token will be updated
            else {
                setTimeout(function() {
                    updateEmbedToken(reportId, groupId, datasetId);
                }, timeout);
            }


            function updateEmbedToken(reportId, groupId, datasetId) {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.TipPowerBiCtrl.refreshEmbedToken}', reportId, groupId, datasetId,
                    function(result, event){
                        if (event.status) {
                            //response OK
                            setNewEmbedToken(result, groupId, reportId, datasetId);
                        } else if (event.type === 'exception') {
                            //exception
                            console.error('Unable to update embed token - exception: ', event.message);
                        } else {
                            //exception
                            console.error('Unable to update embed token - error: ', event.message);
                        }
                    },
                    {escape: true}
                );
            }


            function setNewEmbedToken(result, groupId, reportId, datasetId) {
                // Get a reference to the embedded report HTML element
                let embedContainer = document.getElementById('report');

                // Get a reference to the embedded report.
                let report = powerbi.get(embedContainer);

				if(result) {

				    let resultArray = result.split('expiration=');

					let newToken = resultArray[0];
					let newExpDate = new Date(resultArray[1]);

					report.setAccessToken(newToken)
						.then(function() {
							// Set token expiration listener (expDate, minutesBeforeExpiration, reportId, groupId, datasetId)
							setTokenExpirationListener(newExpDate, 3, reportId, groupId, datasetId);
						});

				} else {
				    console.error('Empty refresh token - cannot update embed token!');
    			}

            }

    	}


    </script>



</apex:page>