<apex:page id="CCCountryMap" controller="ISSP_CurrencyCenterCountriesMapCtrl" action="{!checkAccess}" standardStylesheets="false" showHeader="false" sidebar="false"  applyBodyTag="false" applyHtmlTag="false">

<html>
 	<c:ISSP_Header ></c:ISSP_Header>
 	<head>
 		<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
		<script type="text/javascript" src="https://www.google.com/jsapi"></script>

		<script>
		    var countryLinks = [];
        <apex:variable value="{!0}" var="rowIndex"/>
        <apex:repeat value="{!lstCountries}" var="country" >
            countryLinks[{!rowIndex}] = "{!country.Id}";
            <apex:variable var="rowIndex" value="{!rowIndex + 1}"/>
        </apex:repeat>

        google.charts.load('upcoming', {'packages':['geochart']});
	      google.charts.setOnLoadCallback(drawRegionsMap);
			  var chart;

        let LIST_COUNTRIES = {!LstCountriesJson};
        let MAP_TYPES = new Map([
          ['Blocked Funds', 0],
          ['Watch List', 1],
          ['All others', 2],
          ['Draft', 3]
        ]);

        function drawRegionsMap() {
          
            var categoryFilter = document.getElementById("{!$Component.CCCountryMap.mainForm.categoryFilter}").value;
            var regionFilter = document.getElementById("{!$Component.CCCountryMap.mainForm.regionFilter}").value;

            var dataTable = new google.visualization.DataTable();
            dataTable.addColumn('string', 'Country');
            dataTable.addColumn('number','value');
            dataTable.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

            var rows = [];
            for (var i=0; i<LIST_COUNTRIES.length; i++) {
              var country = LIST_COUNTRIES[i];
              if (categoryFilter>"" && country.listType!= categoryFilter) continue;
              if (regionFilter>"" && country.Region!= regionFilter) continue;
              var row = [];
              // first param, country code
              row.push(country.IsoCode);
              // second param, color code
              row.push(MAP_TYPES.get(country.listType));
              // third param, popup code
              let popupText = "<h4>" + country.Name + "</h4>"+
                "<div style='font-family: Arial, Helvetica, sans-serif; font-size: 11px; display: inline-block; white-space: nowrap;'>"+
                "<b>" + country.listType + "</b><br/>";
              if (country.listType == "Blocked Funds") {
                popupText +=
                  "{!$Label.CurrencyCenter_Actual_Amount_Blocked}: <b>" + country.AmtBlocked + "</b><br/>"+
                  "{!$Label.CurrencyCenter_Issue_Started}: <b>" + country.IssueStarted + "</b><br/>"+
                  "{!$Label.CurrencyCenter_Number_of_Airlines_Reporting}: <b>" + country.NbAirlinesReporting + "</b><br/>"
              }
              if (country.listType == "Watch List" || country.listType=="All others" ) {
                popupText +=
                  "{!$Label.CurrencyCenter_CASS_ICCS_Availability}: <b>" + country.CASS_ICCS_Availability + "</b></br>" +
                  "{!$Label.CurrencyCenter_CASS_Launch_Date}: <b>" + country.CASS_Launch_Date + "</b></br>" +
                  "{!$Label.CurrencyCenter_BSP_ICCS_Availability}: <b>" + country.BSP_ICCS_Availability  + "</b></br>" +
                  "{!$Label.CurrencyCenter_BSP_Launch_Date}: <b>" + country.BSP_Launch_Date + "</b></br>" +
                  "{!$Label.CurrencyCenter_Currency_Exchange_Rate}: <b>" + country.Currency_Exchange_Rate + "</b></br>" +
                  "{!$Label.CurrencyCenter_Currency}: <b>" + country.Currency_x + "</b>";
              }
              popupText += "</div>";
              row.push(popupText);
              rows.push(row);
            }

            dataTable.addRows(rows);
		        
		        var options = {
              datalessRegionColor: '#D4D9DB',
              defaultColor: '#F19200',
              backgroundColor: '#F5F5F5',
              colorAxis: {
                  colors: ['#E4166D', '#F19200','#6ABAEB','#D4D9DB'],
                  values: [0,1,2,3]
              },
              legend: 'none',
              tooltip:{trigger: 'focus', isHtml: true, showTitle: false}
            }; 
			
		        chart = new google.visualization.GeoChart(document.getElementById('regions_div'));
            
            function myClickHandler(){
                var selection = chart.getSelection();
                var index;
                for (var i = 0; i < selection.length; i++) {
                    var item = selection[i];
                    if (item.row != null) {
                        index = item.row;
                    } 
                }

                if (index !== undefined) {
                    window.location = '/ISSP_CurrencyCenterCountry?Id=' + countryLinks[index];
                }
            }

            google.visualization.events.addListener(chart, 'select', myClickHandler);
            

            chart.draw(dataTable, options);
            refreshCountryList();
      	}

      	function highlightCountry(index) {
      		  chart.setSelection([{row:index, column: null}]);
      	}

      	function clearHighlight() {
      		  chart.setSelection();
      	}
		</script>

    <link rel="stylesheet" href="{!URLFOR($Resource.CurrencyCenter_Style, '/countries_map.css')}" />

    <style>
      path:not([fill^="#d4d9dc"]):hover {
        cursor:pointer;                
      }
    </style>
		
 	</head>

 	<body>
     	<div class="container">

        <c:ISSP_CustomNavigation />
      
      	<apex:form id="mainForm">  
          <apex:actionFunction name="refreshCountryList" action="{!null}" rerender="countryPanel"/>

        <div class="row">
          <div class="col-xs-12 header-country-heat-map">
            
            <div class="row">
              <a href="/ISSP_CurrencyCenterHome" class="back-home-link">{!$Label.CurrencyCenter_Back_Home}</a>
            </div>

            <div class="row page-title-wrapper country-heat-map">
              <div class="col-xs-8">
                <div class="page-title">{!$Label.CurrencyCenter_Country_Heat_Map}</div>
              </div>
              <div class="col-xs-2">
                <apex:OutputLabel styleclass="filter-label" value="{!$Label.ICCS_Category_Label}"/>
                <apex:selectList id="categoryFilter" value="{!selectedListType}" size="1" styleclass="form-control" onchange="drawRegionsMap();" label="Category">
                  <apex:selectOptions value="{!ListTypeOptions}"/>
                </apex:selectList>
              </div>
              <div class="col-xs-2">
                <apex:OutputLabel styleclass="filter-label" value="{!$Label.Region}"/>
                <apex:selectList id="regionFilter" value="{!selectedRegion}" size="1" styleclass="form-control" onchange="drawRegionsMap();" label="Region">
                  <apex:selectOptions value="{!ListRegionOptions}"/>
                </apex:selectList>
              </div>
            </div>
          </div>
        </div>

        <div class="row ">
          
          <!-- COUNTRIES MAP -->
          <div class="col-md-12 col-lg-8 col-map">
            <div id="regions_div" ></div>
          </div>
          
          <!-- COUNTRIES LIST -->
          <div class="col-md-12 col-lg-4 col-countries">
            
            <div class="panel">
              <div class="panel-heading">
                <h4 class="panel-title">
                  {! $Label.CurrencyCenter_Select_Country }
                </h4>
              </div>
              <apex:outputPanel id="countryPanel" layout="block" styleclass="panel-body countries-list">
                  
                  <apex:variable value="{!-1}" var="rowIndex"/>
                  <!--LAST VISIT:{!previousVisit}-->
                  <apex:repeat value="{!lstCountries}" var="country" >
                    <apex:variable var="rowIndex" value="{!rowIndex + 1}"/>

                    <apex:outputPanel layout="block" styleclass="col-xs-12 country-list-item" rendered="{!AND(OR(selectedListType=='',selectedListType==country.listType),OR(selectedRegion=='',selectedRegion==country.Region))}">
                      <apex:outputLink value="/ISSP_CurrencyCenterCountry?Id={!country.Id}" onmouseover="highlightCountry({!rowIndex});" onmouseout="clearHighlight();"><img src="{!URLFOR($Resource.CurrencyCenter_Style, '/flags/' + country.IsoCode + '.png')}" />&nbsp;{!country.Name}</apex:outputLink>
                      <apex:outputText rendered="{!isChangedList[rowIndex]}">&#42;&#42;&#42;</apex:outputText>
                    </apex:outputPanel>
                  </apex:repeat>
                
              </apex:outputPanel>
            </div>

          </div>
        </div>


        <c:ISSP_CustomFooter />
      	
      	</apex:form>
     	</div>
 	</body>
</html>
</apex:page>