<apex:page controller="ISSP_AccessToService" tabStyle="Contact" action="{!initialization}" standardStylesheets="false" showHeader="false" sidebar="false"  applyBodyTag="false" applyHtmlTag="false">
<html>
 <c:ISSP_Header communityName="{!communityName}"></c:ISSP_Header>    
 <body>
 <div class="container">
 <c:ISSP_CustomNavigation communityName="{!communityName}"/>

    <!---------------------------------------------------------------------->

    <apex:stylesheet value="{!URLFOR($Resource.BootstrapCSS, 'css/bootstrap.min.css')}" />    

    <!-- Load JS -->  
    <script language="JavaScript1.2" src="/js/functions.js"></script>
    <script src="/soap/ajax/9.0/connection.js" type="text/javascript"></script>
    <script id="clientEventHandlersJS" language="javascript"></script>
    <script src="{!URLFOR($Resource.BootstrapTable, 'bootstrap-table.min.js')}"></script>        

    <script>

      $contactStatus = '';
      $accountId = '';
      $contactId = '';
      $contactName = '';
      $CannotBeManagedByPortalAdmin = '';
      $isEasyPayService = '';

      function showReasonModalDeny() {
        $('#theReasonDeny').modal('show');
      }

      function showReasonModalGrant() {
          $('#theReasonGrant').modal('show');
      }

      function showConfirmModal() {  
        if ($contactStatus == 'PA' || $contactStatus == 'NO' || $contactStatus == 'IN') {
          $('#theConfirmModal').modal('show');
          $("[id$=pendingApprovalMsg]").hide();
          $("[id$=noUserMsg]").hide();
          $("[id$=inactiveUserMsg]").hide();
          $("[id$=confirmButton]").show();          

          if($contactStatus == 'PA')
            $("[id$=pendingApprovalMsg]").show();

          if($contactStatus == 'NO')
            $("[id$=noUserMsg]").show();

          if($contactStatus == 'IN') {
            $("[id$=inactiveUserMsg]").show();
            $("[id$=confirmButton]").hide();
          }

        } else {
          $('#theReasonGrant').modal('show');
        }
      }      

      function closeConfirmModal() {
          $('#theConfirmModal').modal('hide');
      }

      function closeModalDeny(param) {
        $('#theReasonDeny').modal('hide');
        if(param != 'X') {
          denyAccess();
          startLoading();
        }
      }

      function closeModalGrant(param) {
        $('#theReasonGrant').modal('hide');
        if(param != 'X' && $contactStatus != 'IN') {
          grantAccess();
          startLoading();
        }
      }

      function onCompleteSave() {
        endLoading();
        refreshList();
      }

    </script>


    
    <style type="text/css">
      a.alpha-link {
         font-weight: normal;
         font-size: 91%;
         padding: 0 4px;
         color: #015BA7 !important;
      }
       
      a.alpha-link+a.alpha-link {
         border-left: 1px solid #CFCECE;
      }
       
      a.alpha-link:hover {
         background-color: #e0f5fc !important;
      }
       
      a.alpha-select {
         font-weight: bold;
         text-decoration: none;
         background-color: #C6E1FF;
         color: #000000 !important;
      }
    </style>

    <apex:form id="AccServiceListForm">

    <apex:actionFunction name="denyAccess" action="{!denyAccess}" rerender="AccServices"/>
    <apex:actionFunction name="grantAccess" action="{!grantAccess}" rerender="AccServices"/>
    <apex:actionFunction name="refreshList" action="{!refreshList}" rerender="AccServices"/>

    <apex:actionFunction name="next" action="{!setCon.next}" rerender="AccServices" />
    <apex:actionFunction name="previous" action="{!setCon.previous}" rerender="AccServices" />
    <apex:actionFunction name="first" action="{!setCon.first}" rerender="AccServices" />
    <apex:actionFunction name="last" action="{!setCon.last}" rerender="AccServices" />
    <apex:actionFunction name="refresh" action="{!refresh}" rerender="AccServiceListForm" />
    <apex:inputHidden value="{!selectedList}" id="selectedItemHidden"/> 

<!--
    <apex:actionPoller id="poller" action="{!permissionSetPoller}" reRender="bla" interval="5" enabled="{!pollerOn}" oncomplete="onCompleteSave();"/>
    <apex:actionPoller id="poller" action="{!permissionSetPoller}" reRender="bla" interval="5" enabled="true" oncomplete="onCompleteSave();"/>    
-->
  
    <!-- <apex:pageMessages /> -->
    <h4>{!$Label.ISSP_Company_Administration} <span class="glyphicon glyphicon-chevron-right small " aria-hidden="true"></span>
         {!$Label.ISSP_Access_to_services} <span class="glyphicon glyphicon-chevron-right small " aria-hidden="true"></span>
         <small>{!$Label.ISSP_PageDescription_ISSP_AccessToService}</small></h4>
    
    <img src="/s.gif" alt="AccService" class="pageTitleIcon" title="Access to Service"/>
  <div class="row">
    <div class="col-md-4 col-sm-6 col-xs-12">
    <select id="testSelect" class="form-control selector" onchange="$('[id$=selectedItemHidden]').val($(this).val());refresh();">
        <apex:repeat value="{!ListViewNameList}" var="csName" id="theRepea1">
            <option value="{!csName}">{!$Label[AccServiceListViewMap[csName].Label_API_name__c]}</option>
        </apex:repeat>
    </select>
    </div>
  </div>
 
    <script>
        $('#testSelect').val( '{!selectedList}' );
    </script>
    
    <apex:pageBlock id="AccServices" > 

      <apex:actionPoller id="poller" action="{!permissionSetPoller}" reRender="bla" interval="5" enabled="{!pollerOn}" oncomplete="onCompleteSave();"/>

        <!-- context menu -->

        <div class="alert alert-danger" style="display:{!if(errorMessage.size==0 || errorMessage == null,'none','')}">
          <apex:repeat value="{!errorMessage}" var="er" id="theRepeat">
            <p><apex:outputText value="{!er}" escape="false" /></p>
          </apex:repeat>
        </div>

        <apex:inputHidden value="{!serviceId}" id="serviceId"/>
        <apex:inputHidden value="{!contactId}" id="contactId"/>
        <apex:inputHidden value="{!serviceName}" id="serviceName"/>
        <apex:inputHidden value="{!contactStatus}" id="contactStatus"/>

        <hr/>
        <apex:pageMessages escape="false"/>

        <apex:pageBlockTable value="{!AccServiceList}" var="item" styleClass="table-hover table table-condensed table-responsive" id="pbt_Services">

            <!--apex:column> 
                <apex:facet name="header" >
                    {!$Label.ISSP_My_Contact_Action}
                </apex:facet> 
                <apex:outputLink value="/apex/ISSP_EditPortalServiceAccess?&mid=M4S2&Id={!item.recordAccService.Id}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self" rendered="{!IF(item.recordAccService.Application_Name__c == 'IFAP',false,true)}">{!$Label.ISSP_Edit}</apex:outputLink> 
                <apex:outputLink value="/apex/ISSP_EditPortalServiceAccess?&mid=M4S2&Id={!item.recordAccService.Id}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self" rendered="{!IF(item.recordAccService.Application_Name__c == 'IFAP',true,false)}">{!$Label.ISSP_Edit}</apex:outputLink> 
            </apex:column-->
            
            <apex:repeat value="{!fields}" var="f">
                  <apex:column>
                    <apex:facet name="header">
                       <apex:commandLink action="{!refresh}" >{!f.label}
                         <apex:outputPanel layout="none" rendered="{!AND(OR(sortExpression==f.FieldPath,AND(sortExpression=='Name',f.FieldPath=='Name')), sortDirection='ASC')}">&#9650;</apex:outputPanel>
                         <apex:outputPanel layout="none" rendered="{!AND(OR(sortExpression==f.FieldPath,AND(sortExpression=='Name',f.FieldPath=='Name')), sortDirection='DESC')}">&#9660;</apex:outputPanel>
                         <apex:param value="{!f.FieldPath}" name="column" assignTo="{!sortExpression}" ></apex:param>
                       </apex:commandLink>
                    </apex:facet>
                     
                    <apex:outputpanel rendered="{!IF(f.label!='Contact'&& f.fieldPath!='Portal_Application__c' && f.label!='Portal Application Right Name',true,false)}"> 
                        <apex:outputfield value="{!item.recordAccService[f.fieldPath]}" />
                    </apex:outputpanel>
                    
                    <apex:outputpanel rendered="{!IF(f.label=='Portal Application Right Name',true,false)}"> 
                     <apex:outputLink value="/apex/ISSP_PortalServiceAccess?Id={!item.recordAccService.Id}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self">{!item.recordAccService.PortalServiceTranslatedName__c}</apex:outputLink>
                    </apex:outputpanel>
                    
                    <apex:outputpanel rendered="{!IF(f.label=='Contact',true,false)}"> 
                     <apex:outputLink value="/apex/ISSP_Contact?&mid=M4S1&Id={!item.recordAccService.Contact__c}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self">{!item.recordAccService.Contact__r.name}</apex:outputLink>
                    </apex:outputpanel>
                     
                    <apex:outputpanel rendered="{!IF(f.fieldPath=='Portal_Application__c',true,false)}">
                    <apex:outputLink value="/apex/ISSP_PortalService?Id={!item.recordAccService.Portal_Application__c}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self">{!item.recordAccService.PortalServiceTranslatedName__c}</apex:outputLink>
                    </apex:outputpanel>
                  </apex:column>
            </apex:repeat>

            <apex:column headerValue="Actions" id="actionId">
              <apex:outputPanel rendered='{! NOT(item.hide)}'>
                <button type="button" class="example2-button" data-state="{!item.recordAccService.PortalServiceTranslatedName__c};{!item.recordAccService.right__c};{!item.recordAccService.Portal_Application__c};{!item.recordAccService.contact__c};{!item.recordAccService.Contact__r.User_Portal_Status__c};{!item.contactStatus};{!item.recordAccService.Account__c};{!item.recordAccService.Contact__r.name};{!item.cannotBeManagedByPortalAdmin};{!item.isEasyPayService}"><span class="glyphicon glyphicon-cog"></span></button>
              </apex:outputPanel>
            </apex:column>

        </apex:pageBlockTable>

        <ul id="context-menu" class="dropdown-menu">
          <li data-item="grant"><a>{! $Label.ISSP_Grant_Access}</a></li>
          <li data-item="deny"><a>{! $Label.ISSP_Deny_Access}</a></li>
          <li data-item="ifapAssign"><a>{! $Label.ISSP_Assign_IFAP}</a></li>            
        </ul>  

        <script type="text/javascript">

          !function($) {

            'use strict';

            $.extend($.fn.bootstrapTable.defaults, {

              // Option defaults
              contextMenu: undefined,
              contextMenuTrigger: 'right',
              contextMenuAutoClickRow: true,
              contextMenuButton: undefined,
              beforeContextMenuRow: function (e, row, buttonElement) {
                // return false here to prevent menu showing
              },
              // Event default handlers
              onContextMenuItem: function (row, $element) {
                return false;
              },
              onContextMenuRow: function (row, $element) {
                return false;
              }
            });
  
          // Methods
          $.fn.bootstrapTable.methods.push('showContextMenu');

          // Events
          $.extend($.fn.bootstrapTable.Constructor.EVENTS, {
            'contextmenu-item.bs.table': 'onContextMenuItem',
            'contextmenu-row.bs.table': 'onContextMenuRow'
          });

          var BootstrapTable = $.fn.bootstrapTable.Constructor,
            _initBody = BootstrapTable.prototype.initBody;

          BootstrapTable.prototype.initBody = function () {

            // Init Body
            _initBody.apply(this, Array.prototype.slice.apply(arguments));

            // Init Context menu
            if (this.options.contextMenu || this.options.contextMenuButton || this.options.beforeContextMenuRow) {
              this.initContextMenu();
            }
          };

          // Init context menu
          BootstrapTable.prototype.initContextMenu = function () {
            var that = this;  

            console.log("on initContextMenu");

            // Context menu on Button-click
            if (typeof that.options.contextMenuButton === 'string') {

              console.log(that.options.contextMenuButton);

              that.$body.find('> tr[data-index]').find(that.options.contextMenuButton).off('click.contextmenu').on('click.contextmenu', function (e) {                
                var rowData = that.data[$(this).closest('tr[data-index]').data('index')],
                    beforeShow = that.options.beforeContextMenuRow.apply(this, [e, rowData, this]);

                console.log('rowData->' + rowData);
                console.log('beforeShow->' + beforeShow);

                if(beforeShow !== false){
                    that.showContextMenu({event: e, buttonElement: this});
                }
                return false;
              });
            }
          };

          // Show context menu
          BootstrapTable.prototype.showContextMenu = function (params) {

            console.log('params');
            console.log(params);
            console.log(params.buttonElement.getAttribute("data-state"));
            //alert('1');

            if(!params || !params.event){ return false; }
            if(params && !params.contextMenu && typeof this.options.contextMenu !== 'string'){ return false; }

            // in the data-state attribute we have the ServiceName;Right;ServiceId
            var dataState = params.buttonElement.getAttribute("data-state");

            var aux = dataState.split(";");

            console.log('aux->' + aux);

            var service = aux[0];
            var right = aux[1];
            var id = aux[2];
            $contactId = aux[3];
            var ups = aux[4];
            $contactStatus = aux[5];
            $accountId = aux[6];
            $contactName = aux[7];
            $CannotBeManagedByPortalAdmin = aux[8];
            $isEasyPayService = aux[9];

            console.log('CannotBeManagedByPortalAdmin-->' + $CannotBeManagedByPortalAdmin);
            console.log('isEasyPayService-->' + $isEasyPayService);
            console.log('service->' + service);
            console.log('right->' + right);
            console.log('id->' + id);
            console.log('ups->' + ups);
            console.log('contactStatus->' + $contactStatus);
            console.log('accountId->' + $accountId);

            // put the service name and id in the hidden input text fields.
            $('[id$=serviceId]').val(id);
            $('[id$=contactId]').val($contactId);
            $('[id$=serviceName]').val(service);
            $('[id$=contactStatus]').val($contactStatus);

            // Hide Show the menu options based in the service name and the right

            if($isEasyPayService == 'true') {
              $('li[data-item="grant"]').hide();
              $('li[data-item="deny"]').hide();
              $('li[data-item="ifapAssign"]').hide();              
              if($CannotBeManagedByPortalAdmin == 'true' && right == 'Access Granted') {
                $('li[data-item="deny"]').show();
              }
            } else {
              if($CannotBeManagedByPortalAdmin == 'true') {
                  $('li[data-item="grant"]').hide();
                  $('li[data-item="deny"]').hide();
                  $('li[data-item="ifapAssign"]').hide();
              } else {
                if(service == 'IFAP') {
                    $('li[data-item="grant"]').hide();
                    $('li[data-item="deny"]').hide();
                    $('li[data-item="ifapAssign"]').show();
                    if(right == 'Access Requested') {
                      $('li[data-item="deny"]').show();
                    }
                } else {
                  if(right == 'Access Denied') {
                    $('li[data-item="grant"]').show();
                    $('li[data-item="deny"]').hide();
                    $('li[data-item="ifapAssign"]').hide();
                  } else {
                    if(right == 'Access Requested') {
                      $('li[data-item="grant"]').show();
                      $('li[data-item="deny"]').show();
                      $('li[data-item="ifapAssign"]').hide();
                    } else {
                      $('li[data-item="grant"]').hide();
                      $('li[data-item="deny"]').show();
                      $('li[data-item="ifapAssign"]').hide();
                    }
                  }
                }
              }
            }

            var that = this,
                $menu, screenPosX, screenPosY,
                $tr = $(params.event.target).closest('tr[data-index]'),
                item = that.data[$tr.data('index')];


            if(params && !params.contextMenu && typeof this.options.contextMenu === 'string'){
              screenPosX = params.event.clientX;
              screenPosY = params.event.clientY;
              $menu = $(this.options.contextMenu);

              //alert($menu);
            }
            if(params && params.contextMenu){
              screenPosX = params.event.clientX;
              screenPosY = params.event.clientY;
              $menu = $(params.contextMenu);

            }
            if (params && params.buttonElement) {
              screenPosX = params.buttonElement.getBoundingClientRect().left;
              screenPosY = params.buttonElement.getBoundingClientRect().bottom;
            }

            function getMenuPosition($menu, screenPos, direction, scrollDir) {
              var win = $(window)[direction](),
                  scroll = $(window)[scrollDir](),
                  menu = $menu[direction](),
                  position = screenPos + scroll;

              console.log('inside getMenuPosition');

              if (screenPos + menu > win && menu < screenPos)
                position -= menu;

              return position;
            }

            // Bind click on menu item
            $menu.find('li').off('click.contextmenu').on('click.contextmenu', function (e) {
              var rowData = that.data[$menu.data('index')];

              console.log('hhj')
              console.log(rowData);

              that.trigger('contextmenu-item', rowData, $(this));
            });

            // Click anywhere to hide the menu
            $(document).triggerHandler('click.contextmenu');
            $(document).off('click.contextmenu').on('click.contextmenu', function (e) {
              // Fixes problem on Mac OSX
              if(that.pageX != e.pageX || that.pageY != e.pageY){
                $menu.hide();
                $(document).off('click.contextmenu');
              }
            });

            that.pageX = params.event.pageX;
            that.pageY = params.event.pageY;

            // Show the menu
            $menu.data('index', $tr.data('index'))
              .appendTo($('body'))
              .css({
                position: "absolute",
                left: getMenuPosition($menu, screenPosX, 'width', 'scrollLeft'),
                top: getMenuPosition($menu, screenPosY, 'height', 'scrollTop'),
                zIndex: 1100
              })
              .show();

            // Trigger events
            that.trigger('contextmenu-row', item, $tr);
            if(that.options.contextMenuAutoClickRow && that.options.contextMenuTrigger == 'right') {
              that.trigger('click-row', item, $tr);
            }
          };
          }(jQuery);    
                
          $(function() {      
            $('[id$=pbt_Services]').bootstrapTable({
              contextMenu: '#context-menu',
              contextMenuButton: '.example2-button',        
              onContextMenuItem: function(row, $el){
              sforce.connection.sessionId = '{!$Api.Session_ID}';

                if($el.data("item") == "grant"){          
                  showConfirmModal();
                }
                else if($el.data("item") == "deny"){
                  showReasonModalDeny();
                }
                else if($el.data("item") == "ifapAssign"){
                  window.location.href = "ISSP_AssignFinancialContact?id=" + $accountId + "&MainNav=Services&mid=M4S2&subNav=Access"; //&vContactId=" + $contactId + " &vContactName=" + $contactName;
                }
              }
            });
          });      
        </script>

        <div class="bottomNav" id="j_id0:YourListViewId_bottomNav">
           <div class="paginator">
              <span class="left">
                 <span class="selectorTarget" >
                    {!((setCon.PageNumber-1) * setCon.PageSize)+1} - {!IF(setCon.HasNext,((setCon.PageNumber-1) * setCon.PageSize)+11,setCon.ResultSize)}  {!$Label.ISSP_of} {!setCon.ResultSize }
                </span>
              </span>
              
          <span class="prevNextLinks">
          
           <span class="prevNext"  style="display:{!IF(setCon.HasPrevious,'none','')}">
                <img src="/s.gif" class="firstoff" alt="First Page"/>
           </span>
           <span class="prevNext"  style="display:{!IF(setCon.HasPrevious,'','none')}">
                <a href="javascript:first()"><img src="/s.gif" title="First Page" alt="First Page" class="first"/></a>
           </span>
           
           <span class="prevNext" style="display:{!IF(setCon.HasPrevious,'none','')}">
                <img src="/s.gif" class="prevoff" alt="Previous"/>{!$Label.ISSP_Previous}
            </span>
            <span class="prevNext" style="display:{!IF(setCon.HasPrevious,'','none')}">
                <a href="javascript:previous()"><img src="/s.gif" title="Previous" alt="Previous" class="prev"/>{!$Label.ISSP_Previous}</a>
            </span>
            
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'none','')}">{!$Label.ISSP_Next}
                <img src="/s.gif" class="nextoff" alt="Next"/>
            </span>
            <span class="prevNext" style="display:{!IF(setCon.HasNext,'','none')}">
                <a href="javascript:next()">Next<img src="/s.gif" title="Next" alt="Next" class="next"/></a>
            </span>
            
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'none','')}">
                <img src="/s.gif" class="lastoff" alt="Last Page"/>
           </span>
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'','none')}">
               <a href="javascript:last()"><img src="/s.gif" title="Last Page" alt="Last Page" class="last"/></a>
           </span>
           </span>
           <span class="right">{!$Label.ISSP_Page}
               {!setCon.PageNumber}
               {!$Label.ISSP_of} {!CEILING(noOfRecords/size)}
        
            </span>
           </div>
           <div class="clearingBox"></div>
        </div>
        </apex:pageBlock> 

        <!-- Modal ask for reason Deny -->
        <div class="modal fade" id="theReasonDeny">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title">{!$Label.ISSP_Service_Approval_Rejection_Reason}</h4>
              </div>
              <div class="modal-body">
                <apex:inputText value="{!denyReason}" StyleClass="form-control"   />
              </div>
              <div class="modal-footer">
                <apex:commandButton onclick="closeModalDeny('A');" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                <apex:commandButton onclick="closeModalDeny('X');" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
              </div>
            </div>
          </div>
        </div>  

        <div class="modal fade" id="theReasonGrant">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title">{!$Label.ISSP_Service_Approval_Rejection_Reason}</h4>
              </div>
              <div class="modal-body">
                <apex:inputText value="{!grantReason}"  StyleClass="form-control"/>
              </div>
              <div class="modal-footer">
                <apex:commandButton onclick="closeModalGrant('A');" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                <apex:commandButton onclick="closeModalGrant('X');" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
              </div>
            </div>
          </div>
        </div>


        <!-- Modal confirm access grant -->
        <div class="modal fade" id="theConfirmModal">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">

                <apex:outputPanel id="pendingApprovalMsg">
                  <h4 class="modal-title">
                    <apex:outputText value="{!$Label.ISSP_GrantAccess_PendingApproval}"
                      escape="false" />
                  </h4>
                </apex:outputPanel>


                <apex:outputPanel id="noUserMsg">
                  <h4 class="modal-title">
                    <apex:outputText value="{!$Label.ISSP_GrantAccess_NoUser}"
                      escape="false" />
                  </h4>
                </apex:outputPanel>

                <apex:outputPanel id="inactiveUserMsg">
                  <h4 class="modal-title">
                    <apex:outputText value="{!$Label.ISSP_GrantAccess_InactiveUser}"
                      escape="false" />
                  </h4>
                </apex:outputPanel>

              </div>
              <div class="modal-footer">
                <apex:commandButton id='confirmButton' onclick="closeConfirmModal();showReasonModalGrant();" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                <apex:commandButton onclick="closeConfirmModal();" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
              </div>
            </div>
          </div>
        </div>

        <div id="load_scrl" class="loadingBox loader" style="display:none;"> </div>
        <div class="loadingBox overlay"> </div>

        <style>
          .overlay {
            display: none;
            height: 100%;
            left: 0;
            position: fixed;
            top: 0;
            opacity: 0.3;
            -moz-opacity: 0.3;
            width: 100%;
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
            filter: alpha(opacity=30);
            background: #000;
            -khtml-opacity: 0.3;
            z-index: 1000;
          }
          .loader {
            background: url('/img/loading32.gif') scroll no-repeat 0 0;
            width: 32px;
            height: 32px;
            position: absolute;
            left: 50%;
            top: 150px;
          }
        </style>

        <script type="text/javascript">
          function startLoading() {
            //$("html, body").animate({ scrollTop: 0 }, "slow");
            //$('#load_scrl').css('top', $(document).scrollTop());
            $('.loadingBox').show();
          }
          function endLoading() {
            $('.loadingBox').hide();
          }

        </script>


     </apex:form>
    <!---------------------------------------------------------------------->


    <c:ISSP_CustomFooter communityName="{!communityName}"/>
</div><!-- end container-->
    </body>
    </html>
</apex:page>