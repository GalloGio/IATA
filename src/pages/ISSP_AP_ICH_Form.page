<apex:page controller="ISSP_APProcess" showHeader="false" sidebar="false" standardStylesheets="true" applyBodyTag="false" applyHtmlTag="false">
<c:iss_ap_css />

<link href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css" rel="stylesheet" />
<script src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>

<script>
    var EMAIL_PATTERN = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)";
    $(document).ready(function() {
        setRequired();
        preventEnter();
        setInvalidClass($(".form-container span.select2-selection"));
        $(".form-container span.select2-selection").on('DOMSubtreeModified',function() {
           setInvalidClass($(this));
        });
        // collapse all sections
        $(".hideListButton").each(function( index, value ) {
            twistSection(value);
        });
        twistSection($(".showListButton")[0]);
    });
    function setInvalidClass(jobj) {
       if(jobj.text()=="") {
           jobj.addClass("invalid");
       } else {
           jobj.removeClass("invalid");
       }
    }
    function setRequired() {
         $(".form-container input.required").prop('required',true);
         $(".form-container textarea.required").prop('required',true);
         $(".form-container table.required input").prop('required',true);
         $(".form-container select.required").prop('required',true);
         $(".form-container input.email").prop('pattern',EMAIL_PATTERN);
    }

    function preventEnter() {
        $(window).keydown(function(event){
            if(event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    }

    function section1CopyInfo() {
        var legalName = "{!hqAccount.Legal_name__c}";
        if (legalName=="") legalName = $(".form-origin-legalname").val();
        $(".form-legalname").val(legalName);
        $(".form-address").val("{!hqAccount.BillingStreet}");
        $(".form-city").val("{!hqAccount.BillingCity}");
        $(".form-state").val("{!hqAccount.BillingState}");
        $(".form-postalcode").val("{!hqAccount.BillingPostalCode}");
        $(".form-country").val("{!hqAccount.IATA_ISO_Country__c}").trigger("change");
        $(".form-email").val("{!hqAccount.Email__c}").trigger("change");
    }

    function twistSection(twisty) {
        var parentDiv = twisty;
        while (parentDiv.tagName != 'DIV') { parentDiv = parentDiv.parentNode; }
        var div = parentDiv.nextSibling;
        var elemWasOn = false;
        if (div.style.display != 'none') {
            div.style.display = 'none';
            twisty.className ='showListButton';
            elemWasOn = true;
        } else {
            div.style.display = 'block';
            twisty.className ='hideListButton';
            elemWasOn = false;
        }
    }

    async function saveFormAndGoForward() {
        var result = await verifyAllSections();
        if (result) {
            document.getElementById("hidden-input").value = "OK";
            saveBSPFormAndGoForward();
        } else {

        }
    }

    function hideAllSections() {
        $(".hideListButton").each( function(index,elem){
            twistSection(this);
        });
    }

    async function verifyAllSections() {
        hideAllSections();
        var sections = $(".showListButton");
        for (var i=0; i<sections.length; i++) {
            try {
                var section = sections[i];
                //find parent section div
                while (section.tagName != 'DIV') { section = section.parentNode; }
                section = section.parentNode;
                // show section if not valid
                if (!await validateSection(section)) {
                    twistSection(sections[i]);
                    return false;
                }
            } catch (e) {}
        }
        return true;
    }

    function getCheckUploadedFiles_Promise(files){
        return new Promise( function (resolve, reject){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ISSP_APProcess.checkMandatoryFiles}',
                '{!newCase.Id}',files, 
                function(response, event){
                    if(event.statusCode == '200'){
                        resolve(response);
                    } else {
                        reject();
                    }
                },{ escape: true, timeout: 30000 }
            );
        });
    }

    function checkUploadedFiles(files) {
        var CheckUploadedFiles_Promise = getCheckUploadedFiles_Promise(files);
        CheckUploadedFiles_Promise.then( 
            function (response){
                return response;
            },
            function (err){
                console.log('error checkUploadedFiles ' + err);
               return false;
            }
        ).catch( function(err){
            console.log('exception checkUploadedFiles ' + err);
            return false;
        });
        return CheckUploadedFiles_Promise;
    }

    async function validateSection(section) {
        var inputs = $(section).find(".required");
        for (var i=0; i<inputs.length; i++) {
            try {
                var checkInput = inputs[i];
                while (!["INPUT","SELECT","TEXTAREA"].includes(checkInput.tagName)) {
                    checkInput = checkInput.children[0];
                }
                $(checkInput).removeClass("blink-me");
                if (!checkInput.checkValidity()) {
                    var input = $(checkInput);
                    input.focus();
                    input.addClass("blink-me");
                    return false;
                }
            } catch (e) {}
        }
        // check file uploads (in iframes)
        var iframes = $(section).find("iframe");
        var fileNames = [];
        for (var i=0; i<iframes.length; i++) {
            try {
                var iframe = iframes[i];
                var name = parseURL(iframe.src).searchObject.reqIdentifier;
                if (name!='undefined') fileNames.push(name);
            } catch (e) {}
        }
        if (fileNames.length>0) {
            return await checkUploadedFiles(fileNames);
        }
        return true;
    }

    function parseURL(url) {
        var parser = document.createElement('a'),
            searchObject = {},
            queries, split, i;
        parser.href = url;
        queries = parser.search.replace(/^\?/, '').split('&');
        for( i = 0; i < queries.length; i++ ) {
            split = queries[i].split('=');
            searchObject[split[0]] = split[1];
        }
        return {
            protocol: parser.protocol,
            host: parser.host,
            hostname: parser.hostname,
            port: parser.port,
            pathname: parser.pathname,
            search: parser.search,
            searchObject: searchObject,
            hash: parser.hash
        };
    }

    async function saveContact() {
        var section = $(".modalPanel")[0];
        if (await validateSection(section)){
            saveContactController();
        }
    }
</script>

<style>
    .ICHPageBlock .account-field-label {
        color: green;
    }
    .form-container .copy-info {
        text-decoration: underline;
        cursor: pointer;
        color: #1797C0 !important;
        font-weight: bold;
    }
    .form-container .requiredBlock{
        display: none;
    }
    .form-container .invalid {
        -webkit-box-shadow: 0px 0px 5px 1px #c00;
        -moz-box-shadow: 0px 0px 5px 1px #c00;
        box-shadow: 0px 0px 5px 1px #c00;
    }
    .form-container :invalid {
        -webkit-box-shadow: 0px 0px 5px 1px #c00;
        -moz-box-shadow: 0px 0px 5px 1px #c00;
        box-shadow: 0px 0px 5px 1px #c00;
    }
    .form-container fieldset:invalid {
        -webkit-box-shadow: 0px 0px 0px 0px transparent;
        -moz-box-shadow: 0px 0px 0px 0px transparent;
        box-shadow: 0px 0px 0px 0px transparent;
    }

    .form-container fieldset {
        display:inline;
    }
    .form-container input[type="email"]{
        width: 90%;
    }
    .form-container input.date{
        width: 40% !important;
    }
    .form-container input[type="text"] {
        width: 90%;
    }
    .form-container textarea {
        width: 90%;
        resize: vertical;
    }
    .form-container .select2 {
        width: 90% !important;
    }
    .form-container .select2-selection {
        border-radius: 0px !important;
    }
    .form-container table.radio-short[role="presentation"] {
        width: 120px;
    }
    .form-container table.radio-short[role="presentation"]>tbody>tr>td {
        padding-left: 3px;
    }
    .form-container table.radio-short[role="presentation"]>tbody>tr>td>label {
        vertical-align: text-top;
        padding-left: 3px;
    }

    .form-container table.radio-select-bank-account[role="presentation"] {
        width: 50%;
        margin-left: 20%;
        font-size : 13px;
    }
    .form-container table.radio-select-bank-account[role="presentation"]>tbody>tr>td {
        padding: 10px 10px 10px 30px;
    }
    .form-container table.radio-select-bank-account[role="presentation"]>tbody>tr>td>label {
        vertical-align: text-top;
        padding-left: 12px;
        display: inline;
    }

    .form-container table.radio-data-privacy-laws[role="presentation"] {
        width: 90%;
        font-size : 13px;
    }
    .form-container table.radio-data-privacy-laws[role="presentation"]>tbody>tr>td {
        padding: 10px 10px 10px 30px;
    }
    .form-container table.radio-data-privacy-laws[role="presentation"]>tbody>tr>td>label {
        vertical-align: text-top;
        padding-left: 12px;
        display: inline;
    }

    .form-container table.radio-currency-clearance[role="presentation"]>tbody>tr>td {
        padding: 10px 10px 10px 30px;
    }
    .form-container table.radio-currency-clearance[role="presentation"]>tbody>tr>td>label {
        vertical-align: text-top;
        padding-left: 12px;
        display: inline;
    }

    .form-container img.help {
        padding-top: 3px;
        vertical-align: top;
    }

    .form-container .strong-label {
        font-weight: bold;
        color: #000;
        margin-top: 5px;
        margin-bottom: 5px;
        border: 0px solid #fff !important;
    }
    .form-container .strong-label a {
        text-decoration: underline;
        color: rgb(32, 107, 164) !important;
    }

    .form-container .blue-label {
        background-color: rgb(217, 237, 247);
        font-size: 13px;
        width: 98%;
        padding: 10px;
        margin: 10px;
        font-weight:700;
    }
    .form-container .blue-label-title{
        color: rgb(32, 107, 164);
        font-weight:700;
    }
    .form-container .blue-label-text{
        font-weight:300;
    }
    .form-container .link-highlighted {
        text-decoration: underline;
        color: rgb(32, 107, 164) !important;
    }
    .form-container .link-not-highlighted {
        text-decoration: none;
        color: rgb(32, 107, 164) !important;
        margin-left: 3px;
        margin-right: 3px;
    }

    /** Styles for a regular table with headers**/
    .regular-table {
      width: 100%;
    }
    .regular-table table {
      border-collapse: collapse;
    }
    .regular-table table,
    .regular-table tr,
    .regular-table td,
    .regular-table th {
      border: 1px solid black;
    }
    .regular-table-center table,
    .regular-table-center tr,
    .regular-table-center td,
    .regular-table-center th {
      text-align: center;
    }
    .regular-table-height-2_5 tr {
      height: 2.5em;
    }
    .regular-table th {
      font-weight: bold;
      font-family: sans-serif;
    }
    .regular-table table tr th:nth-child(1),
    .regular-table table tr td:nth-child(1) {
      width: 10em;
      font-weight: bold;
      font-family: sans-serif;
    }
    .back-color-1 {
        background-color: lightblue;
    }
    .back-color-2 {
        background-color: #cac4ed;
    }

    /* modal for new Contact */
    .modalBackground {
        background-color:grey;
        opacity: 0.50;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        z-index: 100;
        position: fixed;
    }
    .modalPanel {
        //left: 50%;
        //width: 600px;
        //margin-left: -300px;
        //top: 50%;
        //height: 400px;
        //margin-top: -200px;
        //z-index: 999;
        //position: fixed;
        //opacity: 1;
        left: 50%;
        width: 75%;
        margin-left: -35%;
        top: 50%;
        height: 10%;
        margin-top: -10%;
        z-index: 101;
        position: fixed;
        opacity: 1;
    }
    .modalPanel .apexp {
        -webkit-box-shadow: 10px 10px 10px 0px rgba(0,0,0,0.75);
        -moz-box-shadow: 10px 10px 10px 0px rgba(0,0,0,0.75);
        box-shadow: 10px 10px 10px 0px rgba(0,0,0,0.75);
    }
    .modalPanel .pbBody {
        margin: 0px !important;
    }
    .showListButton {
       background: transparent url(/img/alohaSkin/twisty_sprite.png) 0 -25px no-repeat !important; 
    }
    .hideListButton {
       background: transparent url(/img/alohaSkin/twisty_sprite.png) 0 -39px no-repeat !important; 
    }
    .blink-me {
      animation: blinker 0.15s linear 3;
    }
    @keyframes blinker {  
      50% { opacity: 0; }
    }
</style>

<div class="panel-primary">

    <div class="panel-heading head_panel_green">
        <h3 class="panel-title">{!PageTitle}</h3>
    </div>

    <div class="panel-body" id="body-enquiries">
        <c:ISSP_APProcess_Progress step="{!stepNumber}"
            operationType="{!strOperationType}"
            areaType="{!strAreaType}"
            changeType="{!strChangeType}"
            isSIS="{!OR(isISPAActive,isISUAActive)}" />

        <apex:form id="ICHForm" styleClass="inline form-container">

            <input id="hidden-input" type="hidden" class="required" required=""/>

            <apex:actionFunction name="saveContactController" action="{!saveContact}" rerender="ICHForm" status="WaitingStatus"/>
            <apex:actionFunction name="saveBSPFormAndGoForward" action="{!saveBSPFormAndGoForward}" rerender="ICHForm" status="WaitingStatus"/>
            <apex:actionFunction name="newContact" action="{!newContact}" rerender="ICHForm" status="WaitingStatus"/>
            <apex:actionFunction name="editContact" action="{!editContact}" rerender="ICHForm" status="WaitingStatus">
                <apex:param name="contactEndorsement" assignTo="{!selectedContactId}" value=""/>
            </apex:actionFunction>
            <apex:actionFunction name="deleteContact" action="{!deleteContact}" rerender="ICHForm" status="WaitingStatus">
                <apex:param name="contactEndorsement" assignTo="{!selectedContactId}" value=""/>
            </apex:actionFunction>

            <apex:pageBlock mode="edit">
                <!-- BUTTON SECTION -->
                <apex:pageBlockButtons location="bottom">
                    <apex:actionStatus id="blockButtons">
                        <apex:facet name="start">
                            <apex:outputPanel layout="none">
                                <apex:commandButton disabled="true" value="Previous"/>
                                <apex:commandButton disabled="true" value="Next"/>
                                <apex:commandButton disabled="true" value="Save Draft and Leave"/>
                            </apex:outputPanel>
                        </apex:facet>
                        
                        <apex:facet name="stop">
                            <apex:outputPanel layout="none">
                                <apex:commandButton action="{!saveBSPFormAndGoBack}" status="blockButtons" value="Previous" html-novalidate="" html-formnovalidate=""/>
                                <!--<apex:commandButton action="{!saveBSPFormAndGoForward}" status="blockButtons" value="Next" onclick="showInvalidSections();"/>-->
                                <input type="button" value="Next" class="btn" onclick="saveFormAndGoForward();"/>
                                <apex:commandButton action="{!saveBSPFormAndLeave}" status="blockButtons" value="Save Draft and Leave" html-novalidate="" html-formnovalidate=""/>
                            </apex:outputPanel>
                        </apex:facet>
                    </apex:actionStatus>
                </apex:pageBlockButtons>

                <apex:pageMessages />

                <div class="apcontainer">
                    <c:ICH_Form_IATA_Member ctrl="{!thisController}" rendered="{!IsICHType_IATAMember}"/>
                    <c:ICH_Form_Non_IATA_Member ctrl="{!thisController}" rendered="{!IsICHType_NonIATAMember}"/>
                    <c:ICH_Form_AssociateAggregator ctrl="{!thisController}" rendered="{!IsICHType_AssociateAggregator}"/>
                    <c:ICH_Form_AssociateSubsidiary ctrl="{!thisController}" rendered="{!OR(IsICHType_AssociateSubsidiary,IsICHType_AssociateSP)}"/>
                    <c:ICH_Form_SponsoredAirline ctrl="{!thisController}" rendered="{!IsICHType_SponsoredAirline}"/>
                    <c:ICH_Form_SponsoredAssociates ctrl="{!thisController}" rendered="{!IsICHType_SponsoredAssociates}"/>
                </div>
            </apex:pageBlock>

            <!-- MODAL for Contacts -->
            <apex:OutputPanel rendered="{!selectedContact!=null}">
                <div class="modalBackground"></div>
                <div class="modalPanel">
                    <apex:pageBlock id="contactBlock">

                        <apex:pageBlockSection columns="2" collapsible="false">
                            <apex:facet name="header">
                              <apex:outputpanel >
                                  Contact details
                              </apex:outputpanel>
                            </apex:facet>

                            <apex:pageBlockSectionItem rendered="{!!isSISMember}">
                                <apex:outputLabel >SIS Super User</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_SISSuperUser}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel >ICH Primary Contact</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_ICHPrimaryContact}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel >ICH Financial Contact</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_ICHFinancialContact}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel >ICH Advice Day Contact</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_ICHAdvice}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel >ICH Clearance Confirmation Contact</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_ICHCleanConfirmation}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel >ICH Clearance Initialization Contact</apex:outputLabel>
                                <apex:inputCheckbox value="{!selectedContactPosition_ICHCleanInitialization}"/>
                            </apex:pageBlockSectionItem>

                            <tr>
                              <td colspan="4"><div class="blue-label text-center">{!$Label.ISSP_AMS_Step3_PersonModal_CheckBoxes}</div></td>
                            </tr>

                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.Salutation}"/>
                                <apex:inputField value="{!selectedContact.Salutation__c}" styleclass="required test"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem rendered="{!isSISMember}"/>

                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.First_name}"/>
                                <apex:inputField styleclass="required" value="{!selectedContact.First_Name__c}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.Phone}"/>
                                <apex:inputField value="{!selectedContact.Phone__c}"/>
                            </apex:pageBlockSectionItem>

                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.Last_name}"/>
                                <apex:inputField styleclass="required" value="{!selectedContact.Last_Name__c}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.ISSP_Registration_MobilePhone}"/>
                                <apex:inputField value="{!selectedContact.Mobile_Phone__c}"/>
                            </apex:pageBlockSectionItem>

                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.Email}"/>
                                <apex:inputField styleclass="required email" value="{!selectedContact.Email__c}"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <apex:outputLabel value="{!$Label.ISSP_Fax}"/>
                                <apex:inputField value="{!selectedContact.Fax__c}"/>
                            </apex:pageBlockSectionItem>
                        </apex:pageBlockSection>
                        <!-- BUTTON SECTION -->
                        <apex:pageBlockButtons location="bottom">
                            <input type="button" class="btn" value="Save" onclick="saveContact();"/>
                            <apex:commandButton action="{!exitContact}" value="Cancel" html-novalidate="" html-formnovalidate="" rerender="ICHForm" status="WaitingStatus"/>
                        </apex:pageBlockButtons>
                    </apex:pageBlock>
                </div>
            </apex:outputPanel>
            <!-- END MODAL for Contacts -->

        <script>
            $(".select2").select2();
            $(".checked").prop("checked",true);
        </script>
        </apex:form>


    </div>
</div>

</apex:page>