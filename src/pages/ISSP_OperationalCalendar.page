<apex:page cache="false"
           sidebar="false"
           showHeader="false"
           standardStylesheets="false"
           readonly="true"
           controller="ISSP_OperationalCalendarController">

<c:ISSP_Header communityName="{!communityName}"></c:ISSP_Header>

<script src="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/lib/moment.min.js')}"></script>
<script src="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/lib/jquery.min.js')}"></script>
<script src="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/lib/jquery-ui.min.js')}"></script>
<script src="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/fullcalendar.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/ics.deps.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/lib/qtip/jquery.qtip.min.js')}"></script>

<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment-with-locales.min.js"></script>

<apex:stylesheet value="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/fullcalendar.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ISSP_OperationalCalendar, '/css/main.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ISSP_OperationalCalendar, '/lib/qtip/jquery.qtip.min.css')}"/>
<link href="//fonts.googleapis.com/css?family=Roboto:100,400,500" rel="stylesheet"/>

<style>
    .btn-primary {
        background-color: #23527C !important;
        background-image: none !important;
    }
    .btn-success {
        background-color: #5CB85C !important;
        background-image: none !important;
    }
</style>
<script>
    moment.locale("{!UserLanguage}");
    var LIST_FILTERS = {!listFiltersJson};
    var MAP_FREQUENCIES = {!mapFrequenciesJson};
    var MAP_COUNTRIES = {!mapCountriesJson};
    var SIS_OPTIONS = {!sisOptionsJson};

    var isAirline = {!isAirline};
    var defaultOperationType = "{!defaultOperationType}";
    var defaultSubtype = "{!defaultOperationSubtype}";
    var defaultCountry = "{!defaultCountry}";
    var defaultFrequency = "{!defaultFrequency}";
    var defaultCycle = "";
    if (isAirline) {
        defaultCountry = "";
        defaultOperationType = "";
        defaultFrequency = "";
    }
    var title = "{!$Label.ISSP_OperationalCalendar_Header}";
    console.log(MAP_FREQUENCIES);
    console.log(MAP_COUNTRIES);
    console.log(LIST_FILTERS);
    console.log(defaultOperationType);
    console.log(defaultSubtype);
    console.log(defaultCountry);
    console.log(defaultFrequency);
    $(document).ready(function() {
        initFilters();
        initCalendar();
        refreshEvents(true);

        $("#typeFilter").change(function() {
            updatePicklistsFromType();
            refreshEvents();
        });
        $("#subtypeFilter").change(function() {
            updatePicklistsFromSubtype();
            refreshEvents();
        });
        $("#cycleFilter").change(function() {
            refreshEvents();
        });
        $("#countryFilter").change(function() {
            //updatePicklistsFromCountry();
            refreshEvents();
        });
        $("#frequencyFilter").change(function() {
            //updatePicklistsFromFrequency();
            refreshEvents();
        });
        $("#currencyFilter").change(function() {
            refreshEvents();
        });
        $("#enableFiltersCheck").click(function() {
            var enabled = $(this).prop('checked');
            enableFilters(enabled);
        });
        $("#resetButton").click(function() {
            setFilterValue($("#typeFilter"), "", defaultOperationType);
            updatePicklistsFromType();
            setFilterValue($("#subtypeFilter"), "", defaultSubtype);
            updatePicklistsFromSubtype();
            setFilterValue($("#cycleFilter"), "", defaultCycle);
            setFilterValue($("#countryFilter"), "", defaultCountry);
            setFilterValue($("#frequencyFilter"), "", defaultFrequency);
            setFilterValue($("#currencyFilter"), "", "");
            $("#enableFiltersCheck").prop('checked',false);
            enableFilters(false);
            refreshEvents(true);
        });
        $("#syncCalendar").click(function() {
            alert('{!$Label.ISSP_OperationalCalendar_Export_Calendar_Disclaimer}');
            var calEntry = ics();
            var events= $('#calendar').fullCalendar('clientEvents')
            $.each(events, function (i, event) {
                    var title = event.title;
                    var place = '';
                    var begin = event.start.toDate();
                    var end = event.end==null? begin: event.end.toDate();
                    var description = '';
                    calEntry.addEvent(title,description, place, begin, end);
            });
            calEntry.download('IATA Operational Calendar');
        });
        // Calendar Style
        $( ".fc-past,.fc-future" )
          .mouseenter(function() {
            var elem = $(".fc-day-top[data-date='" + $(this).data("date") + "'] > .fc-day-number");
            elem.addClass("fc-day-number-hover");
            elem.css({"background-color": "LightGrey", "color": "White"});
          })
          .mouseleave(function() {
            var elem = $(".fc-day-top[data-date='" + $(this).data("date") + "'] > .fc-day-number");
            elem.removeClass("fc-day-number-hover");
            elem.css({"background-color": "White", "color": "Black"});
          });
    });

    function initFilters(){
        //populate first filter
        var listValues = containsInArray(LIST_FILTERS, '');
        updatePicklist($("#typeFilter"), listValues, 0, '');
        setFilterValue($("#typeFilter"), "{!$CurrentPage.parameters.ftype}", defaultOperationType);
        updatePicklistsFromType();
        setFilterValue($("#subtypeFilter"), "{!$CurrentPage.parameters.fsubtype}", defaultSubtype);
        updatePicklistsFromSubtype();
        setFilterValue($("#cycleFilter"), "{!$CurrentPage.parameters.fcycle}", defaultCycle);
        setFilterValue($("#countryFilter"), "{!$CurrentPage.parameters.fcountry}", defaultCountry);
        setFilterValue($("#frequencyFilter"), "{!$CurrentPage.parameters.ffrequency}", defaultFrequency);
        setFilterValue($("#currencyFilter"), "{!$CurrentPage.parameters.fcurrency}", "");
        var fenablefilters = "{!$CurrentPage.parameters.fenablefilters}";
        if (fenablefilters>"") {
            var isEnabled = fenablefilters=='true';
            $("#enableFiltersCheck").prop("checked",isEnabled);
            enableFilters(isEnabled);
        } else {
            if (!isAirline) {
                $("#enableFiltersCheck").prop("checked",false);
                enableFilters(false);
            }
        }
    }

    function setFilterValue(input, value, defaultvalue) {
        if (value=="all") {
            input.val("");
        } else if (value>"") {
            input.val(value);
        } else {
            input.val(defaultvalue);
        }
        if (input.val()==null) input.val(input.find("option:first").val());
    }

    function enableFilters(enabled) {
        if (isAirline) return;
        var disabled = !enabled;
        $("#typeFilter").prop("disabled",disabled);
        $("#subtypeFilter").prop("disabled",disabled);
        $("#cycleFilter").prop("disabled",disabled);
        $("#countryFilter").prop("disabled",disabled);
        $("#frequencyFilter").prop("disabled",disabled);
        $("#currencyFilter").prop("disabled",disabled);
        if (enabled) {
            $("#resetButton").removeClass("disabled");
        } else {
            $("#resetButton").addClass("disabled");
        }
    }
    
    function initCalendar() {
        var calendar =  $('#calendar').fullCalendar({
            height: 'auto',
            header: {
                left: 'title',
                center: 'showTable',
                right: 'prev,next'
            },
            views: {
              listMonth: {
                type: 'list',
                duration: { months: 1 }
              }
            },
            customButtons: {
              showTable: {
                text: '{!$Label.ISSP_OperationalCalendar_Full_Details}',
                click: function() {
                  var href = getDetailsUrl();
                  window.location.href = href;
                }
              }
            },
            validRange: {
              start: '{!TEXT(minDate)}',
              end: '{!TEXT(maxDate)}'
            },
            themeSystem: 'standard',
            displayEventTime: false,
            editable: false,
            selectable: false,
            defaultView: 'month',
            allDaySlot: false,
            selectHelper: false,
            droppable: false,
            
            // locale
            isRTL: false,
            firstDay: 1,
            monthNames: ['{!$Label.ISSP_AMS_Month_January}','{!$Label.ISSP_AMS_Month_February}','{!$Label.ISSP_AMS_Month_March}','{!$Label.ISSP_AMS_Month_April}','{!$Label.ISSP_AMS_Month_May}','{!$Label.ISSP_AMS_Month_June}','{!$Label.ISSP_AMS_Month_July}','{!$Label.ISSP_AMS_Month_August}','{!$Label.ISSP_AMS_Month_September}','{!$Label.ISSP_AMS_Month_October}','{!$Label.ISSP_AMS_Month_November}','{!$Label.ISSP_AMS_Month_December}'],
            monthNamesShort: ['{!$Label.PKB2_month_January}','{!$Label.PKB2_month_February}','{!$Label.PKB2_month_March}','{!$Label.PKB2_month_April}','{!$Label.PKB2_month_May}','{!$Label.PKB2_month_June}','{!$Label.PKB2_month_July}','{!$Label.PKB2_month_August}','{!$Label.PKB2_month_September}','{!$Label.PKB2_month_October}','{!$Label.PKB2_month_November}','{!$Label.PKB2_month_December}'],
            dayNames: ['{!$Label.ISSP_Weekday_Sunday}','{!$Label.ISSP_Weekday_Monday}','{!$Label.ISSP_Weekday_Tuesday}','{!$Label.ISSP_Weekday_Wednesday}','{!$Label.ISSP_Weekday_Thursday}','{!$Label.ISSP_Weekday_Friday}','{!$Label.ISSP_Weekday_Saturday}'],
            dayNamesShort: ['{!$Label.ISSP_Weekday_Short_Sunday}','{!$Label.ISSP_Weekday_Short_Monday}','{!$Label.ISSP_Weekday_Short_Tuesday}','{!$Label.ISSP_Weekday_Short_Wednesday}','{!$Label.ISSP_Weekday_Short_Thursday}','{!$Label.ISSP_Weekday_Short_Friday}','{!$Label.ISSP_Weekday_Short_Saturday}'],
            buttonText: {
                month: 'Month View',
                listMonth: 'Task List'
            },
            events: {!ListEventsJSON},
            eventRender: function(event, element) {
                if (event.description>"") {
                    element.qtip({
                        content: {
                            title: '<center>' + event.title + '</center>',
                            text: event.description
                        },
                        position: {
                            my: 'center left',
                            at: 'center right'
                        },
                        style: {
                            classes: 'qtip-blue qtip-rounded qtip-shadow'
                        }
                    });
                }
            }
        });
    }
    
    function setCalendarTitle() {
        var typeFilter = $("#typeFilter :selected");
        var subtypeFilter = $("#subtypeFilter :selected");
        var cycleFilter = $("#cycleFilter :selected");
        var countryFilter = $("#countryFilter :selected");
        var frequencyFilter = $("#frequencyFilter :selected");
        var titleText = "";
        if (typeFilter.val() == "BSP/CASS" || typeFilter.val() == "CNS") {
            if (subtypeFilter.val() > "") {
                if (countryFilter.val() > "") {
                    titleText = subtypeFilter.text() + " " + countryFilter.text();
                } else {
                    titleText = subtypeFilter.text();
                }
            }
        }
        if (typeFilter.val() == "SIS") {
            if (subtypeFilter.val() > "") {
                titleText = subtypeFilter.text();
            }
        }
        if (typeFilter.val() == "ICCS") {
            titleText = typeFilter.text();
            if (countryFilter.val() > "") {
                titleText += " " + countryFilter.text();
            }
            if (cycleFilter.val() > "") {
                titleText += " #" + cycleFilter.text();
            }
        }
        // set the title
        var divTitle = $("#title");
        if (titleText == "") {
            divTitle.hide();
        } else {
            divTitle.text(title.replace("{0}", titleText));
            divTitle.show();
        }
    }
    
    function getDetailsUrl() {
        let href="/ISSP_OperationalCalendarDetails?MainNav=resources&subNav=OperationalCalendar&mid=M2S4";
        let typeFilter = getFilterValue($("#typeFilter"));
        if (typeFilter!=null) {
            href+="&ftype=" + typeFilter;
        }
        let subtypeFilter = getFilterValue($("#subtypeFilter"));
        if (subtypeFilter!=null) {
            href+="&fsubtype=" + subtypeFilter;
        }
        let cycleFilter = getFilterValue($("#cycleFilter"));
        if (cycleFilter!=null) {
            href+="&fcycle=" + cycleFilter;
        }
        let countryFilter = getFilterValue($("#countryFilter"));
        if (countryFilter!=null) {
            href+="&fcountry=" + countryFilter;
        }
        let frequencyFilter = getFilterValue($("#frequencyFilter"));
        if (frequencyFilter!=null) {
            href+="&ffrequency=" + frequencyFilter;
        }
        let currencyFilter = getFilterValue($("#currencyFilter"));
        if (currencyFilter!=null) {
            href+="&fcurrency=" + currencyFilter;
        }
        if ($("#enableFiltersCheck").prop("checked")) {
            href+="&fenablefilters=true";
        }
        return href;
    }

    function getFilterValue(input) {
        if (input==null) return null;
        let value = encodeURIComponent(input.val());
        if (value=="") value = "all";
        return value
    }

    function refreshEvents(ignoreError) {
        hideError();
        setCalendarTitle();
        //remove existing events
        $("#calendar").fullCalendar('removeEvents' , function(e){ return true; });
        var operationType = nvl($("#typeFilter").val());
        if (operationType=="BSP/CASS") operationType=nvl($("#subtypeFilter").val());
        if (operationType == "CNS") operationType = nvl($("#subtypeFilter").val());
        if (operationType=="SIS") operationType=nvl($("#subtypeFilter").val());
        var cycle = nvl($("#cycleFilter").val());
        var country = nvl($("#countryFilter").val());
        var frequency = nvl($("#frequencyFilter").val());
        var currency = nvl($("#currencyFilter").val());
        console.log("operationType: " + operationType + " cycle: " + cycle + " country: " + country + " frequency: " + frequency + " currency: " + currency);
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ISSP_OperationalCalendarController.loadEventsRemote}',
            operationType, cycle, country, frequency, currency,
            function(result, event){
                if (event.status) {
                    setCalendarEvents($.parseJSON(result));
                } else if (event.type === 'exception') {
                    if (!ignoreError) showError(event.message);
                } else {
                    console.log('Unknown error in refreshEvents result: ' + unescape(result));
                }
            }, 
            {escape: false}
        );
    }

    function setCalendarEvents(listEvents){
        console.log(listEvents);
        var calendar =  $('#calendar');
        //remove existing events
        calendar.fullCalendar('removeEvents' , function(e){ return true; });
        if (listEvents.length ==0) {
            enableTable(false);
            showError("{!$Label.ISSP_OperationalCalendar_No_Events}");
        } else {
            // format dates
            $.each(listEvents, function (i, item) {
                item.description = item.description.replace(/<date>[0-9-: ]*<\/date>/gi, function (x) {
                    var formattedDate = moment($(x).text()).format('D MMM YYYY');
                    formattedDate = formattedDate=='Invalid date'? '': formattedDate;
                    return formattedDate ;
                });
            });
            // add new events
            calendar.fullCalendar('renderEvents' , listEvents, true);
            enableTable(true);
            $('.fc-event').tooltip({placement: "right"});
        }
    }
    
    function containsInArray(array, match) {
        var result = [];
        for (i = 0; i < array.length; i++) {
            if (array[i].includes(match)) {
                result.push(array[i])
            }
        }
        return result;
    };
    
    function nvl(value) {
        return value==null? "": value;
    }

    function updatePicklistsFromType() {
        var operationType = nvl($("#typeFilter").val());
        if (operationType=='BSP/CASS' || operationType == 'CNS') {
            $("#subtypeFilter").parent().removeClass("hidden");
            $("#cycleFilter").parent().addClass("hidden");
            $("#countryFilter").parent().addClass("hidden");
            $("#frequencyFilter").parent().addClass("hidden");
            $("#currencyFilter").parent().addClass("hidden");
            //populate BSP CASS subcategory picklist
            var listValues = containsInArray(LIST_FILTERS, operationType + ',');
            updatePicklist($("#subtypeFilter"), listValues,1,'');
            updatePicklistsFromSubtype();

        } else if (operationType=='SIS') {
            $("#subtypeFilter").parent().removeClass("hidden");
            $("#cycleFilter").parent().addClass("hidden");
            $("#countryFilter").parent().addClass("hidden");
            $("#frequencyFilter").parent().addClass("hidden");
            $("#currencyFilter").parent().addClass("hidden");
            //populate SIS subcategory picklist
            updatePicklist($("#subtypeFilter"), SIS_OPTIONS,0,'');
            updatePicklistsFromSubtype();

        } else if (operationType=='ICCS') {
            $("#cycleFilter").parent().removeClass("hidden");
            $("#subtypeFilter").parent().addClass("hidden");
            $("#countryFilter").parent().removeClass("hidden");
            $("#frequencyFilter").parent().addClass("hidden");
            $("#currencyFilter").parent().addClass("hidden");
            //populate visible picklists for ICCS
            var listValues = containsInArray(LIST_FILTERS,'ICCS,');
            updatePicklist($("#cycleFilter"), listValues,1,'');
            updatePicklist($("#countryFilter"), listValues,2,'');

        } else {
            $("#cycleFilter").parent().addClass("hidden");
            $("#subtypeFilter").parent().addClass("hidden");
            $("#countryFilter").parent().addClass("hidden");
            $("#frequencyFilter").parent().addClass("hidden");
            $("#currencyFilter").parent().addClass("hidden");
        }
    }

    function updatePicklistsFromSubtype() {
        var operationType = nvl($("#typeFilter").val());
        var operationSubtype = nvl($("#subtypeFilter").val());
        if (operationType=='BSP/CASS' || operationType == 'CNS') {
            $("#cycleFilter").parent().addClass("hidden");
            $("#countryFilter").parent().removeClass("hidden");
            $("#frequencyFilter").parent().removeClass("hidden");
            $("#currencyFilter").parent().removeClass("hidden");
            //populate visible picklists for SIS
            var listValues = containsInArray(LIST_FILTERS, operationType + ',' + operationSubtype + ',');
            updatePicklist($("#countryFilter"), listValues,2,'');
            updatePicklist($("#frequencyFilter"), listValues,3,'');
            updatePicklist($("#currencyFilter"), listValues,4,'');
        }
        if (operationType=='SIS') {
            $("#cycleFilter").parent().addClass("hidden");
            $("#subtypeFilter").parent().removeClass("hidden");
            $("#countryFilter").parent().addClass("hidden");
            $("#frequencyFilter").parent().removeClass("hidden");
            $("#currencyFilter").parent().addClass("hidden");
            //populate visible picklists for SIS
            var listValues = containsInArray(LIST_FILTERS,'SIS,');
            updatePicklist($("#frequencyFilter"), listValues,1,'');
        }
    }

    function updatePicklistsFromCountry() {
        var country = nvl($("#countryFilter").val());
        var operationType = nvl($("#typeFilter").val());
        var filter = country + ",";
        var listValues = containsInArray(LIST_FILTERS,filter);
        //updatePicklist($("#typeFilter"), listValues,1,operationType);
        updatePicklist($("#frequencyFilter"), listValues,2,'');
        updatePicklist($("#currencyFilter"), listValues,3,'');
        showDisclaimer(country,operationType);
    }

    function updatePicklistsFromFrequency() {
        var country = nvl($("#countryFilter").val());
        var operationType = nvl($("#typeFilter").val());
        var frequency = nvl($("#frequencyFilter").val());
        var filter = country + "," + operationType + ",";
        if (frequency>"") {
             filter+= frequency + ",";
        }
        var listValues = containsInArray(LIST_FILTERS,filter);
        updatePicklist($("#currencyFilter"), listValues,3,'');
    }

    function updatePicklist(inputSelect, listValues, position, defValue) {
        inputSelect.find('option').remove();
        var listUniqueValues = [];
        // get only the part required
        $.each(listValues, function (i, item) {
            listUniqueValues.push(item.split(",")[position]);
        });
        // remove duplicates
        listUniqueValues = listUniqueValues.sort().filter(function(item, pos, self) {
            return self.indexOf(item) == pos;
        });
        // add None option if required
        if (listUniqueValues.length!=1) {
            var option;
            if (inputSelect.attr("id")=="typeFilter" || inputSelect.attr("id") == "subtypeFilter") {
                option = $("<option>", { value: "", text: "--{!$Label.ANG_ISSP_Picklist_None}--" });
            } else {
                option = $("<option>", { value: "", text: "--{!$Label.ISSP_All}--" });
            }
            if (defValue == "") option.attr("selected", true);
            inputSelect.append(option);
        }
        // Add options
        $.each(listUniqueValues, function (i, item) {
            var label = item;
            if (inputSelect.attr("id")=="frequencyFilter") {
                label = MAP_FREQUENCIES[item];
            }
            if (inputSelect.attr("id")=="countryFilter") {
                label = MAP_COUNTRIES[item];
            }
            var option = $('<option>', {value: item,text: label});
            if (defValue==item) option.attr("selected",true);
            inputSelect.append(option);
        });
    }
    
    function enableTable(enabled){
        if (enabled) {
            $('div.fc-view-container').removeClass("disabled");
            $('div.fc-right').removeClass("disabled");
        } else {
            $('div.fc-view-container').addClass("disabled");
            $('div.fc-right').addClass("disabled");
        }
    }
    
    function showError(message) {
        $("#errormessage")
            .text(message)
            .show();
    }
    function hideError(message) {
        $("#errormessage").hide();
    }
</script>

<div class="container">
    <c:ISSP_CustomNavigation communityName="{!communityName}" />
    
    <div class="row">
        <div class="col-sm-12">
            <div id="title"></div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-sm-1"></div>
        <div class="col-sm-10">
            <div id="errormessage" class="alert alert-danger" style="display:none"></div>
        </div>
        <div class="col-sm-1"></div>
    </div>

    <apex:form id="disclaimer-form">
        <apex:actionFunction action="{!findDisclaimerLabel}" name="showDisclaimer" rerender="disclaimer-form">
            <apex:param name="selectedCountry" assignTo="{!selectedCountry}" value=""/>
            <apex:param name="selectedType" assignTo="{!selectedType}" value=""/>
        </apex:actionFunction>
        <apex:outputPanel layout="block" styleclass="row" rendered="{!NOT(ISBLANK(disclaimerLabelName))}">
            <div class="col-sm-1"></div>
            <div class="col-sm-10">
                <div class="alert alert-warning">{!$Label[disclaimerLabelName]}</div>
            </div>
            <div class="col-sm-1"></div>
        </apex:outputPanel>
    </apex:form>

    <div id="rowCalendar" class="row">
        <div class="col-sm-2">
            <apex:form >
                <apex:outputPanel layout="block" styleclass="form-group">
                    <button id="syncCalendar" class="btn btn-success btn-block" type="button">
                        <span class="glyphicon glyphicon-calendar"></span>
                        {!$Label.ISSP_OperationalCalendar_Sync_Calendar}
                    </button>
                </apex:outputPanel>
                <br/>
                <h3>{!$Label.ISSP_OperationalCalendar_FilterTitle}</h3>
                <div class="form-group">
                    <label for="typeFilter">Calendar Type</label>
                    <select id="typeFilter" class="form-control required"></select>
                </div>
                <div class="form-group hidden">
                    <label for="subtypeFilter">Subtype Calendar</label>
                    <select id="subtypeFilter" class="form-control required"></select>
                </div>
                <div class="form-group hidden">
                    <label for="cycleFilter">Cycle</label>
                    <select id="cycleFilter" class="form-control"></select>
                </div>
                <div class="form-group hidden">
                    <label for="countryFilterInput">{!$Label.ISSP_OperationalCalendar_CountryFilter}</label>
                    <select id="countryFilter" class="form-control"></select>
                </div>
                <div class="form-group hidden">
                    <label for="frequencyFilter">{!$Label.ISSP_OperationalCalendar_FrequencyFilter}</label>
                    <select id="frequencyFilter" class="form-control"></select>
                </div>
                <div class="form-group hidden">
                    <label for="currencyFilter">{!$Label.ISSP_OperationalCalendar_CurrencyFilter}</label>
                    <select id="currencyFilter" class="form-control"></select>
                </div>
                <apex:outputPanel layout="block" styleclass="form-group" rendered="{!NOT(isAirline)}">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="enableFiltersCheck"/>
                        <label class="form-check-label" for="enableFiltersCheck">{!$Label.ISSP_OperationalCalendar_EnableFilters}</label>
                    </div>
                </apex:outputPanel>
                <div class="form-group">
                    <button id="resetButton" class="btn btn-primary btn-block" type="button">{!$Label.ISSP_OperationalCalendar_Reset}</button>
                </div>
            </apex:form>
        </div>
        <div class="col-sm-10">
            <div id='calendar'></div>
        </div>
    </div> 
    <c:ISSP_CustomFooter communityName="{!communityName}"/>
</div>
</apex:page>