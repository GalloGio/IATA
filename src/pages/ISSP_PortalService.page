<apex:page controller="ISSP_PortalService" showHeader="false" sidebar="false" standardStylesheets="false" >
  <html>
  <c:ISSP_Header communityName="{!communityName}"></c:ISSP_Header>    
  <body>

  <apex:stylesheet value="{!URLFOR($Resource.BootstrapCSS, 'css/bootstrap.min.css')}" />    

  <script language="JavaScript1.2" src="/js/functions.js"></script>
  <script src="/soap/ajax/9.0/connection.js" type="text/javascript"></script>
  <script id="clientEventHandlersJS" language="javascript"></script>
  <script src="{!URLFOR($Resource.BootstrapTable, 'bootstrap-table.min.js')}"></script>

  <script>

    $contactStatus = '';
    $accountId = '';
    $contactId = '';
    $contactName = '';
    $CannotBeManagedByPortalAdmin = '';
    $isEasyPayService = '';

    function showReasonModalDeny() {
      $('#theReasonDeny').modal('show');
    }

    function showReasonModalGrant() {
        $('#theReasonGrant').modal('show');
    }

    function showConfirmModal() {  
      if ($contactStatus == 'PA' || $contactStatus == 'NO' || $contactStatus == 'IN') {
        $('#theConfirmModal').modal('show');
        $("[id$=pendingApprovalMsg]").hide();
        $("[id$=noUserMsg]").hide();
        $("[id$=inactiveUserMsg]").hide();
        $("[id$=confirmButton]").show();          

        if($contactStatus == 'PA')
          $("[id$=pendingApprovalMsg]").show();

        if($contactStatus == 'NO')
          $("[id$=noUserMsg]").show();

        if($contactStatus == 'IN') {
          $("[id$=inactiveUserMsg]").show();
          $("[id$=confirmButton]").hide();
        }

      } else {
        $('#theReasonGrant').modal('show');
      }
    }      

    function closeConfirmModal() {
        $('#theConfirmModal').modal('hide');
    }

    function closeModalDeny(param) {
      $('#theReasonDeny').modal('hide');
      if(param != 'X') {
        denyAccess();
        startLoading();
      }
    }

    function closeModalGrant(param) {
      $('#theReasonGrant').modal('hide');
      if(param != 'X' && $contactStatus != 'IN') {
        grantAccess();
        startLoading();
      }
    }

    function onCompleteSave() {
      endLoading();
      refreshList();
    }

  </script>  
 
  <div class="container">

      <c:ISSP_CustomNavigation communityName="{!communityName}"/>
        <div class="ptBreadcrumb">&nbsp;&#171;&nbsp;
            <a href="/apex/ISSP_AvailableServices?MainNav=Services&subNav=Access&mid=M3S1">Back to List: Portal Service </a>
        </div>
          <div class="panel panel-primary">
              <div class="panel-heading head_panel_green">
                  <h3 class="panel-title">{!$Label.ISSP_Portal_Service_Information}</h3>
              </div>
             <div class="panel-body" id="body-enquiries">
                 <div class="row">
                     <div class="col-lg-9">
                 
                             <div class="row">
                                            <label class="lbl lbl col-lg-3">{!$Label.ISSP_Portal_Service}:</label>
                                           <p class="col-lg-6">{!PortalService.ServiceName__c} </p>
                              </div> <!-- end row -->
                             
                             <div class="row">
                                            <label class="lbl lbl col-lg-3">{!$Label.ISSP_Portal_Service_Details}:</label>
                                           <p class="col-lg-6"><apex:outputLabel escape="false" value="{!PortalService.Service_Description__c}" /></p>
                                
                              </div> <!-- end row -->
                    </div><!-- end col-lg-10 -->
                    <div class="col-lg-3">
                      <apex:outPutField value="{!PortalService.Application_icon__c}"/>
                    </div>
                </div> 
                 </div><!--end panel body -->
                <!--<apex:form rendered="{!IF($Profile.Name == 'System Administrator' ||$Profile.Name == 'ISS Portal Agency Delegated Admin User' || $Profile.Name == 'ISS Portal Airline Delegated Admin User' || $Profile.Name == 'ISS Portal Delegated Admin User'  || $Profile.Name == 'ISS Portal GSA Delegated Admin User',true,false)   }">-->
                <apex:form id="AccServiceListForm">
                  <apex:actionFunction name="denyAccess" action="{!denyAccess}" reRender="CustomList"/>
                  <apex:actionFunction name="grantAccess" action="{!grantAccess}" reRender="CustomList"/>
                  <apex:actionFunction name="refreshList" action="{!refreshList}" reRender="CustomList"/>
                

                  <apex:inputHidden value="{!serviceId}" id="serviceId"/>
                  <apex:inputHidden value="{!contactId}" id="contactId"/>
                  <apex:inputHidden value="{!serviceName}" id="serviceName"/>
                  <apex:inputHidden value="{!contactStatus}" id="contactStatus"/>

                  <apex:pageblock>               
                    <h3 class="blueback">Users
                      <center> 
                        <apex:commandButton action="{!RedirectToServiceAccess}" styleclass="btn btn-sm btn-primary"
                          value="{!$Label.ISSP_Add_User_to_this_service}" 
                          rendered="{!!PortalService.Cannot_be_managed_by_portal_admin__c}"/>
                      </center>                     
                    </h3>
                    <apex:outputPanel id="CustomList">
                      <apex:actionPoller id="poller" action="{!permissionSetPoller}" reRender="bla" interval="5" enabled="{!pollerOn}" oncomplete="onCompleteSave();"/>                                    
                  
                      <div style="padding-left: 10px; padding-right: 10px;">
                        <apex:pageBlockTable value="{!appsGrantedList}" var="o" styleClass="table-hover table table-condensed table-responsive" id="pbt_Services">
                            <!--apex:column style="text-align: center;" >
                              <apex:outputLink value="/ISSP_EditPortalServiceAccess?Id={!o.par.Id}&op=Edit&retURL=ISSP_PortalService?id={!o.par.Portal_Application__c}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="_self">{!$Label.ISSP_Edit}</apex:outputLink>
                            </apex:column-->  
                            <apex:column headerValue="Account Name" style="text-align: center;" >
                              <apex:outputLink value="/apex/ISSP_Account?id={!o.par.Contact__r.AccountId}{!if(communityName=='CNS','&CommunityName='+communityName,'')}"  >{!o.par.Contact__r.Account.Name}</apex:outputLink>
                            </apex:column>
                          
                            <apex:column value="{!o.par.Contact__r.FirstName}" style="text-align: center;" />
                            <apex:column value="{!o.par.Contact__r.LastName}" style="text-align: center;" />
                            <apex:column value="{!o.par.Right__c}" style="text-align: center;" />
                            <apex:column value="{!o.par.ANG_Portal_Service_Role__c}" style="text-align: center;" />                      
                          
                            <apex:column headerValue="Actions" id="actionId" >
                              <apex:outputPanel rendered='{! NOT(o.hide)}'>
                                <button type="button" class="example2-button" data-state="{!PortalService.ServiceName__c};{!o.par.Right__c};{!o.par.Portal_Application__c};{!o.par.contact__c};{!o.par.Contact__r.User_Portal_Status__c};{!o.contactStatus};{!o.par.Account__c};{!o.par.Contact__r.name};{!o.cannotBeManagedByPortalAdmin};{!o.isEasyPayService}"><span class="glyphicon glyphicon-cog"></span></button>
                              </apex:outputPanel>
                            </apex:column>
                        </apex:pageBlockTable>
                      </div>

                      <ul id="context-menu" class="dropdown-menu">
                        <li data-item="grant"><a>{! $Label.ISSP_Grant_Access}</a></li>
                        <li data-item="deny"><a>{! $Label.ISSP_Deny_Access}</a></li>
                        <li data-item="ifapAssign"><a>{! $Label.ISSP_Assign_IFAP}</a></li>            
                      </ul>  

                      <script type="text/javascript">

                        !function($) {

                          'use strict';

                          $.extend($.fn.bootstrapTable.defaults, {

                            // Option defaults
                            contextMenu: undefined,
                            contextMenuTrigger: 'right',
                            contextMenuAutoClickRow: true,
                            contextMenuButton: undefined,
                            beforeContextMenuRow: function (e, row, buttonElement) {
                              // return false here to prevent menu showing
                            },
                            // Event default handlers
                            onContextMenuItem: function (row, $element) {
                              return false;
                            },
                            onContextMenuRow: function (row, $element) {
                              return false;
                            }
                          });
                
                        // Methods
                        $.fn.bootstrapTable.methods.push('showContextMenu');

                        // Events
                        $.extend($.fn.bootstrapTable.Constructor.EVENTS, {
                          'contextmenu-item.bs.table': 'onContextMenuItem',
                          'contextmenu-row.bs.table': 'onContextMenuRow'
                        });

                        var BootstrapTable = $.fn.bootstrapTable.Constructor,
                          _initBody = BootstrapTable.prototype.initBody;

                        BootstrapTable.prototype.initBody = function () {

                          // Init Body
                          _initBody.apply(this, Array.prototype.slice.apply(arguments));

                          // Init Context menu
                          if (this.options.contextMenu || this.options.contextMenuButton || this.options.beforeContextMenuRow) {
                            this.initContextMenu();
                          }
                        };

                        // Init context menu
                        BootstrapTable.prototype.initContextMenu = function () {
                          var that = this;  

                          console.log("on initContextMenu");

                          // Context menu on Button-click
                          if (typeof that.options.contextMenuButton === 'string') {

                            console.log(that.options.contextMenuButton);

                            that.$body.find('> tr[data-index]').find(that.options.contextMenuButton).off('click.contextmenu').on('click.contextmenu', function (e) {                
                              var rowData = that.data[$(this).closest('tr[data-index]').data('index')],
                                  beforeShow = that.options.beforeContextMenuRow.apply(this, [e, rowData, this]);

                              console.log('rowData->' + rowData);
                              console.log('beforeShow->' + beforeShow);

                              if(beforeShow !== false){
                                  that.showContextMenu({event: e, buttonElement: this});
                              }
                              return false;
                            });
                          }
                        };

                        // Show context menu
                        BootstrapTable.prototype.showContextMenu = function (params) {

                          console.log('params');
                          console.log(params);
                          console.log(params.buttonElement.getAttribute("data-state"));
                          //alert('1');

                          if(!params || !params.event){ return false; }
                          if(params && !params.contextMenu && typeof this.options.contextMenu !== 'string'){ return false; }

                          // in the data-state attribute we have the ServiceName;Right;ServiceId
                          var dataState = params.buttonElement.getAttribute("data-state");

                          var aux = dataState.split(";");

                          console.log('aux->' + aux);

                          var service = aux[0];
                          var right = aux[1];
                          var id = aux[2];
                          $contactId = aux[3];
                          var ups = aux[4];
                          $contactStatus = aux[5];
                          $accountId = aux[6];
                          $contactName = aux[7];
                          $CannotBeManagedByPortalAdmin = aux[8];
                          $isEasyPayService = aux[9];

                          console.log('CannotBeManagedByPortalAdmin-->' + $CannotBeManagedByPortalAdmin);
                          console.log('isEasyPayService-->' + $isEasyPayService);
                          console.log('service->' + service);
                          console.log('right->' + right);
                          console.log('id->' + id);
                          console.log('ups->' + ups);
                          console.log('contactStatus->' + $contactStatus);
                          console.log('accountId->' + $accountId);

                          // put the service name and id in the hidden input text fields.
                          $('[id$=serviceId]').val(id);
                          $('[id$=contactId]').val($contactId);
                          $('[id$=serviceName]').val(service);
                          $('[id$=contactStatus]').val($contactStatus);

                          // Hide Show the menu options based in the service name and the right

                          if($isEasyPayService == 'true') {
                            $('li[data-item="grant"]').hide();
                            $('li[data-item="deny"]').hide();
                            $('li[data-item="ifapAssign"]').hide();              
                            if($CannotBeManagedByPortalAdmin == 'true' && right == 'Access Granted') {
                              $('li[data-item="deny"]').show();
                            }
                          } else {
                            if($CannotBeManagedByPortalAdmin == 'true') {
                                $('li[data-item="grant"]').hide();
                                $('li[data-item="deny"]').hide();
                                $('li[data-item="ifapAssign"]').hide();
                            } else {
                              if(service == 'IFAP') {
                                  $('li[data-item="grant"]').hide();
                                  $('li[data-item="deny"]').hide();
                                  $('li[data-item="ifapAssign"]').show();
                                  if(right == 'Access Requested') {
                                    $('li[data-item="deny"]').show();
                                  }
                              } else {
                                if(right == 'Access Denied') {
                                  $('li[data-item="grant"]').show();
                                  $('li[data-item="deny"]').hide();
                                  $('li[data-item="ifapAssign"]').hide();
                                } else {
                                  if(right == 'Access Requested') {
                                    $('li[data-item="grant"]').show();
                                    $('li[data-item="deny"]').show();
                                    $('li[data-item="ifapAssign"]').hide();
                                  } else {
                                    $('li[data-item="grant"]').hide();
                                    $('li[data-item="deny"]').show();
                                    $('li[data-item="ifapAssign"]').hide();
                                  }
                                }
                              }
                            }
                          }

                          var that = this,
                              $menu, screenPosX, screenPosY,
                              $tr = $(params.event.target).closest('tr[data-index]'),
                              item = that.data[$tr.data('index')];


                          if(params && !params.contextMenu && typeof this.options.contextMenu === 'string'){
                            screenPosX = params.event.clientX;
                            screenPosY = params.event.clientY;
                            $menu = $(this.options.contextMenu);

                            //alert($menu);
                          }
                          if(params && params.contextMenu){
                            screenPosX = params.event.clientX;
                            screenPosY = params.event.clientY;
                            $menu = $(params.contextMenu);

                          }
                          if (params && params.buttonElement) {
                            screenPosX = params.buttonElement.getBoundingClientRect().left;
                            screenPosY = params.buttonElement.getBoundingClientRect().bottom;
                          }

                          function getMenuPosition($menu, screenPos, direction, scrollDir) {
                            var win = $(window)[direction](),
                                scroll = $(window)[scrollDir](),
                                menu = $menu[direction](),
                                position = screenPos + scroll;

                            console.log('inside getMenuPosition');

                            if (screenPos + menu > win && menu < screenPos)
                              position -= menu;

                            return position;
                          }

                          // Bind click on menu item
                          $menu.find('li').off('click.contextmenu').on('click.contextmenu', function (e) {
                            var rowData = that.data[$menu.data('index')];

                            console.log('hhj')
                            console.log(rowData);

                            that.trigger('contextmenu-item', rowData, $(this));
                          });

                          // Click anywhere to hide the menu
                          $(document).triggerHandler('click.contextmenu');
                          $(document).off('click.contextmenu').on('click.contextmenu', function (e) {
                            // Fixes problem on Mac OSX
                            if(that.pageX != e.pageX || that.pageY != e.pageY){
                              $menu.hide();
                              $(document).off('click.contextmenu');
                            }
                          });

                          that.pageX = params.event.pageX;
                          that.pageY = params.event.pageY;

                          // Show the menu
                          $menu.data('index', $tr.data('index'))
                            .appendTo($('body'))
                            .css({
                              position: "absolute",
                              left: getMenuPosition($menu, screenPosX, 'width', 'scrollLeft'),
                              top: getMenuPosition($menu, screenPosY, 'height', 'scrollTop'),
                              zIndex: 1100
                            })
                            .show();

                          // Trigger events
                          that.trigger('contextmenu-row', item, $tr);
                          if(that.options.contextMenuAutoClickRow && that.options.contextMenuTrigger == 'right') {
                            that.trigger('click-row', item, $tr);
                          }
                        };
                        }(jQuery);    
                              
                        $(function() {      
                          $('[id$=pbt_Services]').bootstrapTable({
                            contextMenu: '#context-menu',
                            contextMenuButton: '.example2-button',        
                            onContextMenuItem: function(row, $el){
                            sforce.connection.sessionId = '{!$Api.Session_ID}';

                              if($el.data("item") == "grant"){          
                                showConfirmModal();
                              }
                              else if($el.data("item") == "deny"){
                                showReasonModalDeny();
                              }
                              else if($el.data("item") == "ifapAssign"){
                                window.location.href = "ISSP_AssignFinancialContact?id=" + $accountId + "&MainNav=Services&mid=M4S2&subNav=Access"; //&vContactId=" + $contactId + " &vContactName=" + $contactName;
                              }
                            }
                          });
                        });      
                      </script>



                    </apex:outputPanel>
                  
                  </apex:pageblock>

                  <!-- Modal ask for reason Deny -->
                  <div class="modal fade" id="theReasonDeny">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h4 class="modal-title">{!$Label.ISSP_Service_Approval_Rejection_Reason}</h4>
                        </div>
                        <div class="modal-body">
                          <apex:inputText value="{!denyReason}" StyleClass="form-control"   />
                        </div>
                        <div class="modal-footer">
                          <apex:commandButton onclick="closeModalDeny('A');" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                          <apex:commandButton onclick="closeModalDeny('X');" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
                        </div>
                      </div>
                    </div>
                  </div>  

                  <div class="modal fade" id="theReasonGrant">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h4 class="modal-title">{!$Label.ISSP_Service_Approval_Rejection_Reason}</h4>
                        </div>
                        <div class="modal-body">
                          <apex:inputText value="{!grantReason}"  StyleClass="form-control"/>
                        </div>
                        <div class="modal-footer">
                          <apex:commandButton onclick="closeModalGrant('A');" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                          <apex:commandButton onclick="closeModalGrant('X');" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
                        </div>
                      </div>
                    </div>
                  </div>


                  <!-- Modal confirm access grant -->
                  <div class="modal fade" id="theConfirmModal">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">

                          <apex:outputPanel id="pendingApprovalMsg">
                            <h4 class="modal-title">
                              <apex:outputText value="{!$Label.ISSP_GrantAccess_PendingApproval}"
                                escape="false" />
                            </h4>
                          </apex:outputPanel>


                          <apex:outputPanel id="noUserMsg">
                            <h4 class="modal-title">
                              <apex:outputText value="{!$Label.ISSP_GrantAccess_NoUser}"
                                escape="false" />
                            </h4>
                          </apex:outputPanel>

                          <apex:outputPanel id="inactiveUserMsg">
                            <h4 class="modal-title">
                              <apex:outputText value="{!$Label.ISSP_GrantAccess_InactiveUser}"
                                escape="false" />
                            </h4>
                          </apex:outputPanel>

                        </div>
                        <div class="modal-footer">
                          <apex:commandButton id='confirmButton' onclick="closeConfirmModal();showReasonModalGrant();" value="{!$Label.ISSP_Confirm}" rerender="pgBlock" StyleClass="btn btn_iata_success" />
                          <apex:commandButton onclick="closeConfirmModal();" value="{!$Label.ISSP_Cancel}"  rerender="pgBlock" StyleClass="btn btn-primary"/>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div id="load_scrl" class="loadingBox loader" style="display:none;"> </div>
                  <div class="loadingBox overlay"> </div>

                  <style>
                    .overlay {
                      display: none;
                      height: 100%;
                      left: 0;
                      position: fixed;
                      top: 0;
                      opacity: 0.3;
                      -moz-opacity: 0.3;
                      width: 100%;
                      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
                      filter: alpha(opacity=30);
                      background: #000;
                      -khtml-opacity: 0.3;
                      z-index: 1000;
                    }
                    .loader {
                      background: url('/img/loading32.gif') scroll no-repeat 0 0;
                      width: 32px;
                      height: 32px;
                      position: absolute;
                      left: 50%;
                      top: 150px;
                    }
                  </style>

                  <script type="text/javascript">
                    function startLoading() {
                      $('.loadingBox').show();
                    }
                    function endLoading() {
                      $('.loadingBox').hide();
                    }

                  </script>

                </apex:form>
                                
          </div><!-- end  div class="panel panel-primary"-->

      <c:ISSP_CustomFooter communityName="{!communityName}"/>
  </div><!-- end container-->  
        </body>
    </html>
</apex:page>