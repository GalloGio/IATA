<apex:page controller="ISSP_ChangePassword" showHeader="false" standardStylesheets="false"  applyBodyTag="false" applyHtmlTag="false">
    <html>
        <style type="text/css">
          .checked {
            color: #228B22;
          }

          .checkCircle label {
            display: block;
            width: 15px;
            height: 15px;
            border-radius: 50px;

            transition: all .5s ease;
            cursor: pointer;
            position: absolute;
            top: 2.5px;
            left: 2.5px;
            z-index: 1;

            box-shadow:inset 0px 1px 4px rgba(0,0,0,0.5);
          }

          .checkCircle input[type=checkbox]:checked + label {
            background: #228B22;
          }

        </style>
        <c:ISSP_Header communityName="{!communityName}"></c:ISSP_Header>
        <body>
            <div class="container">
                <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <div class="panel panel-primary" style="margin-top:5%">
                        <div class="panel-heading">
                          {!$Label.CSP_Change_Password}
                        </div>

                        <div class="panel-body">
                            <apex:form id="formLogin" forceSSL="true">
                                <div class="alert alert-danger" style="display:{!if(errorMessage.size==0,'none','')}">
                                    <apex:repeat value="{!errorMessage}" var="er" id="theRepeat">
                                        <p><apex:outputText value="{!er}" escape="false" /></p>
                                    </apex:repeat>
                                </div>

                                <div class="alert alert-info" style="display:{!if(changePasswordMessage == true,'','none')}">
                                    <p><apex:outputText value="{!$Label.ISSP_60Day_Password_Reset}" escape="false" /></p>
                                </div>

                                <div class="output-group">
                                    <p>{!$Label.CSP_Change_Password_Info_2}</p>
                                    <div>
                                        <div class="checkCircle col-md-1" >
                                            <input type="checkbox" value="1" id="checkCircleInputChars" hidden="true" disabled="true" />
                                            <label for="checkCircleInput"></label>
                                        </div>
                                        <p id='chars' class="notChecked">{!$Label.CSP_Password_Rule_1}</p>
                                    </div>
                                    <div>
                                        <div class="checkCircle col-md-1" >
                                            <input type="checkbox" value="1" id="checkCircleInputLetter" hidden="true" disabled="true" />
                                            <label for="checkCircleInput"></label>
                                        </div>
                                        <p id='letter' class="notChecked">{!$Label.CSP_Password_Rule_2}</p>
                                    </div>
                                    <div>
                                        <div class="checkCircle col-md-1" >
                                            <input type="checkbox" value="1" id="checkCircleInputNumber" hidden="true" disabled="true" />
                                            <label for="checkCircleInput"></label>
                                        </div>
                                        <p id='number' class="notChecked">{!$Label.CSP_Password_Rule_3}</p>
                                    </div>
                                    <div>
                                        <div class="checkCircle col-md-1" >
                                            <input type="checkbox" value="1" id="checkCircleInputSymbol" hidden="true" disabled="true" />
                                            <label for="checkCircleInput"></label>
                                        </div>
                                        <p id='symbol' class="notChecked">{!$Label.CSP_Password_Rule_4}</p>
                                    </div>
                                </div>

                                <div class="input-group ">
                                    <span class="input-group-addon" id="sizing-addon1">{!IF(!tempPass, $Label.Current_password, $Label.Current_password)}</span>
                                    <apex:inputSecret styleClass="form-control rec"  value="{!currentPassword}"/>
                                </div>
                                <br />
                                <div class="input-group ">
                                    <span class="input-group-addon" id="sizing-addon1">{!$Label.New_password}</span>
                                    <apex:inputSecret id="newPass" styleClass="form-control rec" value="{!newPassword}"/>
                                </div>
                                <br />
                                <div class="input-group ">
                                    <span class="input-group-addon" id="sizing-addon1">{!$Label.Confirm_password}</span>
                                    <apex:inputSecret id="confirmNewPass" styleClass="form-control rec"  value="{!confirmNewPassword}"/>
                                </div>
                                <hr />
                                <div class="form-group">
                                    <apex:commandButton styleclass="btn_iata btn-sm btn-block btn-primary" action="{!changePassword}" value="{!$Label.CSP_Save}" id="next"/>
                                </div>
                            </apex:form>
                        </div><!-- end panel-body -->
                    </div>
                </div>
            </div>

            <c:ISSP_CustomFooter communityName="{!communityName}"/>
        </div>

        <script type="text/javascript">

            var password = document.getElementById('{!$Component.j_id0:formLogin:newPass}');
            var confirmPassword = document.getElementById('{!$Component.j_id0:formLogin:confirmNewPass}');

            password.addEventListener("input", function() {
              //get input
              var newPassword = document.getElementById('{!$Component.j_id0:formLogin:newPass}');

              //check number of characters
              var nChars = newPassword.value.length;
              if (nChars >= 10)
              {
                document.getElementById("chars").className = "checked";
                document.getElementById("checkCircleInputChars").checked = true;
              } else {
                document.getElementById("chars").className = "notChecked";
                document.getElementById("checkCircleInputChars").checked = false;
              }

              //check if it has a number
              var hasNumber = /\d/;
              if (hasNumber.test(newPassword.value)) {
                document.getElementById("number").className = "checked";
                document.getElementById("checkCircleInputNumber").checked = true;
              } else {
                document.getElementById("number").className = "notChecked";
                document.getElementById("checkCircleInputNumber").checked = false;
              }

              //check if it has a letter
              var hasLetter = /[A-Z]/;
              if (hasLetter.test(newPassword.value)) {
                document.getElementById("letter").className = "checked";
                document.getElementById("checkCircleInputLetter").checked = true;
              } else {
                document.getElementById("letter").className = "notChecked";
                document.getElementById("checkCircleInputLetter").checked = false;
              }

              var hasSymbol = /[\W_]/;
              if (hasSymbol.test(newPassword.value)) {
                document.getElementById("symbol").className = "checked";
                document.getElementById("checkCircleInputSymbol").checked = true;
              } else {
                document.getElementById("symbol").className = "notChecked";
                document.getElementById("checkCircleInputSymbol").checked = false;
              }

              if(nChars >= 10 && hasNumber.test(newPassword.value) && hasLetter.test(newPassword.value) && hasSymbol.test(newPassword.value)) {
                newPassword.style.borderColor = '#228B22';
                newPassword.style.boxShadow = '0 0 8px #22BB22';
              } else {
                newPassword.style.borderColor = '#ccc';
                newPassword.style.boxShadow = '';
              }

              matchPasswords();

            });

            confirmPassword.addEventListener("input", matchPasswords);

           function matchPasswords() {
              var newPassword = document.getElementById('{!$Component.j_id0:formLogin:newPass}');
              var newConfirmPassword = document.getElementById('{!$Component.j_id0:formLogin:confirmNewPass}');

              if(newConfirmPassword.value == newPassword.value && newConfirmPassword.value != '') {
                newConfirmPassword.style.borderColor = '#228B22';
                newConfirmPassword.style.boxShadow = '0 0 8px #22BB22';
              } else {
                if((newPassword.value.length == newConfirmPassword.value.length || newPassword.value.substring(0, newConfirmPassword.value.length) != newConfirmPassword.value) && newConfirmPassword.value != '') {
                  newConfirmPassword.style.borderColor = '#DC143C';
                  newConfirmPassword.style.boxShadow = '0 0 8px #DC143C';
                } else {
                  newConfirmPassword.style.borderColor = '#ccc';
                  newConfirmPassword.style.boxShadow = '';
                }
              }
           }

        </script>

    </body>
    </html>
</apex:page>