<apex:page controller="ISSP_AvailableServices" action="{!initialization}" standardStylesheets="false" showHeader="false" sidebar="false"  applyBodyTag="false" applyHtmlTag="false">
<html>
  <c:ISSP_Header ></c:ISSP_Header>    
  <body>
     <!-- elliot 19 juin -->
     <apex:variable var="AdminOrNot" value="{!if($Profile.Name == 'ISS Portal Agency Delegated Admin User' || $Profile.Name == 'ISS Portal Airline Delegated Admin User' || $Profile.Name == 'ISS Portal Delegated Admin User'  || $Profile.Name == 'ISS Portal GSA Delegated Admin User','','none')}" />
    <!-- end elliot 19 juin -->
  <div class="container">

    <apex:stylesheet value="{!URLFOR($Resource.BootstrapCSS, 'css/bootstrap.min.css')}" />    
    <!--apex:stylesheet value="{!URLFOR($Resource.DataTables, 'css/dataTables.bootstrap.min.css')}" />
    <apex:stylesheet value="{!$Resource.InternalOrderCSS}" />
    <apex:stylesheet value="{!URLFOR($Resource.BootstrapDatepicker, 'css/bootstrap-datepicker3.min.css')}" /-->     

    <!-- Load JS -->  
    <script language="JavaScript1.2" src="/js/functions.js"></script>
    <script src="/soap/ajax/9.0/connection.js" type="text/javascript"></script>
    <script id="clientEventHandlersJS" language="javascript"></script>
    <!--<script src="{!URLFOR($Resource.jquery2_1_4)}"></script>--> 
    <!--<script src="{!URLFOR($Resource.BootstrapCSS, 'js/bootstrap.min.js')}"></script> -->
    <script src="{!URLFOR($Resource.BootstrapTable, 'bootstrap-table.min.js')}"></script>        

    <!--script src="{!URLFOR($Resource.DataTables, 'js/jquery.dataTables.min.js')}"></script>
    <script src="{!URLFOR($Resource.DataTables, 'js/dataTables.bootstrap.min.js')}"></script>
    <script src="{!URLFOR($Resource.BootstrapDatepicker, 'js/bootstrap-datepicker.min.js')}"></script-->  

 <c:ISSP_CustomNavigation communityName="{!communityName}"/>

    <!---------------------------------------------------------------------->
       <script type="text/javascript">
     
    var redirected = false;
    var requested = 0;

    function newAppReq2(appId,appName, flagUseDefaultRole, isEasyPayService){
        
      if(redirected) return false;
        
      var appPortalRole = $('[id$="portalRoles"]').val();
      newAppReq(appId,appName, appPortalRole, flagUseDefaultRole, isEasyPayService);
    }       
       
    function newAppReq(appId,appName, appPortalRole, flagUseDefaultRole, isEasyPayService){       
      if(redirected) return false;        
        
      var doInsert;
      if (isEasyPayService == 'false') {
        doInsert = 2;
      } else {          
        if (appPortalRole == '' && flagUseDefaultRole == "true") {
          doInsert = 1;  
        } else {
          if (appPortalRole == '' && flagUseDefaultRole == "false") {
            doInsert = 0;  
          } else {
            doInsert = 1;  
          }
        }
      }

      if (doInsert == 0) {
          document.querySelector("[Id$='portalRoleErrorMessage']").style.display = '';       
      } else {
          requested = 1;
          if (appPortalRole != 'SKIP') {
              closeDialog();
          }
          if(isEasyPayService && flagUseDefaultRole == "true") {
            showModal('#ModalNewIepServiceRequest');
          } else {
            showModal('#ModalNewServiceRequest');
          }
                    
          if (doInsert == 1) {
            if(appPortalRole == null  || appPortalRole == undefined) {
              appPortalRole = '';
            }                            
            ISSP_AvailableServices.newAppsRequest2(appId,appName,'{!conId}', appPortalRole, flagUseDefaultRole, '{!defaultPortalUserRole}', newAppReqCallback);
          } else {
            ISSP_AvailableServices.newAppsRequest(appId,appName,'{!conId}', newAppReqCallback);
          }         
      }

      //closeDialog();
      //location.reload(true);
      //refresh(); 
    }

    function newAppReqCallback(res){
      
    }

    function onCompleteUserProvisioning(redirect, page, provError) {
      if(provError == 'true' && requested == 1) {
        hideModal('#ModalNewIepServiceRequest');
        errorMessageModal('{!$Label.ANG_ISSP_UserProvisioningError}');
      } else {
        if (redirect == 'true' && !redirected) {
          hideModal('#ModalNewIepServiceRequest');
            
          var win = window.open(page, '_blank');
          if (win) {
              //Browser has allowed it to be opened
              win.focus();
          } else {
              //Browser has blocked it
              alert('Please allow popups for this website');            
          }          
          redirected = true;          
        }
      }
    }

    function showModal(modalName) {
      if (! $(modalName).is(":visible")) {
        $(modalName).modal('show');  
      }
    }

    function hideModal(modalName) {
      if ($(modalName).is(":visible")) {
        $(modalName).modal('hide');  
      }
    }    

    function refreshPage() {
      var currentTime = new Date().getTime();

      while (currentTime + 2000 >= new Date().getTime()){  }

      location.reload(true);      
    }

    function doRequest(servId) {
      if(redirected) {
          location.reload(true);
          return false;        
      }        
      //obj.style.display = "none";        
      //obj.style.visibility = "hidden";
      paraFunction(servId);
    }

    function errorMessageModal(errorMsg) {
      $('[id$="errorMessage"]').text(errorMsg);
      showModal('#ModalErrorMessage');
    }

    function errorMessageModalClose() {
      location.reload(true);
    }

    function dopopup(){
         $('#Hiddenbtn').trigger( "click" );
    }

    function closeDialog(){
      //alert(' closeDialog : ');
      $('#myModal').modal('toggle');
    }

   !function($) {

    'use strict';

    $.extend($.fn.bootstrapTable.defaults, {
        // Option defaults
        contextMenu: undefined,
        contextMenuTrigger: 'right',
        contextMenuAutoClickRow: true,
        contextMenuButton: undefined,
        beforeContextMenuRow: function (e, row, buttonElement) {
            // return false here to prevent menu showing
        },
        // Event default handlers
        onContextMenuItem: function (row, $element) {
            return false;
        },
        onContextMenuRow: function (row, $element) {
            return false;
        }
    });
  
  // Methods
    $.fn.bootstrapTable.methods.push('showContextMenu');

  // Events
    $.extend($.fn.bootstrapTable.Constructor.EVENTS, {
        'contextmenu-item.bs.table': 'onContextMenuItem',
        'contextmenu-row.bs.table': 'onContextMenuRow'
    });

    var BootstrapTable = $.fn.bootstrapTable.Constructor,
        _initBody = BootstrapTable.prototype.initBody;

    BootstrapTable.prototype.initBody = function () {

        // Init Body
        _initBody.apply(this, Array.prototype.slice.apply(arguments));

        // Init Context menu
        if (this.options.contextMenu || this.options.contextMenuButton || this.options.beforeContextMenuRow) {
            this.initContextMenu();
        }
    };

    // Init context menu
    BootstrapTable.prototype.initContextMenu = function () {
        var that = this;  

        // Context menu on Button-click
        if (typeof that.options.contextMenuButton === 'string') {
            that.$body.find('> tr[data-index]').find(that.options.contextMenuButton).off('click.contextmenu').on('click.contextmenu', function (e) {                
                var rowData = that.data[$(this).closest('tr[data-index]').data('index')],
                    beforeShow = that.options.beforeContextMenuRow.apply(this, [e, rowData, this]);

                if(beforeShow !== false){
                    that.showContextMenu({event: e, buttonElement: this});
                }
                return false;
            });
        }
    };

    // Show context menu
    BootstrapTable.prototype.showContextMenu = function (params) {
        if(!params || !params.event){ return false; }
        if(params && !params.contextMenu && typeof this.options.contextMenu !== 'string'){ return false; }

        var that = this,
            $menu, screenPosX, screenPosY,
            $tr = $(params.event.target).closest('tr[data-index]'),
            item = that.data[$tr.data('index')];

        if(params && !params.contextMenu && typeof this.options.contextMenu === 'string'){
            screenPosX = params.event.clientX;
            screenPosY = params.event.clientY;
            $menu = $(this.options.contextMenu);
        }
        if(params && params.contextMenu){
            screenPosX = params.event.clientX;
            screenPosY = params.event.clientY;
            $menu = $(params.contextMenu);
        }
        if (params && params.buttonElement) {
            screenPosX = params.buttonElement.getBoundingClientRect().left;
            screenPosY = params.buttonElement.getBoundingClientRect().bottom;
        }

        function getMenuPosition($menu, screenPos, direction, scrollDir) {
            var win = $(window)[direction](),
                scroll = $(window)[scrollDir](),
                menu = $menu[direction](),
                position = screenPos + scroll;

            if (screenPos + menu > win && menu < screenPos)
                position -= menu;

            return position;
        }

        // Bind click on menu item
        $menu.find('li').off('click.contextmenu').on('click.contextmenu', function (e) {
            var rowData = that.data[$menu.data('index')];
            that.trigger('contextmenu-item', rowData, $(this));
        });

        // Click anywhere to hide the menu
        $(document).triggerHandler('click.contextmenu');
        $(document).off('click.contextmenu').on('click.contextmenu', function (e) {
      // Fixes problem on Mac OSX
          if(that.pageX != e.pageX || that.pageY != e.pageY){
            $menu.hide();
            $(document).off('click.contextmenu');
          }
        });
        that.pageX = params.event.pageX;
        that.pageY = params.event.pageY;

        // Show the menu
        $menu.data('index', $tr.data('index'))
            .appendTo($('body'))
            .css({
                position: "absolute",
                left: getMenuPosition($menu, screenPosX, 'width', 'scrollLeft'),
                top: getMenuPosition($menu, screenPosY, 'height', 'scrollTop'),
                zIndex: 1100
            })
            .show();

        // Trigger events
        that.trigger('contextmenu-row', item, $tr);
        if(that.options.contextMenuAutoClickRow && that.options.contextMenuTrigger == 'right') {
            that.trigger('click-row', item, $tr);
        }
    };


}(jQuery);


    </script>

    <style type="text/css">
    a.alpha-link {
       font-weight: normal;
       font-size: 91%;
       padding: 0 4px;
       color: #015BA7 !important;
    }
     
    a.alpha-link+a.alpha-link { 
       border-left: 1px solid #CFCECE;
    }
     
    a.alpha-link:hover {
       background-color: #e0f5fc !important;
    }
     
    a.alpha-select {
       font-weight: bold;
       text-decoration: none;
       background-color: #C6E1FF;
       color: #000000 !important;
    }

    .tos_label {
       font-size: 11px;
       color: #015BA7 !important;
    }

    #contextMenu {
      position: absolute;
      display:none;
   }

    </style>
    <h4>{!$Label.ISSP_services}  <span class="glyphicon glyphicon-chevron-right small " aria-hidden="true"></span>
         {!$Label.ISSP_Available_services} <span class="glyphicon glyphicon-chevron-right small " aria-hidden="true"></span>
        <small>{!$Label.ISSP_PageDescription_ISSP_AvailableServices} </small></h4>
    <apex:form id="contactListForm">

    <apex:actionFunction name="next" action="{!setCon.next}" rerender="Services" />
    <apex:actionFunction name="previous" action="{!setCon.previous}" rerender="Services" />
    <apex:actionFunction name="first" action="{!setCon.first}" rerender="Services" />
    <apex:actionFunction name="last" action="{!setCon.last}" rerender="Services" />
    <apex:actionFunction name="refresh" action="{!refresh}" rerender="ServiceListForm" />

    <apex:actionFunction name="paraFunction" action="{!doRequest}" reRender="contactListForm,Services,myModalContent,ModalNewServiceRequest" oncomplete="javascript:dopopup();" immediate="true">      

      <apex:param id="servId" name="servId"  value="" />
    </apex:actionFunction>

    <apex:inputHidden value="{!selectedList}" id="selectedItemHidden"/> 
    <!-- <apex:pageMessages /> -->

    <apex:actionPoller id="poller" action="{!iepPermissionSetPoller}" reRender="counter" interval="5" enabled="{!pollerOn}" oncomplete="onCompleteUserProvisioning('{!redirect}', '{!Serv.recordService.Application_URL__c}', '{!provError}');"/>
    
    <img src="/s.gif" alt="Service" class="pageTitleIcon" title="Service"/>
    <!--
    <select id="testSelect" class="form-control selector" onchange="$('[id$=selectedItemHidden]').val($(this).val());refresh();">
        <apex:repeat value="{!ListViewNameList}" var="csName" id="theRepea1">
            <option value="{!csName}">{!$Label[ServiceListViewMap[csName].Label_API_name__c]}</option>
        </apex:repeat>
    </select>
    -->
    
    <script>
        $('#testSelect').val( '{!selectedList}' );
    </script>
    
    <apex:pageBlock id="Services" >
    <!-- context menu -->
    <ul id="context-menu" class="dropdown-menu">
        <li data-item="add" data-id="cenas"><a>{!$Label.ISSP_Add_User_to_this_service}</a></li>
        <li data-item="view"><a>{!$Label.ISSP_View_Portal_Users}</a></li>
    </ul>  

    <script>
    $(function() {      
      $('[id$=pbt_Services]').bootstrapTable({
        contextMenu: '#context-menu',
        contextMenuButton: '.example2-button',        
        onContextMenuItem: function(row, $el){
          sforce.connection.sessionId = '{!$Api.Session_ID}';
          var string = row[3].substring("Id=");          
          var linkId = string.substring(string.indexOf("('")+2,string.indexOf("')"));          
          
          var qr = sforce.connection.query('SELECT id,name FROM Portal_Applications__c where id in (\''+linkId+ '\')');
          records = qr.getArray("records");
            
          for (var i=0; i< records.length; i++) {
              var record = records[i];
              var servName = record.Name;              
          }
            
          if($el.data("item") == "add"){          
              window.location.href = "/ISSP_EditPortalServiceAccess?Id="+linkId+"&op=Edit&PSId="+linkId+"&PSname="+servName;
          }
          else if($el.data("item") == "view"){
            window.location.href = "/ISSP_PortalService?Id="+linkId;
          }
        }
      });
    });

    </script>

        <hr />
        <apex:pageMessages escape="false"/>
        <apex:pageBlockTable value="{!ServiceList}" var="item" styleClass="table-hover  table table-condensed table-responsive" id="pbt_Services">       
            <apex:repeat value="{!fields}" var="f">
                  <apex:column >
                    <apex:facet name="header">
                       <apex:commandLink action="{!refresh}" reRender="pbt_Services">{!f.label}
                         <apex:outputPanel layout="none" rendered="{!AND(OR(sortExpression==f.FieldPath,AND(sortExpression=='Name',f.FieldPath=='Name')), sortDirection='ASC')}">&#9650;</apex:outputPanel>
                         <apex:outputPanel layout="none" rendered="{!AND(OR(sortExpression==f.FieldPath,AND(sortExpression=='Name',f.FieldPath=='Name')), sortDirection='DESC')}">&#9660;</apex:outputPanel>
                         <apex:param value="{!f.FieldPath}" name="column" assignTo="{!sortExpression}" ></apex:param>
                       </apex:commandLink>
                    </apex:facet>
         
                    <apex:outputpanel rendered="{! OR(f.FieldPath == 'Service_Description__c', f.FieldPath == 'Application_icon__c')}">                    
                        <apex:outputText value="{!item.recordService[f.fieldPath]}" escape="false" />
                    </apex:outputpanel>
                          
                    <apex:outputpanel rendered="{!f.FieldPath == 'Name'}">
                     <apex:outputLink value="{!item.recordService.Application_URL__c}{!if(communityName=='CNS','&CommunityName='+communityName,'')}" target="{!IF(item.recordService.New_Window__c,'_blank','_self')}" rendered="{!IF(item.Status=='Access Granted',true,false)}" >{!item.recordService.ServiceName__c}</apex:outputLink>
                     <apex:outputText value="{!item.recordService.ServiceName__c}" rendered="{!IF(item.Status=='Access Granted',false,true)}" />
                    </apex:outputpanel>
                  </apex:column>
            </apex:repeat>
            
            <apex:column headerValue="{!$Label.ISSP_Status}">
                  <apex:outputtext value="{!CASE(item.Status, 'Access Under Provisioning', $Label.ISSP_Access_Under_Provisioning, 'Access Granted', $Label.ISSP_Access_Granted, 'Access Denied', $Label.ISSP_Access_Denied, $Label.ISSP_Access_Requested)}" rendered="{!IF(item.Status != null , true,false)}"/>
                  <a onclick="doRequest('{!item.recordService.Id}')"   class="pull-right btn_iata_success btn btn-block"  
                  style="display:{!IF(item.Status == null || item.Status =='' , '','none')}">
                  <!--{!$label.ISSP_New_Service_Request}-->
                  {!item.btnLabel}
                  </a>

                  <a id="Hiddenbtn" data-toggle="modal" href="#myModal"
                  style="display:none">
                  </a>
            </apex:column>

            <apex:column headerValue="Actions" id="actionId" rendered="{!AdminOrNot}">
              <apex:outputPanel rendered="{!item.addUsersEnable}">
                <button type="button" class="example2-button"><span class="glyphicon glyphicon-cog"></span></button>
              </apex:outputPanel>
            </apex:column>
          <!--elliot 19 juin-->  
           
            <!--<apex:column style="text-align: center; display: {!AdminOrNot}">
                <apex:outputPanel rendered="{!item.addUsersEnable}">             
                </apex:outputPanel>
            </apex:column>-->
                
             <!-- end elliot 19 juin -->
        </apex:pageBlockTable>
         
        <div class="bottomNav" id="j_id0:YourListViewId_bottomNav">
           <div class="paginator">
              <span class="left">
                 <span class="selectorTarget" >
                    {!((setCon.PageNumber-1) * setCon.PageSize)+1} - {!IF(setCon.HasNext,((setCon.PageNumber-1) * setCon.PageSize)+11,noOfRecords)}  {!$Label.ISSP_of} {!noOfRecords }
             </span>
          </span>
          <span class="prevNextLinks">
          
           <span class="prevNext"  style="display:{!IF(setCon.HasPrevious,'none','')}">
            <img src="/s.gif" class="firstoff" alt="First Page"/>
           </span>
           <span class="prevNext"  style="display:{!IF(setCon.HasPrevious,'','none')}">
               <a href="javascript:first()"><img src="/s.gif" title="First Page" alt="First Page" class="first"/></a>
           </span>
           
           <span class="prevNext" style="display:{!IF(setCon.HasPrevious,'none','')}">
                <img src="/s.gif" class="prevoff" alt="Previous"/>{!$Label.ISSP_Previous}
            </span>
            <span class="prevNext" style="display:{!IF(setCon.HasPrevious,'','none')}">
                <a href="javascript:previous()"><img src="/s.gif" title="Previous" alt="Previous" class="prev"/>Previous</a>
            </span>
            
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'none','')}">{!$Label.ISSP_Next}
                <img src="/s.gif" class="nextoff" alt="Next"/>
            </span>
            <span class="prevNext" style="display:{!IF(setCon.HasNext,'','none')}">
                <a href="javascript:next()">Next<img src="/s.gif" title="Next" alt="Next" class="next"/></a>
            </span>
            
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'none','')}">
                <img src="/s.gif" class="lastoff" alt="Last Page"/>
           </span>
           <span class="prevNext" style="display:{!IF(setCon.HasNext,'','none')}">
               <a href="javascript:last()"><img src="/s.gif" title="Last Page" alt="Last Page" class="last"/></a>
           </span>
           </span>
           <span class="right">{!$Label.ISSP_Page}
               {!setCon.PageNumber}
               {!$Label.ISSP_of} {!CEILING(noOfRecords/size)}
        
            </span>
           </div>
           <div class="clearingBox"></div>
        </div>
        </apex:pageBlock> 
     
    <!---------------------------------------------------------------------->
    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <apex:outputPanel layout="block" styleClass="modal-dialog" id="myModalContent"> 
        <div class="modal-content"> 
          <div class="modal-header"> 
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">{!$Label.ISSP_New_Service_Request}</h4>
          </div>
          <div class="modal-body" style="display:{!if(true,'','none')}">
            <!-- <h5>Services list:</h5><br/> -->
            <apex:outputPanel id="display_messages"> 
                <div class="alert alert-danger" style="display:{!if(errorMessage.size==0,'none','')}">
                  <strong>{!$Label.ISSP_Error} </strong>
                  <apex:repeat value="{!errorMessage}" var="er" id="theRepeat">
                      <p><apex:outputText value="{!er}" escape="false" /></p>
                  </apex:repeat>
                </div>
                
                <div class="alert alert-danger" id="portalRoleErrorMessage" style ="display: none">
                  <strong> {!$Label.ANG_ISSP_PortalRoleErrorMessage} </strong>
                </div>
                
              </apex:outputPanel>

              <table>

                <tr><td> 
                  <span class="appfocus">
                    <a  id="appReq{!Serv.recordService.Id}"  title="">
                      <apex:outputText escape="false" value="{!Serv.recordService.Application_icon__c}" />
                    </a>
                  </span>
                  </td>
                  <!--span>
                      <apex:outputLabel value="{!$Label.ISSP_ServiceRequestConfirm} {!Serv.recordService.Name}" rendered="{!!Serv.recordService.Confirm_Box__c}" />
                      <apex:outputLabel value="{!Serv.recordService.Confirm_Text__c}" rendered="{!Serv.recordService.Confirm_Box__c}" escape="false" />
                  </span-->
                  <td style="padding-left: 10px">
                  <span>
                      <apex:outputPanel rendered="{!NOT(CONTAINS(Serv.recordService.Name,'IATA EasyPay'))}">
                          <apex:outputLabel escape="false" value="{!$Label.ISSP_ServiceRequestConfirm} {!IF(Serv.isEasyPayService, $Label.ANG_ISSP_IATA_EasyPay, Serv.recordService.Name)}?" rendered="{!!Serv.recordService.Confirm_Box__c}" />

                        <apex:outputLabel value="{!Serv.recordService.Confirm_Text__c}" rendered="{!Serv.recordService.Confirm_Box__c}" escape="false" />
                      </apex:outputPanel>
                      
                      <apex:outputPanel rendered="{!CONTAINS(Serv.recordService.Name,'IATA EasyPay')}">

                          <!--apex:outputLabel value="{!$Label.ISSP_ServiceRequestConfirm} {!IF(Serv.isEasyPayService, $Label.ANG_ISSP_IATA_EasyPay, Serv.recordService.Name)}?" rendered="{!!Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable}" /-->
                          <apex:outputLabel escape="false" value="{!$Label.ANG_ISSP_EasyPayLegalConfirmation}" rendered="{!!Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable && Serv.useDefaultRole}"/>

                          <apex:outputPanel rendered="{! NOT Serv.useDefaultRole}">
                            <apex:outputLabel escape="false" value="{!$Label.ANG_ISSP_ConfirmRequestIEP_1}" rendered="{!!Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable}"/>                                              
                          </apex:outputPanel>  

                          <apex:outputLabel escape="false" value="{!modalErrorMessage}" rendered="{!!Serv.recordService.Confirm_Box__c && isModalErrorMessageEnable}" />

                      <apex:outputLabel value="{!Serv.recordService.Confirm_Text__c}" rendered="{!Serv.recordService.Confirm_Box__c}" escape="false" />

                      </apex:outputPanel>  
                  </span>
                    </td>
                </tr>

                <tr>
                  <td>
                  </td>
                  <td style="padding-left: 10px; padding-top: 10px">
                    <apex:outputPanel rendered="{! NOT Serv.useDefaultRole && Serv.isEasyPayService && NOT Serv.recordService.Confirm_Box__c && NOT isModalErrorMessageEnable}">                    
                      <span>
                        <apex:outputLabel escape="false" value="{!$Label.ANG_ISSP_ConfirmRequestIEP_2}" rendered="{!!Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable}"/>
                      </span>
                    </apex:outputPanel>
                  </td>
                </tr>                      

                <tr>
                  <td>
                  </td>
                  <td style="padding-left: 10px; padding-top: 10px">
                    <apex:outputPanel rendered="{! NOT Serv.useDefaultRole && Serv.isEasyPayService && NOT Serv.recordService.Confirm_Box__c && NOT isModalErrorMessageEnable}">
                      <span>
                        <apex:outputLabel escape="false" value="{!$Label.ANG_ISSP_ConfirmRequestIEP_3}" rendered="{!!Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable}"/>
                        <b><a href="{!$Label.ANG_ISSP_Change_IEP_Status_InProgress_To_Open_Html_Mail_line2_link}">{!$Label.ISSP_Email_Here}</a>.</b>
                  </span>
                    </apex:outputPanel>                      
                  </td>
                </tr>                      

                <tr>
                  <td>
                  </td>
                  <td style="padding-left: 10px; padding-top: 10px">
                  <apex:outputPanel rendered="{! (Serv.isEasyPayService && !Serv.useDefaultRole && !Serv.recordService.Confirm_Box__c && !isModalErrorMessageEnable)}">
                    <apex:outputLabel value="{!$Label.ANG_ISSP_PORTAL_SERVICE_ROLE} : " title="{!$Label.ANG_ISSP_PORTAL_SERVICE_ROLE_HINT}"/> 
                    <apex:selectList id="portalRoles" value="{!Serv.portalServiceRole}" size="1" required="true">
                      <apex:selectOptions value="{!availablePortalServiceRoles}"/>
                      <apex:actionSupport event="onchange" rerender="serviceSubmitButton,serviceSubmitButton2"/>
                    </apex:selectList>                  
                  </apex:outputPanel>
                  </td>
                </tr>
              </table>

                <script> 
                  if('{!JSENCODE(Serv.recordService.Description__c)}'!=''){ 
                    var htmlCont = '<div class="sfdc_richtext">'+'{!JSENCODE(Serv.recordService.Description__c)}'+'</div>';
                    $('#appReq{!Serv.recordService.Id}').popover({trigger:'hover' ,html:true,content:htmlCont});
                  }
                </script>


              <apex:outputPanel rendered="{!Serv.recordService.Name=='Standards Setting Workspace'}"> 
                <div class="checkbox">
                  <label class="tos_label">
                    {!$Label.ISSP_KAVI_Terms_Conditions_Part1}
                  </label>
                  <br/><br/>
                  <label class="tos_label">
                    {!$Label.ISSP_KAVI_Terms_Conditions_Part3}
                  </label>
                  <br/><br/>
                  <label class="tos_label">
                    {!$Label.ISSP_KAVI_Terms_Conditions_Part2}
                  </label>
                  <br/><br/>
                  <label class="tos_label">
                    <apex:inputCheckbox style="margin-top:-0.1px" value="{!accept}"  selected="false"/>
                    <a>{!$Label.ISSP_AcceptTermsAndConditions}</a>
                  </label>
                </div> 
                
              </apex:outputPanel> 
          </div>

          <div class="modal-footer">
            <div class="row">
                  
              <div class="col-md-6">

                <apex:commandButton rendered="{!Serv.recordService.Name=='Standards Setting Workspace'}" 
                  value="{!$Label.ISSP_Confirm}" 
                  styleClass="btn_iata_success btn-block btn" action="{!submitRequest}" 
                  oncomplete="if ({!accept}) {closeDialog();newAppReq('{!Serv.recordService.Id}','{!Serv.recordService.Name}', 'SKIP', '', 'false');}" 
                  rerender="display_messages"/>
            
                <apex:outputPanel rendered="{!Serv.recordService.Name<>'Standards Setting Workspace' && NOT(CONTAINS(Serv.recordService.Name,'IATA EasyPay'))}"
                  id="serviceSubmitButton">
                  <a onclick="closeDialog();newAppReq('{!Serv.recordService.Id}','{!Serv.recordService.Name}', 'SKIP', '', 'false');"
                     class="btn_iata_success btn-block btn">
                     {!$Label.ISSP_Confirm}
                  </a>
                </apex:outputPanel> 

                <apex:outputPanel rendered="{!Serv.recordService.Name!='Standards Setting Workspace' && CONTAINS(Serv.recordService.Name,'IATA EasyPay') && !isModalErrorMessageEnable}" id="serviceSubmitButton2"> 
                  <a onclick=" newAppReq2('{!Serv.recordService.Id}','{!Serv.recordService.Name}', '{!Serv.useDefaultRole}', '{!Serv.isEasyPayService}');"    class="btn_iata_success btn-block btn">
                     {!$Label.ISSP_Confirm}
                  </a>
                </apex:outputPanel> 

              </div>
              <div class="col-md-6">
                <a onclick="closeDialog()" class="btn_iata_cancel btn-block btn">
                  {!$label.ISSP_Cancel}
                </a>
              </div>
            </div>
          </div>
        </div>
        <!-- /.modal-content -->
      </apex:outputPanel>
      <!-- /.modal-dialog -->
    </div>

    <!-- Modal New Service Request-->
    <div class="modal fade" id="ModalNewServiceRequest" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" onblur="refreshPage();">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="btn_iata" class="close" data-dismiss="modal" aria-hidden="true" onclick="location.reload(true);" >&times;</button>
            <h4 class="modal-title"> {!$Label.ISSP_New_Service_Request}</h4>
          </div>
          <div class="modal-body">
            <p>
                <!-- basto1p SCIM_App_Name__c -->
              <apex:outputText value="{!IF(communityName=='CNS',$Label.ISSP_Thanks_for_request_cns,
              IF(   Serv.recordService.Name=='IFG Production'
                 || Serv.recordService.Name=='IFG Pre-Production',$Label.IFG_Thanks_for_request,$Label.ISSP_Thanks_for_request))}"/>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal New Service Request-->
    <div class="modal" id="ModalErrorMessage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <apex:outputPanel layout="block" styleClass="modal-dialog" id="myErrorModalContent"> 
        <div class="modal-content"> 
          <div class="modal-header"> 
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">{!$Label.ISSP_Add_User_to_this_service}</h4>
          </div>

          <div class="modal-body">
            <div class="row">
              <div class="col-md-12">
                <p>              
                  <apex:outputLabel escape="false" id="errorMessage" value=""/>
                </p>
              </div>
            </div>            
          </div>  
          <div class="modal-footer">
            <div class="row">
              <div class="col-md-12">
                <a onclick="errorMessageModalClose()" class="btn_iata_cancel btn-block btn">
                  {!$label.ISSP_Cancel}
                </a>
              </div>
            </div>            
          </div>          
        </div>
      </apex:outputPanel>
    </div>

    <!-- Modal New Service Request-->
    <div class="modal" id="ModalNewIepServiceRequest" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false" href="#" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title"> {!$Label.ANG_ISSP_Open_IATA_EasyPay_Account} </h4>
          </div>
          <div class="modal-body">
            <div class="title">
                <img src="{!URLFOR($Resource.IataLoadingImage)}"/><br/>
                <b>{!$Label.ANG_ISSP_UserProvisioningWait}</b>
            </div>   
          </div>
          <div class="modal-footer">
          </div>          
        </div>
      </div>
    </div>

</apex:form>
    <c:ISSP_CustomFooter communityName="{!communityName}"/>
</div><!-- end container-->
    </body>
    </html>
</apex:page>