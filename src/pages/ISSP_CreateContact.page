<apex:page controller="ISSP_Registration"  standardStylesheets="false" showHeader="false" sidebar="false"  applyBodyTag="false" applyHtmlTag="false"  language="{!lang}">

  <html>
  <head>

    <!-- Google Tag Manager -->
    <script>
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-PWSNSM3');
    </script>
    <!-- End Google Tag Manager -->
    <script>
      function getDevice() {
        if (navigator.userAgent.match(/Tablet|Nexus|iPad/i)) {
            return "Tablet";
        } else if(navigator.userAgent.match(/Mobile|Windows Phone|Lumia|Android|webOS|iPhone|iPod|Blackberry|PlayBook|BB10|Opera Mini|\bCrMo\/|Opera Mobi/i) ) {
            return "Mobile";
        } else {
            return "Desktop";
        }
      }      

      window.dataLayer = window.dataLayer||[];
      dataLayer.push({
        "user": {
          "loginStatus": "Logged Out",
          "memberStatus": "No",
        },
        "page": {
          "requestURI": window.location.pathname + window.location.search + "&ga_step=step2-account-registration",
          "device": getDevice(),
          "breadcrumb": "{!$Label.ISSP_Registration_RegistrationProcess}", 
          "language": "{!lang}"
        }                  
      });


      dataLayer.push({
        "event": "VPV",
        "page": {
          "requestURI": window.location.pathname + window.location.search + "&ga_step=step2-account-registration"
        }
      });

    </script>

  </head>
 
  <body>

    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PWSNSM3"
      height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <style>
      .typeOfCustomerDiv {
        display: flex;
      }

      .typeOfCustomerOpt {
        cursor: pointer;
        text-align: center;
        width: 50% !important;
      }

      .typeOfCustomerOptSelected {
        color: white !important;
        background: rgb(0,120,215) !important;
      }
    </style>

 <apex:outputPanel rendered="{!displayNewCaseForm}" >
    <!-- <c:ISSP_Registration_NewCaseForm ctrl="{!thisCtrlForNewCaseForm}" /> -->
  </apex:outputPanel>

  <apex:composition template="{!templatename}">
    <apex:define name="body">
      <div class="registration_page" id="CreateContact">
        <div class="{!CASE(communityName, 'CNS', 'logocns', 'logo')}"> </div>
        <div class="col-md-6 col-md-push-3">


          <!-- SECOND LOG BOX  -->
          <div class="panel panel-default conMode" >
            <div class="panel-heading2">
              <h3 class="panel-title">{!$Label.ISSP_Registration_RegistrationProcess}</h3>
            </div>
            <apex:form id="newContact" styleclass="login_box1" >
              <div class="alert alert-danger" style="display:{!if(errorMessage.size==0,'none','')}">
                <strong>{!$Label.ISSP_Error}</strong>
                <apex:repeat value="{!errorMessage}" var="er" id="theRepeat">
                  <p><apex:outputText value="{!er}" escape="false" /></p>
                </apex:repeat>
              </div>
              <div id="recFields" class="alert alert-danger" style="display:none">
                <strong>{!$Label.ISSP_fill_required_fields}</strong>
                <span></span>
              </div>
              <div class="form-group">
                <div class="row">
                  <label class="col-lg-5 control-label" for="exampleInputEmail1"><span class="required">*</span>{!$ObjectType.Contact.fields.Email.Label}</label>
                  <div class="col-lg-7">
                    <p style="line-height: 26px;">{!con.Email}</p>

                  </div>
                </div>
              </div>
              <!--
              <div class="form-group" id="TypeOfCustomer">
                <label for="exampleInputEmail1"><span class="required">*</span>{!$Label.ISSP_Type_of_Customer}</label>
                <apex:selectList styleclass="form-control rec" id="TypeSelect" value="{!selectedCustomerType}" onchange="TypeOfCustomerChange()" size="1" required="true">
                  <apex:selectOption itemValue="" itemLabel=" - Select the Type of your Company - "/>
                  <apex:selectOption itemValue="Airline" itemLabel="Airline"/>
                  <apex:selectOption itemValue="GloballSalesAgent" itemLabel="General Sales Agent"/>
                  <apex:selectOption itemValue="Agency" itemLabel="Agency"/>
                  <apex:selectOption itemValue="NonIATAAgent" itemLabel="Non IATA Agent"/>
                  <apex:selectOption itemValue="TIESS" itemLabel="TIESS"/>
                  <apex:selectOption itemValue="OtherCompany" itemLabel="Other Company"/>
                  <apex:selectOption itemValue="GeneralPublic" itemLabel="General public"/>
                </apex:selectList>
                  <div class="hiddenerror" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_TypeofCustomer}</p>
                  </div>
              </div>
              -->
              <div class="form-group" id="Country" style="display:none">
                <label class="control-label"  for="inputError"><span class="required">*</span>{!$Label.ISSP_Location}</label>
                <apex:selectList styleclass="form-control" value="{!con.ISO_Country__c}" size="1" >
                    <apex:selectOption itemValue="" itemLabel="{!$Label.ISSP_Registration_CountryNone}"/>
                    <apex:selectOptions value="{!ISOCountry}"/>
    <!--                            <apex:actionSupport event="onchange" reRender=""/> -->
                </apex:selectList>
                  <div class="hiddenerror" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_Location}</p>
                  </div>
              </div>
             <div class="form-group" id="Salutation">
                <div><label for="inSalutation"><span class="required">*</span>{!$Label.ISSP_Salutation}</label></div>

                    <apex:selectList id="inSalutation" styleclass="form-control rec" value="{!con.Salutation}" size="1" required="true">
                      <apex:selectOption itemValue="" itemLabel="{!$Label.ISSP_Registration_None}"/>
                      <apex:selectOption itemValue="Mr." itemLabel="{!$Label.ISSP_Registration_MR}"/>
                      <apex:selectOption itemValue="Mrs." itemLabel="{!$Label.ISSP_Registration_MRS}"/>
                      <apex:selectOption itemValue="Ms." itemLabel="{!$Label.ISSP_Registration_MS}"/>
                    </apex:selectList>
                  <div class="hiddenerror" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_Salutation}</p>
                  </div>
            </div>

              <div class="form-group">
                <label for="inFirstName"><span class="required">*</span>{!$ObjectType.Contact.fields.FirstName.Label}</label>
                <div class="hiddenerror" style="display: none;">
                  <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_FirstName}</p>
                </div>
                <apex:inputField id="inFirstName" styleClass="form-control rec" value="{!con.FirstName}"/>
                  
            </div>
              <div class="form-group" id="LastName">
                <label for="inLastName"><span class="required">*</span>{!$ObjectType.Contact.fields.LastName.Label}</label>
                <apex:inputField id="inLastName" styleclass="form-control rec" value="{!con.LastName}"/>
                  <div class="hiddenerror" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_LastName}</p>
                  </div>
              </div>
              
              <div class="form-group" id="Title">
                <label for="inJobTitle"><span class="required">*</span>{!$Label.ISSP_Registration_JobTitle}</label>
                <apex:inputField id="inJobTitle" styleclass="form-control rec" value="{!con.Title}"/>
                  <div class="hiddenerror" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_JobTitle}</p>
                  </div>
              </div>
              
              <apex:outputPanel layout="none" rendered="{!sRefererCommunity != 'iec'}">
                <div id="Function">
                  <span class="multiSelectFunction">
                      <label for="inJobFunction"><span class="required">*</span>{!$ObjectType.Contact.fields.Membership_Function__c.Label}</label>
                      <apex:inputField id="inJobFunction" styleclass="form-control" value="{!con.Membership_Function__c}"/>
                    <div class="hiddenerror" style="display: none;">
                      <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_JobFunction}</p>
                    </div>
                  </span>
                </div>
              </apex:outputPanel>
              <div class="form-group" id="Phone">
                <label for="businessphoneinput"><span class="required">*</span>{!$Label.ISSP_Registration_BusinessPhone}</label><br/>
                <apex:inputHidden id="businessphone" value="{!con.Phone}" />
                <apex:inputHidden id="phone1" value="{!phone1}"/>
                <apex:inputHidden id="phone2" value="{!phone2}"/>
                <apex:inputHidden id="phone3" value="{!phone3}"/>

                <apex:inputField id="businessphoneinput" html-placeholder="" styleclass="form-control rec" value="{!con.PhoneNational__c}" onblur="setInternationalPhoneNo('phone');" 
                  onkeyup="setLengthPhone(this,0)"/>
                <div class="hiddenerror" style="display: none;">
                  <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_Error_BusinessPhone}</p>
                </div>
                <div class="hiddenerror invalidphone" style="display: none;">
                  <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_BusinessPhone_Msg}</p>
                </div>
              </div>

              <div class="form-group" id="Phone2">
                <label   for="businessmobileinput">{!$Label.ISSP_Registration_MobilePhone}</label><br/>
                <apex:inputHidden id="businessmobile" value="{!con.MobilePhone}" />
                <apex:inputField id="businessmobileinput" styleclass="form-control" html-placeholder="" value="{!con.MobileNational__c}" onblur="setInternationalPhoneNo('mobile');"
                  onkeyup="setLengthPhone(this,1)"/>
                  <div class="hiddenerror invalidmobile" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_MobilePhone_Msg}</p>
                  </div>
              </div>
              <div class="form-group" id="Fax">
                <label   for="businessfaxinput">{!$ObjectType.Contact.fields.Fax.Label}</label><br/>
                <apex:inputHidden id="businessfax" value="{!con.Fax}" />
                <apex:inputField id="businessfaxinput" styleclass="form-control" value="{!con.FAXNational__c}" onblur="setInternationalPhoneNo('fax');"
                  onkeyup="setLengthPhone(this,2)"/>
                  <div class="hiddenerror invalidfax" style="display: none;">
                    <p class="errormsg" style="line-height: 26px;">{!$Label.ISSP_Registration_FaxPhone_Msg}</p>
                  </div>
              </div>

              <div class="form-group"><!--  onClick="if(!validateNewUser())return false;" {!registerContact}-->
  <!--                <apex:commandButton styleclass="btn_iata btn-lg btn-block btn-success" action="{!getRegPage}" value="Back" id="back"/> -->
                <apex:commandButton styleclass="btn_iata btn-lg btn-block btn-success2" onClick="if(!validateInputs())return false;" action="{!submitContact}" value="{!$Label.ISSP_Next}" id="next" />
              </div>
        </apex:form>
    <script src="{!URLFOR($Resource.InternationalPhoneNumberFormat, '/intl-tel-input-master/build/js/intlTelInput.js')}"></script>
        <script>
        var $j = jQuery.noConflict();
        
        /* iec functions */
        
        function setLengthPhone(e, i) {
          var phoneVal = e.value;
          if(phoneVal && "{!sRefererCommunity}"=="iec") {           
            var formatedSize = phoneVal.length;
            var unformatedSize = phoneVal.replace(" ", "").replace("-","").length;
        
            if(phoneVal.charAt(0) == "+") {
              $(e).attr("maxlength", 15 + (formatedSize - unformatedSize));
            } else {
              var flagDrpd = $j($j(".flag-dropdown")[i]).find("div")[0];
              if(flagDrpd && flagDrpd.title && flagDrpd.title.split("+")[1]) {
                var selectedFlagLength = flagDrpd.title.split("+")[1].length;
                $(e).attr("maxlength", 15 + (formatedSize - unformatedSize) - selectedFlagLength);
              } else {
                $(e).attr("maxlength", 15 + (formatedSize - unformatedSize));
              } 
            }           
          }
        }
        
        /******/
        
        //in create contact page
        // description popups
        $j('#Title').popover({placement:'top',trigger:'hover',content:'{!JSENCODE($Label.ISSP_Registration_Title_Bubble)}',title:''});
        $j('#Country').popover({placement:'top',trigger:'hover',content:'{!JSENCODE($Label.ISSP_Registration_Country_Bubble)}',title:''});

        // run at first time (to show the country picklist)
        TypeOfCustomerChange();

        if ({!displayNewCaseForm})
        $j("#NewCasePopUp").modal('show');

        // if type is General Public - show Country selection
        function TypeOfCustomerChange(){
            var type = $j("select[id*='TypeSelect']").val();
            $j('#Country').hide().removeClass('rec');
            $j('#Country select').removeClass('rec');
            if(type == 'GeneralPublic'){
                $j('#Country').show();
                $j('#Country select').addClass('rec');
            }
        }


        function validateMandatoryFields(){
          var flag = true;
          $j('.rec').each(function (){
                  $j(this).parents('.form-group').removeClass('has-error');
                  if(!$j(this).val()){
                      flag = false;
                      $j(this).parents('.form-group').addClass('has-error');
                  }
                  
              }
          )

          //check if the select has choosen Job Functions, the select does not render for iec
          if("{!sRefererCommunity}"!="iec"){//this check is only for issp portal, not for iec
            if($j("[id$='inJobFunction_selected']").text() != ""){
              $j('#Function').removeClass('has-error');
            }else{
              flag = false;
              $j('#Function').addClass('has-error');
            }
          }

          return flag;
            
        }

        function validatePhone(){
          //the return value
          var isValidPhone = false;
          try{
            //phone number validation
            var phone = $j("input[name='{!$Component.newContact.businessphoneinput}']");
            var phoneNumber = phone.intlTelInput("getNumber");
            var isValidPhoneNumber = (typeof phoneNumber != "undefined" && phone.intlTelInput("isValidNumber"));
            //var countryData = phone.intlTelInput("getSelectedCountryData");
            if(isValidPhoneNumber){
              var completePhoneNbr = '+' + phone.intlTelInput("getSelectedCountryData").dialCode;
              phoneNumber = phoneNumber.replace(completePhoneNbr,"");
              phoneNumber = phoneNumber.replace("+1","");
              completePhoneNbr  = completePhoneNbr + phoneNumber;
              //Save dial code and country values into the hidden field
              var temp1 = document.getElementById('{!$Component.newContact.phone1}');
              temp1.value = completePhoneNbr;

              $j('.invalidphone').hide();
              isValidPhone = true;

            }else{
              $j('.invalidphone').show();
            }
          }catch(exception){
            $j('.invalidphone').show();
          }

          return isValidPhone;

        }

        function validateMobile(){
          //the return value
          var isValidMobile = true;
          $j('.invalidmobile').hide();
          try{
            //mobile number
            var mobile = $j("input[name='{!$Component.newContact.businessmobileinput}']");
            var mobileValue = mobile[0].value;
            //Check if mobile number was inserted
            if(typeof mobileValue != "undefined" && mobileValue != ""){
              var mobileNumber = mobile.intlTelInput("getNumber");
              var isValidMobileNumber = (typeof mobileNumber != "undefined" && mobile.intlTelInput("isValidNumber"));
              //mobile number validation
              if(isValidMobileNumber){
                var completeMobileNbr = '+' + mobile.intlTelInput("getSelectedCountryData").dialCode;
                mobileNumber = mobileNumber.replace(completeMobileNbr,"");
                mobileNumber = mobileNumber.replace("+1","");
                completeMobileNbr  = completeMobileNbr + mobileNumber;
                //Save dial code and country values into the hidden field
                var temp2 = document.getElementById('{!$Component.newContact.phone2}');
                temp2.value = completeMobileNbr;

              }else{
                $j('.invalidmobile').show();
                isValidMobile = false;
              }
            }

          }catch(exception){
            $j('.invalidmobile').show();
            isValidMobile = false;
          }

          return isValidMobile;

        }

        function validateFax(){
          //the return value
          var isValidFax = true;
          $j('.invalidfax').hide();
          try{
            //fax number validation
            var fax = $j("input[name='{!$Component.newContact.businessfaxinput}']");
            faxValue = fax[0].value;
            //Check if fax number was inserted
            if(typeof faxValue != "undefined" && faxValue != ""){
              var faxNumber = fax.intlTelInput("getNumber");
              var isValidFaxNumber = (typeof faxNumber != "undefined" && fax.intlTelInput("isValidNumber"));
              //fax number validation
              if(isValidFaxNumber){
                var completeFaxNbr = '+' + fax.intlTelInput("getSelectedCountryData").dialCode;
                faxNumber = faxNumber.replace(completeFaxNbr,"");
                faxNumber = faxNumber.replace("+1","");
                completeFaxNbr  = completeFaxNbr + faxNumber;
                //Save dial code and country values into the hidden field
                var temp3 = document.getElementById('{!$Component.newContact.phone3}');
                temp3.value = completeFaxNbr;

              }else{
                $j('.invalidfax').show();
                isValidFax = false;
              }
            }

          }catch(exception){
            $j('.invalidfax').show();
            isValidFax = false;
          }

          return isValidFax;
        }

        function validateInputs(){
          //validate the format number for the phone, mobile and fax per country
          var isPhoneOK = validatePhone();
          var isMobileOK = validateMobile();
          var isFaxOK = validateFax();
          
          var arePhoneFaxMobileNumbersValid = isPhoneOK && isMobileOK && isFaxOK;
          //validate mandatory input fields
          return arePhoneFaxMobileNumbersValid && validateMandatoryFields();

        }
    </script>  

    <input type="hidden" name="geoCode" id="geoCode" value=""/>
    <script>

      function getGeoCode() {
        if(typeof localStorage !== "undefined") {
          return localStorage.getItem("geoCode");
        } else {
          return "auto";
        }
      }
    
    
        var natphone = $j("input[name='{!$Component.newContact.businessphoneinput}']");
        var phone = $j("input[name='{!$Component.newContact.businessphone}']");
        var countryCode = "{!communityName}" == "CNS" ? "us" : "{!country}" == "" ?  getGeoCode() : "{!country}";    

        console.log("countryCode: " + countryCode);
        //console.log("{!country}: " + {!country});    

        natphone.intlTelInput({
            defaultCountry: countryCode,
            //nationalMode: true,
            preferredCountries: [""],
            numberType: "FIXED_LINE",
            utilsScript: "{!URLFOR($Resource.InternationalPhoneNumberFormat, '/intl-tel-input-master/lib/libphonenumber/build/utils.js')}"
        });

        /*
        natphone.intlTelInput({
          defaultCountry: "{!country}",
          nationalMode: true,
          preferredCountries: [""],
          numberType: "FIXED_LINE",
          utilsScript: "{!URLFOR($Resource.InternationalPhoneNumberFormat, '/intl-tel-input-master/lib/libphonenumber/build/utils.js')}"
      });
      */

    var natmobile = $j("input[name='{!$Component.newContact.businessmobileinput}']");
    var mobile = $j("input[name='{!$Component.newContact.businessmobile}']");

      natmobile.intlTelInput({
          defaultCountry: countryCode,
          //nationalMode: true,
          preferredCountries: [""],
          numberType: "MOBILE",
          utilsScript: "{!URLFOR($Resource.InternationalPhoneNumberFormat, '/intl-tel-input-master/lib/libphonenumber/build/utils.js')}"
      });

      var natfax = $j("input[name='{!$Component.newContact.businessfaxinput}']");
      var fax = $j("input[name='{!$Component.newContact.businessfax}']");

      natfax.intlTelInput({
          defaultCountry: countryCode,
          //nationalMode: true,
          preferredCountries: [""],
          numberType: "FIXED_LINE",
          utilsScript: "{!URLFOR($Resource.InternationalPhoneNumberFormat, '/intl-tel-input-master/lib/libphonenumber/build/utils.js')}"
      });

      function setInternationalPhoneNo(p) {
          if(p=='phone') {
              phone.val(natphone.intlTelInput("getNumber"));
          } else if(p=='mobile') {
              mobile.val(natmobile.intlTelInput("getNumber"));
          } else {
              fax.val(natfax.intlTelInput("getNumber"));
          }
      }


      //Fix EM: If user goes back we need to set again the country code/ country already selected
  
      var natphone = $j("input[name='{!$Component.newContact.businessphoneinput}']");
      var natmobile = $j("input[name='{!$Component.newContact.businessmobileinput}']");
      var natfax = $j("input[name='{!$Component.newContact.businessfaxinput}']");

      var phonenat = "{!con.Phone}";
      var phonemobile = "{!con.MobilePhone}";
      var phonefax = "{!con.Fax}";
      //alert(phonenat);
      //alert(phonefax );
      if (phonenat != "") {


        natphone.intlTelInput("setNumber", phonenat);
        var code = natphone.intlTelInput("getSelectedCountryData").dialCode;

        //natphone.value = natphone.replace("+" + code1, "");
        //natphone.intlTelInput("setCountry", coun1);

    }
    if (phonemobile != "") {
        //natmobile.intlTelInput("setNumber", phonemobile);
        //var countryData = natmobile.intlTelInput("getSelectedCountryData");
        //var number = phonemobile.replace("+" + code2 ,"");
        natmobile.intlTelInput("setNumber", phonemobile);
        //natmobile.intlTelInput("setCountry", coun2);

    }

    if (phonefax != "") {

        //natfax.intlTelInput("setNumber", phonefax);
        //var countryData = natfax.intlTelInput("getSelectedCountryData");
        //var number = phonefax.replace("+" + code3 ,"");
        natfax.intlTelInput("setNumber", phonefax);
        //natfax.intlTelInput("setCountry", coun3);

    }

</script>

          </div>
        </div>
      </div>
    </apex:define>
  </apex:composition>

  </body>
  </html>

</apex:page>