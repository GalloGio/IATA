<apex:page cache="false"
           sidebar="false"
           showHeader="false"
           standardStylesheets="false"
           readonly="true"
           controller="ISSP_OperationalCalendarController">

<c:ISSP_Header ></c:ISSP_Header>

<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/jquery.dataTables.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/dataTables.bootstrap.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/dataTables.buttons.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/buttons.bootstrap.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/jszip.min.js')}"></script>
<apex:includeScript value="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/pdfmake.0.1.5.min.js')}"/>
<!-- <script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/pdfmake.min.js')}"></script> -->
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/vfs_fonts.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/buttons.html5.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/buttons.print.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/buttons.colVis.min.js')}"></script>
<script src="{!URLFOR($Resource.ISSP_OperationalCalendar, '/js/iata_logo.js')}"></script>
<apex:includeScript value="{!URLFOR($Resource.jszip, '/FileSaver.min.js')}"/>

<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment-with-locales.min.js"></script>

<link href="{!URLFOR($Resource.ISSP_OperationalCalendar, '/css/dataTables.bootstrap.min.css')}" rel="stylesheet"/>
<link href="{!URLFOR($Resource.ISSP_OperationalCalendar, '/css/buttons.bootstrap.min.css')}" rel="stylesheet"/>
<link href="{!URLFOR($Resource.ISSP_OperationalCalendar, '/css/details.min.css')}" rel="stylesheet"/>
<link href="//fonts.googleapis.com/css?family=Roboto:100,400,500" rel="stylesheet"/>

<style>
    .loader {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 2s linear infinite;
        margin-left: 45%;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    #loading-modal-content {
        margin-top: 25%;
    }
</style>

<script>
    moment.locale("{!UserLanguage}");
    var LIST_FILTERS = {!listFiltersJson};
    var MAP_FREQUENCIES = {!mapFrequenciesJson};
    var isAirline = {!isAirline};
    var defaultCountry = "{!defaultCountry}";
    var defaultOperationType = "{!defaultOperationType}";
    var defaultFrequency = "{!defaultFrequency}";
    if (isAirline) {
        defaultFrequency = "";
    }
    var title = "{!$Label.ISSP_OperationalCalendar_Header}";
    //console.log(MAP_FREQUENCIES);
    //console.log(LIST_FILTERS);
    //console.log(defaultCountry);
    //console.log(defaultOperationType);
    //console.log(defaultFrequency);
    $(document).ready(function() {
        initFilters();
        refreshDetails();
        
        $(".countryFilter").change(function() {
            updatePicklistsFromCountry();
            refreshDetails();
        });
        $("#typeFilter").change(function() {
            var isCASS = $(this).val().includes("CASS");
            if (isCASS) $("#frequencyFilter").val("");
            $("#frequencyFilter").prop('disabled', isCASS);
            updatePicklistsFromType();
            refreshDetails();
            addExportButtons();
        });
        $("#frequencyFilter").change(function() {
            updatePicklistsFromFrequency();
            refreshDetails();
        });
        $("#currencyFilter").change(function() {
            refreshDetails();
        });
        $('#billingPeriodFilter').change(function() {
            refreshDetails();
        });
        $("#enableFiltersCheck").click(function() {
            var enabled = $(this).prop('checked');
            enableFilters(enabled);
        });
        $("#resetButton").click(function() {
            $(".countryFilter").val(defaultCountry);
            updatePicklistsFromCountry();
            $("#typeFilter").val(defaultOperationType);
            updatePicklistsFromType();
            $("#frequencyFilter").val(defaultFrequency);
            updatePicklistsFromFrequency();
            $('#billingPeriodFilter').val(new Date().getFullYear());
            $("#enableFiltersCheck").prop('checked',false);
            enableFilters(false);
            refreshDetails();
        });
        $(".btn-default").toggleClass('btn-default btn-primary');
    });
    
    function initFilters(){
        if ("{!$CurrentPage.parameters.fcountry}">"") {
            $(".countryFilter").val("{!$CurrentPage.parameters.fcountry}");
        } else {
            $(".countryFilter").val(defaultCountry);
        }
        updatePicklistsFromCountry(true);
        if ("{!$CurrentPage.parameters.ftype}">"") {
            $("#typeFilter").val("{!$CurrentPage.parameters.ftype}");
        } else {
            $("#typeFilter").val(defaultOperationType);
        }
        updatePicklistsFromType();
        if ("{!$CurrentPage.parameters.ffrequency}">"") {
            $("#frequencyFilter").val("{!$CurrentPage.parameters.ffrequency}");
        } else {
            $("#frequencyFilter").val(defaultFrequency);
        }
        updatePicklistsFromFrequency();
        if ("{!$CurrentPage.parameters.fcurrency}">"") {
            $("#currencyFilter").val("{!$CurrentPage.parameters.fcurrency}");
        }
        var fenablefilters = "{!$CurrentPage.parameters.fenablefilters}";
        if (fenablefilters>"") {
            var isEnabled = fenablefilters=='true';
            $("#enableFiltersCheck").prop("checked",isEnabled);
            enableFilters(isEnabled);
        } else {
            if (!isAirline) {
                $("#enableFiltersCheck").prop("checked",false);
                enableFilters(false);
            }
        }
    }
    
    function enableFilters(enabled) {
        if (isAirline) return;
        var disabled = !enabled;
        $(".countryFilter").prop("disabled",disabled);
        $("#typeFilter").prop("disabled",disabled);
        $("#frequencyFilter").prop("disabled",disabled);
        $("#currencyFilter").prop("disabled",disabled);
    }
    
    function setCalendarTitle() {
        var countryName = $('.countryFilter :selected').text();
        var divTitle = $("#title");
        if ($('.countryFilter :selected').val()=="") {
            divTitle.hide();
            divTitle.text(title.replace("{0}",""));
        } else {
            if ($("#typeFilter").val()=="") {
                divTitle.text(title.replace("{0}",countryName));
            } else {
                var typeText = $('#typeFilter :selected').text();
                divTitle.text(title.replace("{0}",countryName + " " + typeText));
            }
            divTitle.show();
        }
    }
    
    var csvButton = {
        extend: 'csvHtml5',
        exportOptions: {
            columns: ':visible',
            format: {
                body: function ( data, row, column, node ) {
                    var datatype= $(node).attr("data-type");
                    if (datatype=="date") {
                        return formatDate(data);
                    } else {
                        return data;
                    }
                }
            }
        },
        title: function () { return getExportFileNameCSV();}
    };
    var pdfButton = {
        extend: 'pdfHtml5',
        exportOptions: {
            columns: ':visible',
            footer: true,
            format: {
                body: function ( data, row, column, node ) {
                    var datatype= $(node).attr("data-type");
                    if (datatype=="date") {
                        return formatDate(data);
                    } else {
                        return data;
                    }
                }
            }
        },
        title: function () { return getExportFileNamePDF();},
        orientation: "portrait",
        customize: function ( doc ) {
            doc.content.splice( 0, 0, {
                margin: [ 0, 0, 0, 0 ],
                alignment: 'center',
                image: iata_logo
            });
            doc['footer']=(function(page, pages) {
                return {
                    columns: [
                        '\n{!$Label.ISSP_OperationalCalendar_DownloadDate}: ' + moment().format('D MMM YYYY'),
                        '\n{!$Label.ISSP_OperationalCalendar_LastModifiedDate}: ' + formatDate(getLastModifiedDate()),
                        {
                            alignment: 'right',
                            text: ['\n',{ text: page.toString() },  ' / ', { text: pages.toString() }]
                        }
                    ],
                    margin: [10, 0]
                }
            });
        }
    };
    
    function getLastModifiedDate() {
        var table = $('.table-pagination').DataTable();
        var lastModifiedDate = null;
        var tablerows = table.rows().data();
        var dateColumnNumber = 1;
        for (var i = 0; i < tablerows.length; i++) { 
            var row = tablerows[i];
            var modifiedDate = new Date(row[dateColumnNumber]);
            lastModifiedDate = lastModifiedDate>modifiedDate? lastModifiedDate: modifiedDate;
        }
        return lastModifiedDate;
    }
    
    function addExportButtons() {
        var table = $('.table-pagination').DataTable();
        var colCount = 0;
        for (var i=0; i<table.columns().count(); i++) {
            if(table.column(i).visible()) colCount++;
        }
        //PDF Button
        pdfButton.orientation = colCount>6? "landscape": "portrait";
        var isDisabled = $(".buttons-pdf").prop("disabled");
        $(".buttons-pdf").remove();
        $("#advanced-filters").empty();
        var table =  $('.table-pagination').dataTable();
        new $.fn.dataTable.Buttons(table, {
            buttons: [pdfButton]
        }).container().appendTo($('#exportPDF'));
        $(".buttons-pdf")
            .prepend( "<span class='glyphicon glyphicon-th' style='padding-right:2px;'></span>")
            .toggleClass('btn-default btn-primary')
            .prop("disabled", isDisabled);
        $(".buttons-pdf").attr('onclick','alert("{!$Label.ISSP_OperationalCalendar_Export_Disclaimer}")');
        // CSV Button
        $(".buttons-csv").remove();
        new $.fn.dataTable.Buttons(table, {
            buttons: [csvButton]
        }).container().appendTo($('#exportCSV'));
        $(".buttons-csv")
            .prepend( "<span class='glyphicon glyphicon-th' style='padding-right:2px;'></span>")
            .toggleClass('btn-default btn-primary')
            .prop("disabled", isDisabled);
        $(".buttons-csv").attr('onclick','alert("{!$Label.ISSP_OperationalCalendar_Export_Disclaimer}")');
        /*** WMO-388 ***/
        if("{!isAirline}" == "true") {
            $("#advanced-filters")
                .append("<div class='dt-buttons btn-group'><button class='btn buttons-html5 btn-primary'><span class='glyphicon glyphicon-th' style='padding-right:2px;'></span><span>{!$Label.ISSP_FDS_CustomFilterBtn}</span></button></div>");
            $("#advanced-filters").attr('onclick','openCustomFilters()');
        }
    }
    
    function containsInArray(array, match) {
        var result = [];
        for (i = 0; i < array.length; i++) {
            if (array[i].includes(match)) {
                result.push(array[i])
            }
        }
        return result;
    };
    
    function nvl(value) {
        return value==null? "": value;
    }
    
    function updatePicklistsFromCountry(isCalledFromInit) {
        var country = nvl($(".countryFilter").val());
        var opertionType = nvl($("#typeFilter").val());
        var filter = country + ",";
        var listValues = containsInArray(LIST_FILTERS,filter);
        updatePicklist($("#typeFilter"), listValues,1,opertionType);
        updatePicklist($("#frequencyFilter"), listValues,2,'');
        updatePicklist($("#currencyFilter"), listValues,3,'');
        if (!isCalledFromInit) {
            console.log('showDisclaimer1 ' + country+opertionType);
            showDisclaimer(country,opertionType);
        }
    }
    
    function updatePicklistsFromType() {
        var country = nvl($(".countryFilter").val());
        var opertionType = nvl($("#typeFilter").val());
        var filter = country + ",";
        if (opertionType!=undefined) {
            filter+= opertionType + ",";
        }
        var listValues = containsInArray(LIST_FILTERS,filter);
        if (opertionType==undefined) {
            updatePicklist($("#typeFilter"), listValues,1,'');
        }
        updatePicklist($("#frequencyFilter"), listValues,2,'');
        updatePicklist($("#currencyFilter"), listValues,3,'');
        console.log('showDisclaimer2 ' + country+opertionType);
        showDisclaimer(country,opertionType);
    }
    
    function updatePicklistsFromFrequency() {
        var country = nvl($(".countryFilter").val());
        var opertionType = nvl($("#typeFilter").val());
        var frequency = nvl($("#frequencyFilter").val());
        var filter = country + "," + opertionType + ",";
        if (frequency>"") {
             filter+= frequency + ",";
        }
        var listValues = containsInArray(LIST_FILTERS,filter);
        updatePicklist($("#currencyFilter"), listValues,3,'');
    }

    function updatePicklist(inputSelect, listValues, position, defValue) {
        inputSelect.find('option').remove();
        var listUniqueValues = [];
        // get only the part required
        $.each(listValues, function (i, item) {
            listUniqueValues.push(item.split(",")[position]);
        });
        // remove duplicates
        listUniqueValues = listUniqueValues.sort().filter(function(item, pos, self) {
            return self.indexOf(item) == pos;
        });
        // add None option if required
        if (listUniqueValues.length!=1) {
            var emptyText = "--{!$Label.ISSP_All}--";
            if (inputSelect.attr('id')=="typeFilter") {
                emptyText = "{!$Label.ANG_ISSP_Picklist_None}";
            }
            inputSelect.append($("<option>", {value: "",text : emptyText}));
        }
        // Add options
        $.each(listUniqueValues, function (i, item) {
            var label = item;
            if (position==2) {
                label = MAP_FREQUENCIES[item];
                if (label==null) label = item;
            }
            var option = $('<option>', {value: item,text: label});
            if (defValue==item) option.attr("selected",true);
            inputSelect.append(option);
        });
    }
    
    function refreshDetails() {
        hideError();
        setCalendarTitle();
        var country = $(".countryFilter").val();
        var frequency = $("#frequencyFilter").val();
        var operationType = $("#typeFilter").val();
        var currency = $("#currencyFilter").val();
        var billingPeriod = $("#billingPeriodFilter").val();
        // validate country and operationtype
        if (country=='') {
            showError("{!$Label.ISSP_OperationalCalendar_Country_Filter_Required}");
            return;
        }
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ISSP_OperationalCalendarController.loadDetailsRemote}',
            country, frequency, operationType, currency, billingPeriod,
            function(result, event){
                if (event.status) {
                    createDataTable($.parseJSON(result));
                } else if (event.type === 'exception') {
                    showError(event.message);
                } else {
                    console.log('Unknown error in refreshDetails result: ' + unescape(result));
                }
            }, 
            {escape: false}
        );
    }
    
    function initTable(cols, data) {
        var table = $('.table-pagination').DataTable({
            "language": {
                  "lengthMenu": "{!$Label.ISSP_Display_Records_per_page}",
                  "zeroRecords": "{!$Label.ISSP_Nothing_found}",
                  "info": "{!$Label.ISSP_Showing_total_records}",
                  "infoEmpty": "{!$Label.ISSP_No_records_available}",
                  "infoFiltered": "{!$Label.ISSP_filtered_from_total_records}",
                  "search": "{!$Label.ISSP_Search}",
                  "paginate": {
                    "next": "{!$Label.ISSP_Next}",
                    "previous": "{!$Label.ISSP_Previous}"
                  }
              },
              "aoColumns": cols
        });
        $("table.dataTable>thead>tr>th").addClass("table-header");
        return table;
    }
    
    function createDataTable(tableDef){
        // recreate the table inside div table-container
        var container = $("div#table-container");
        container.empty();
        container.append( $('<table></table>').attr({ class: "table table-condensed table-pagination" }));
        var table = initTable(tableDef.headers);
        var colTypes = [];
        var firstVisibleCol = null;
        $.each(tableDef.headers, function (i, line) {
            if (line.bVisible) {
                colTypes.push(line.sType);
                if (firstVisibleCol==null) firstVisibleCol=i;
            }
        });
        console.log(firstVisibleCol);
        
        $.each(tableDef.data, function (i, line) {
            var node = table.row.add(line).node();
            $.each(node.cells, function (j, cell) {
                if (colTypes[j]=="date") {
                    var jcell = $(cell);
                    jcell.attr("data-type","date");
                    jcell.attr("data-order",jcell.text());
                    jcell.text(formatDate(jcell.text()));
                }
            });
            $(node).addClass(line[0]); //first column contains the class name to use in this row
        });
        table.order([ firstVisibleCol, 'asc']).draw();
        //PDF button depends on the operation type value
        addExportButtons();
        $(".buttons-csv").prop("disabled",tableDef.data.length==0);
        $(".buttons-pdf").prop("disabled",tableDef.data.length==0);
    }
    
    function showError(message) {
        $("#errormessage")
            .text(message)
            .show();
        $(".buttons-csv").prop("disabled",true);
        $(".buttons-pdf").prop("disabled",true);
    }
    function hideError(message) {
        $("#errormessage").hide();
    }
    function showCalendar() {
        var href="/ISSP_OperationalCalendar?MainNav=resources&subNav=OperationalCalendar&mid=M2S4";
        if ($(".countryFilter").val()>"") {
          href+="&fcountry=" + $(".countryFilter").val();
        }
        if ($("#typeFilter").val()>"") {
          href+="&ftype=" + $("#typeFilter").val();
        }
        if ($("#frequencyFilter").val()>"") {
          href+="&ffrequency=" + $("#frequencyFilter").val();
        }
        if ($("#currencyFilter").val()>"") {
          href+="&fcurrency=" + $("#currencyFilter").val();
        }
        if ($("#enableFiltersCheck").prop("checked")) {
            href+="&fenablefilters=true";
        }
        window.location.href = href;
    }
    
    function getExportFileNameCSV() {
        return getExportFileNamePDF() + '_' + new Date().toDateString().replace(/ /g , "-");
    }
    function getExportFileNamePDF() {
        var filename = "{!$Label.ISSP_OperationalCalendar}";
        filename += " " + $(".countryFilter option:selected").text();
        filename += "-" + $("#typeFilter option:selected").text();
        if ($("#frequencyFilter").val()!="") {
            filename += " " + $("#frequencyFilter option:selected").text();
        }
        if ($("#currencyFilter").val()!="") {
            filename += " " + $("#currencyFilter option:selected").text();
        }
        filename += " " + $("#billingPeriodFilter option:selected").text();
        return filename;
    }
    
    function formatDate(str){
        try {
            if (str==null) return '';
            if (typeof str=='string' && str.trim()=='') return '';
            var result = moment(str).format('D MMM YYYY');
            return result=='Invalid date'? str: result;
        }catch (e) {
            return str;
        }
    }

    /*** WMO-388 ***/
    function openCustomFilters() {
        $('#custom-filters').modal('show'); 
        moveAll("#right-opt-operation-filter", "#left-opt-operation-filter", "value");
        moveAll("#right-opt-remittance-filter", "#left-opt-remittance-filter", "value");
        moveAll("#right-opt-country-filter", "#left-opt-country-filter", "title");
        prepopulate("#typeFilter", "operation-filter");
        prepopulate("#frequencyFilter", "remittance-filter");
        prepopulate(".countryFilter", "country-filter");
    }

    function prepopulate(fromId, toId) {
        var fromVal = $(fromId).val();
        if(fromVal) {
            var elem = $("#left-opt-"+toId+" option[value='"+fromVal+"']");
            if(elem) {
                var selectedVal = $(elem).detach();
                $(selectedVal).appendTo("#right-opt-"+toId);    
            }
        }
    }

    function changeTypeOfDownload(val) {
        if(val.value == "custom") {
            $("#countrySelector").removeClass("invisible");
        } else {
            $("#countrySelector").addClass("invisible");
        }
        moveAll("#right-opt-operation-filter", "#left-opt-operation-filter", "value");
        moveAll("#right-opt-remittance-filter", "#left-opt-remittance-filter", "value");
        moveAll("#right-opt-country-filter", "#left-opt-country-filter", "title");
    }

    function downloadZip() {
        var opt = $("#typeOfDownload").val();
        var fileFormat = $("input[name='formatFile']:checked").val();
        var operations = [];
        $("#right-opt-operation-filter option").each(function() {operations.push($(this).val());});
        var remittance = [];
        $("#right-opt-remittance-filter option").each(function() {remittance.push($(this).val());});
        var countries = [];
        $("#right-opt-country-filter option").each(function() {countries.push($(this).val());});

        var hasBSP = false;
        $.each($("#right-opt-operation-filter option"), function(i,v) {
            hasBSP |= !v.value.includes('CASS');
        });

        hasBSP = Boolean(hasBSP);
        if(!fileFormat || operations.length < 1 || (hasBSP && remittance.length < 1) || (countries.length < 1 && opt == 'custom')) {
            alert("{!$Label.ISSP_FDS_FillAllFields}");
            return;
        }

        alert("{!$Label.ISSP_OperationalCalendar_Export_Disclaimer}");

        startDownload(opt, operations, remittance, countries, "{!account.Id}", fileFormat);
    }

    var generationCounter;
    var zipFile;
    function startDownload(opt, operations, remittance, countries, accountId, fileFormat) {
        generationCounter = null;
        zipFile = null;
        $('#downloadBtn').attr("disabled", true);
        $("#loading-modal").modal("show");
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ISSP_OperationalCalendarController.createZipFile}',
            opt, operations, remittance, countries, accountId,
            function(result, event) {
                if (event.status) {
                    zipFile = new JSZip();
                    
                    if(fileFormat == 'csv') {
                        generationCounter = 0;
                        $.each(result.folders, function(i, f) {
                            if(f.files.length > 0) {
                                generationCounter++;
                            }
                        });
                    } else {
                        generationCounter = result.nrOfFiles;  
                    }

                    if(generationCounter == 0) {
                        alert("{!$Label.ISSP_FDS_NoResults}");
                        return;
                    }
                    $.each(result.folders, function(i,v) {
                        if(v.files.length > 0) {
                            var folder = zipFile.folder(v.folderName);
                            if(fileFormat == 'pdf') {
                                createPDFFile(folder, v.files); 
                            } else {
                                createCSVFile(folder, v.files);
                            }                            
                        }
                    });
                } else if (event.type === 'exception') {
                    showError(event.message);
                    $('#downloadBtn').attr("disabled", false);
                    $("#loading-modal").modal("hide");
                } else {
                    console.log('Unknown error during download result: ' + unescape(result));
                    $('#downloadBtn').attr("disabled", false);
                    $("#loading-modal").modal("hide");
                }
            },
            {escape: false}
        );
    }

    function createCSVFile(folder, files) {
        var fileBody = '';

        $.each(files, function(index1, file) {
            $.each(file.table.body, function(index2, row) {
                if((!fileBody && index2 == 0) || (index2 > 0)) {
                    var r = '';
                    $.each(row, function(index3, column) {
                        var val = safeValueForCSV(column.text);
                        r += val +',';  
                    });

                    r += (index2 == 0 ? '{!$Label.ISSP_FDS_CountryName}' : safeValueForCSV(file.countryName)) + '\n';
                    fileBody +=  r;
                }
            });
        });

        var dt = new Date();
        var csvFileName = folder.root.substring(0, folder.root.length-1) + ' ' + dt.getFullYear();
        addCSVFileToFolder(folder, fileBody, csvFileName + ".csv");  
    }

    function safeValueForCSV(v) {
        var val = v.replace(/(\r\n|\n|\r|\s+|\t|&#160;)/gm,' ');
        val = val.replace(/"/g, '""');
        val = val.replace(/ +(?= )/g,'');  
        return v;
    }

    function addCSVFileToFolder(folder, file, filename) {
        folder.file(filename, file);
        generationCounter--;
        if(generationCounter == 0) {
            finishDownload();
        }
    }

    function buildCSVFile(file) {
        var rows = "";
        $.each(file.table.body, function(index1, row) {
            var r = [];
            $.each(row, function(index2, column) {
                var val = column.text.replace(/(\r\n|\n|\r|\s+|\t|&nbsp;)/gm,' ');
                val = val.replace(/"/g, '""');
                val = val.replace(/ +(?= )/g,'');
                r.push(val);
            });
            rows += r.join(",");
            rows += "\n";
        });
        return rows;
    }

    function createPDFFile(folder, files) {
        $.each(files, function(index, file) {
            var metafile = buildPDFFile(file);
            var pdffile = pdfMake.createPdf(metafile);
            pdffile.getBuffer(function(buffer) {
                //addPDFFileToFolder(folder, new Blob([buffer], {type: 'application/pdf'}), file.fileName + ".pdf");
                addPDFFileToFolder(folder, buffer, file.fileName + ".pdf");
            }); 
        });
    }

    function addPDFFileToFolder(folder, file, filename) {
        folder.file(filename, file);
        generationCounter--;
        if(generationCounter == 0) {
            finishDownload();
        }
    }

    function finishDownload() {
        zipFile.generateAsync({type:"blob"})
        .then(function(content) {            
            if(window.navigator.msSaveBlob) {
                navigator.msSaveBlob(content, "Operational Calendars.zip");
            } else {
                var bContent = URL.createObjectURL(content);
            var element = document.createElement('a');
                element.setAttribute('href', bContent);
            element.setAttribute('download', "Operational Calendars.zip");
            element.style.display = 'none';
            document.body.appendChild(element);
            element.click();
            document.body.removeChild(element);
            }            
            $('#downloadBtn').attr("disabled", false);
            $("#loading-modal").modal("hide");
        });
    }

    function applyTableStyle(rows, filename) {
        var body = [];
        var header = rows[0];     
        body.push(header);   
        for(var i=1; i<rows.length; i++) {
            var row = rows[i];
            var style = (i%2 == 0 ? "tableBodyEven" : "tableBodyOdd");
            for(var j=0; j<row.length; j++) {
                row[j].style = style;
            }
            body.push(rows[i]);
        }

        return body;
    }

    function buildPDFFile(data) {
        var docDefinition = {
            content: [
                {
                    alignment: "center",
                    image: iata_logo,
                    margin: [0,0,0,0]
                },
                {
                    style: "title",
                    text: data.fileName,
                    margin: [0,0,0,12]
                },
                {                    
                    layout: "noBorders",
                    table: {
                        headerRows: 1,
                        body: applyTableStyle(data.table.body, data.fileName)
                    }
                }
            ],
            footer: function(page, pages) {
                return {
                    columns: [
                        '\n{!$Label.ISSP_OperationalCalendar_DownloadDate}: ' + moment().format('D MMM YYYY'),
                        '\n{!$Label.ISSP_OperationalCalendar_LastModifiedDate}: ' + data.lastModifiedDateStr,
                        {
                            alignment: 'right',
                            text: ['\n',{ text: page.toString() },  ' / ', { text: pages.toString() }]
                        }
                    ],
                    margin: [10, 0]
                }
            },
            styles: {
                title: {alignment: "center", fontSize: 15},
                tableHeader: {bold: true, fontSize: 11, color: "white", fillColor: "#2d4154", alignment: "center"},
                tableBodyEven: {},
                tableBodyOdd: {fillColor: "#f3f3f3"},
                tableFooter: {bold: true, fontSize: 11, color: "white", fillColor: "#2d4154"}
            },
            defaultStyles: {
                fontSize: 10
            },
            pageOrientation: data.orientation,
            pageSize: "A4"
        }
        
        return docDefinition;
    }
</script>

<div class="container" >
    <c:ISSP_CustomNavigation />
    
    <div id='table'>
        <!-- TITLE -->
        <div class="row">
            <div class="col-sm-12">
                <div id="title"></div>
            </div>
        </div>
        <!-- FILTERS -->
        <div class="row">
            <div class="col-sm-2 form-group">
                <apex:outputPanel layout="block" styleclass="form-check" rendered="{!NOT(isAirline)}">
                    <input type="checkbox" class="form-check-input" id="enableFiltersCheck"/>
                    <label class="form-check-label" for="enableFiltersCheck">{!$Label.ISSP_OperationalCalendar_EnableFilters}</label>
                </apex:outputPanel>
            </div>
            <div class="{!IF(isAirline, 'col-sm-6', 'col-sm-8')}">
                <button type="button" class="btn btn-default btn-calendar center-block" onclick="showCalendar()">{!$Label.ISSP_OperationalCalendar_Show_Calendar}</button>
            </div>
            <div id="exportCSV" class="{!IF(isAirline, 'col-sm-4', 'col-sm-2')}" style="float: right; text-align: right;">
                <span id="exportCSV"></span>
                <span id="exportPDF"></span>
                <apex:outputPanel layout="none" rendered="{!isAirline}">
                    <span id="advanced-filters" class="pull-right" style="margin-left: 1%"></span>
                </apex:outputPanel>
            </div>
        </div>
        <div class="row">
            <apex:form >
                <div class="col-sm-2">
                    <apex:outputPanel layout="block" styleclass="form-group">
                        <label for="countryFilterInput">{!$Label.ISSP_OperationalCalendar_CountryFilter}</label>
                        <apex:selectList styleclass="countryFilter form-control required" multiselect="false" size="1">
                            <apex:selectOptions value="{!countryOptions}" />
                        </apex:selectList>
                    </apex:outputPanel>
                </div>
                <div class="col-sm-2">
                    <apex:outputPanel layout="block" styleclass="form-group">
                        <label for="typeFilter">{!$Label.ISSP_OperationalCalendar_BSPCASSFilter}</label>
                        <select id="typeFilter" class="form-control required"></select>
                    </apex:outputPanel>
                </div>
                <div class="col-sm-2">
                    <apex:outputPanel layout="block" styleclass="form-group" >
                        <label for="frequencyFilter">{!$Label.ISSP_OperationalCalendar_FrequencyFilter}</label>
                        <select id="frequencyFilter" class="form-control"></select>
                    </apex:outputPanel>
                </div>
                <div class="col-sm-2">
                    <apex:outputPanel layout="block" styleclass="form-group">
                        <label for="currencyFilter">{!$Label.ISSP_OperationalCalendar_CurrencyFilter}</label>
                        <select id="currencyFilter" class="form-control"></select>
                    </apex:outputPanel>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label for="billingPeriodFilter">{!$Label.ISSP_OperationalCalendar_Billing_Period}</label>
                        <select id="billingPeriodFilter" class="form-control">
                            <option value="{!YEAR(TODAY())}">{!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="1">{!$Label.ISSP_AMS_Month_January} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="2">{!$Label.ISSP_AMS_Month_February} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="3">{!$Label.ISSP_AMS_Month_March} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="4">{!$Label.ISSP_AMS_Month_April} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="5">{!$Label.ISSP_AMS_Month_May} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="6">{!$Label.ISSP_AMS_Month_June} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="7">{!$Label.ISSP_AMS_Month_July} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="8">{!$Label.ISSP_AMS_Month_August} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="9">{!$Label.ISSP_AMS_Month_September} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="10">{!$Label.ISSP_AMS_Month_October} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="11">{!$Label.ISSP_AMS_Month_November} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="12">{!$Label.ISSP_AMS_Month_December} {!YEAR(TODAY())} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="{!YEAR(TODAY())-1}">{!YEAR(TODAY())-1} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                            <option value="{!YEAR(TODAY())+1}">{!YEAR(TODAY())+1} {!$Label.ISSP_OperationalCalendar_Billing_Period}</option>
                        </select>
                    </div>
                </div>
                <div id="resetFilters" class="col-sm-1">
                    <label class="invisible">{!$Label.ISSP_OperationalCalendar_Reset}</label>
                    <button id="resetButton" class="btn btn-primary" type="button">{!$Label.ISSP_OperationalCalendar_Reset}</button>
                </div>
            </apex:form>
        </div>
        
        <!-- ERROR MESSAGES -->
        <div class="row">
            <div class="col-sm-1"></div>
            <div class="col-sm-10">
                <div id="errormessage" class="alert alert-danger" style="display:none"></div>
            </div>
            <div class="col-sm-1"></div>
        </div>
        <apex:form id="disclaimer-form">
            <apex:actionFunction action="{!findDisclaimerLabel}" name="showDisclaimer" rerender="disclaimer-form">
                <apex:param name="selectedCountry" assignTo="{!selectedCountry}" value=""/>
                <apex:param name="selectedType" assignTo="{!selectedType}" value=""/>
            </apex:actionFunction>
            <apex:outputPanel layout="block" styleclass="row" rendered="{!NOT(ISBLANK(disclaimerLabelName))}">
                <div class="col-sm-1"></div>
                <div class="col-sm-10">
                    <div class="alert alert-warning">{!$Label[disclaimerLabelName]}</div>
                </div>
                <div class="col-sm-1"></div>
            </apex:outputPanel>
        </apex:form >
        <!-- DATA TABLE -->
        <div id="table-container"></div>

        <!-- WMO-388 -->
        <apex:outputPanel layout="none" rendered="{!isAirline}">
            <div id="custom-filters" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <apex:form id="adv-filters">

                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h3 class="modal-title" style="color: rgb(32, 107, 164); text-align: center;">
                                    {!$Label.ISSP_FDS_PopupTitle}
                                </h3>
                            </div>            
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-sm-1"></div>
                                    <div class="col-sm-10">
                                        <label for="typeOfDownload">{!$Label.ISSP_FDS_DownloadOpts}</label>
                                        <select id="typeOfDownload" class="form-control required" onchange="changeTypeOfDownload(this);">
                                            <option value="all">{!$Label.ISSP_FDS_AllCountries}</option>
                                            <option value="allservices">{!$Label.ISSP_FDS_AllCountriesWithServices}</option>
                                            <option value="custom" selected="selected">{!$Label.ISSP_FDS_ChooseCountries}</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-1"></div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-1"></div>
                                    <div class="col-sm-10">
                                        <label for="formatOfDownload">{!$Label.ISSP_FDS_FileFormat}</label>
                                        <fieldset style="border-left: 3px solid #b22222 !important;" id="formatOfDownload">
                                            <input style="margin-left: 2%;margin-right: 1%;" type="radio" name="formatFile" value="csv">CSV</input>
                                            <input style="margin-left: 2%;margin-right: 1%;" type="radio" name="formatFile" value="pdf">PDF</input>
                                        </fieldset>
                                    </div>
                                    <div class="col-sm-1"></div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-1"></div>
                                    <div class="col-sm-10">
                                        <c:ISSP_MultipicklistCmp
                                            leftLabel="{!$Label.ISSP_FDS_Operations}" 
                                            rightLabel="{!$Label.ISSP_FDS_OperationsSelected}"
                                            leftOptions="{!operationsOpts}"
                                            rightOptions="{!selectedOperations}"
                                            compareKey="value"
                                            size="4"
                                            required="true"
                                            identifier="operation-filter"/>
                                    </div>
                                    <div class="col-sm-1"></div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-1"></div>
                                    <div class="col-sm-10">
                                        <c:ISSP_MultipicklistCmp
                                            leftLabel="{!$Label.ISSP_FDS_Remittance}" 
                                            rightLabel="{!$Label.ISSP_FDS_RemittanceSelected}"
                                            leftOptions="{!remittancesOpts}"
                                            rightOptions="{!selectedFrenquencies}"
                                            compareKey="value"
                                            size="4"
                                            required="true"
                                            identifier="remittance-filter"/>
                                    </div>
                                    <div class="col-sm-1"></div>
                                </div>
                                <div id="countrySelector" class="row">
                                    <div class="col-sm-1"></div>
                                    <div class="col-sm-10">
                                        <c:ISSP_MultipicklistCmp
                                            leftLabel="{!$Label.ISSP_FDS_Countries}" 
                                            rightLabel="{!$Label.ISSP_FDS_CountriesSelected}"
                                            leftOptions="{!countriesOpts}"
                                            rightOptions="{!selectedCountries}"
                                            compareKey="title"
                                            size="8"
                                            required="true"
                                            identifier="country-filter"/>
                                    </div>
                                    <div class="col-sm-1"></div>
                                </div>
                            </div>
                            
                            <div class="modal-footer">
                                <button id="downloadBtn" type="button" class="btn btn-primary" onclick="downloadZip(); return false;">{!$Label.ISSP_FDS_Download}</button>
                            </div>
                        </apex:form>
                    </div>
                </div>
            </div>

            <div id="loading-modal" class="modal fade">
                <div class="modal-dialog">
                    <div id="loading-modal-content" class="modal-content">
                        <div class="modal-body">
                            <p style="text-align: center;">
                                {!$Label.ISSP_OperationalCalendar_DownloadWarning}
                            </p>
                            <div style="text-align: center;">
                                <div class="loader"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:outputPanel>
    </div>

</div>
</apex:page>