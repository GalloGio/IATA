<apex:page controller="IEC_SearchResultsController" action="{!onLoadAction}" language="{!language}" 
	docType="html-5.0"  applyBodyTag="false" applyHtmlTag="false" showHeader="false" sidebar="false" standardStylesheets="false" cache="true">
	
	<!--[if lte IE 8]>
    <html lang="en" class="ie lte-ie8 no-svg">
	<![endif]-->
	<!--[if IE 9]>
	    <html lang="en" class="ie ie9">
	<![endif]-->
	<!--[if !IE]><!-->
	
	<script type="text/javascript">
        function setHeightForCustomImages() {

        var imageDivs = document.getElementsByClassName('fileImage');
        console.log(imageDivs);
        for(i = 0; i<imageDivs.length; i++){
            var img = imageDivs[i].childNodes[0];
            console.log("here: " , img);

                img.style = "height: 100%;";

        }

        };
    </script>

    
	<html lang="{!language}">
	<!--<![endif]-->

		<head>
			<!-- Google Tag Manager -->     
			<script>
				(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
				new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
				j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
				'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
				})(window,document,'script','dataLayer','GTM-PWSNSM3');
			</script>
			<!-- End Google Tag Manager -->
			<script>
				function getDevice() {
					if (navigator.userAgent.match(/Tablet|Nexus|iPad/i)) {
						return "Tablet";
					} else if(navigator.userAgent.match(/Mobile|Windows Phone|Lumia|Android|webOS|iPhone|iPod|Blackberry|PlayBook|BB10|Opera Mini|\bCrMo\/|Opera Mobi/i) ) {
						return "Mobile";
					} else {
						return "Desktop";
					}
				}

				window.dataLayer = window.dataLayer||[];
				dataLayer.push({
					"user": {
						"email": "{!userDetails.userEmail}",
						"loginStatus": "{!userDetails.userLoginStatus}",
						"userId": "{!userDetails.userId}",   
						"zipCode": "{!userDetails.userZipCode}",
						"city": "{!userDetails.userCity}",
						"region": "{!userDetails.userRegion}",
						"country": "{!userDetails.userCountry}",
						"companyName": "{!userDetails.userCompany}"
					},
					"page": {
						"requestURI": window.location.pathname + window.location.search,
						"device": getDevice(),
						"breadcrumb": "Home > Search Results", 
						"language": "{!language}"
					},
					"ecommerce": {
                    	"currencyCode": "USD",
                    	"impressions": {!productListStr}
                    } 
				});

                function sortByPush() {
                	dataLayer.push({
					    "event": "userAction",
					    "eventCategory": "Search Pages",
					    "eventAction": "Sort By",
					    "eventLabel": $("[id$='sort-by'] option:selected").text()
					});
                }

                function paginationPush(val) {
                	dataLayer.push({
					    "event": "userAction",
					    "eventCategory": "Search Pages",
					    "eventAction": "Pagination",
					    "eventLabel": val
					});
                }

                function productListPush() {
                	 dataLayer[1].ecommerce = JSON.parse($('input[id$=\'ecommerce\']').val());
                }

                function refinePush() {
                	var filtersStr = $("[id$='selectedFilters']").val();
                	var p = '';

                	if(filtersStr) {
                		var x = filtersStr.split(':');						
						for(var i=0; i< x.length; i++) {
							var y = x[i].split('|');
							p+= y[1] + ' - ';
						}
						p = p.substring(0,p.length-3);
                	}

                	dataLayer.push({
					    "event": "userAction",
					    "eventCategory": "Search Pages",
					    "eventAction": "Refine by",
					    "eventLabel": p
					});

					productListPush();
                }

                function clickProductPush(type, id, name) {
                	if(type == 'In stock') {
                		selectPush(id)
                	} else {
                		preOrderPush(name, id);
                	}
                }

                function preOrderPush(name, id) {
                	dataLayer.push({
					    "event": "userAction",
					    "eventCategory": "Search Pages",
					    "eventAction": "Pre-Order",
					    "eventLabel": name + " - " + id
					});
                }

                function selectPush(productId) {
                	var products = JSON.parse($('input[id$=\'ecommerce\']').val());
                	var product;
                	for(var i=0; i<products.length; i++) {
                		if(products[i].id == productId) {
                			product = products[i];
                			break;
                		}
                	}

                	if(product) {
                		dataLayer.push({
						    "event": "productClick",
						    "ecommerce": {
						        "actionField": {"list": "Search Results"},
						        "click": {
						            "products": [product]
						        }
						    }
						});
                	}
                }
			</script>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<apex:stylesheet value="{!URLFOR($Resource.EcommerceAssets, 'css/styles.min.css')}" />
			<title>{!$Label.PageTitleProductList} - {!$Label.SiteTitle}</title>
		</head>

        <body data-media-size="" data-is-modal-open="false" id="page-top" onload="setHeightForCustomImages();">
        	<!-- Google Tag Manager (noscript) -->
			<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PWSNSM3"
			height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
			<!-- End Google Tag Manager (noscript) -->
			<div id="js-breakpoint-finder">
				<span class="device-xs screen-xsmall"/>
				<span class="device-sm screen-small"/>
				<span class="device-md screen-medium"/>
				<span class="device-lg screen-large"/>
				<span class="device-xl screen-xlarge"/>
			</div>
			
			<div id="js-app-container" class="app-container">

				<!-- Page Header -->
				<c:IEC_PageHeader />

				<div id="js-page-container" class="page-container">
					
					<!-- Page Main Content -->
					<main class="main-content publications">
						<div class="reader-only" id="reader-main-content">Main Content</div>

						<div class="section top-banner">
							<div class="inner-wrapper">
								<h2 class="lead"><apex:outputText value="{!$Label.Welcome_Message}" escape="false" /></h2>
							</div>
						</div>

						<div class="inner-wrapper">
							<ol class="list breadcrumb">
								<li><a href="{!$Site.BaseRequestURL}">{!$Label.Home}</a></li>
								<li>Search Result</li>
							</ol>
							<h1 class="page-title search-results">Search Results</h1>
							

							<apex:outputPanel styleClass="sub-container refine-container">
								<div class="search-container">
					                <form class="form form-search" action="{!$Site.BaseRequestURL}/IEC_SearchResults" name="form-search-results">
					                    <label>
					                        <span class="reader-only">{!$Label.Search}</span>
					                        <input class="user-input text" type="text" name="site-search" placeholder="{!$Label.Search}" value="{!searchToken}" />
					                    </label>
					                    <button class="button icon search" type="submit"><span class="reader-only">{!$Label.Search}</span></button>
					                </form>
					            </div>

								<section class="group-container refine-by">
									<apex:form id="frmFilters" styleClass="frmFilters">
										<h2 class="group-title">{!$Label.Refine_by}:</h2>
										<div class="accordion-container select-deselect">
	                    					<dl class="list refine-by">
						                        <apex:variable value="{!1}" var="index1" />
						                        <apex:repeat value="{!filters}" var="filter">
						                            <dt>
						                                <div class="accordion-title js-toggle is-open" data-target="{!filter.field}" data-target-element=".accortion-panel">{!$Label.Select} {!filter.label}</div>
						                                <div class="list-title is-open">
						                                    {!filter.label}
						                                    
						                                    <apex:variable var="picklistSelectAll" value="1" rendered="{!filter.type_x =='PICKLIST'}">
							                                    <a class="select-all refine-select-all" data-is-visible="true" data-target="{!filter.field}" data-target-element=".js-checkbox-container" href="#">({!$Label.select_all})</a>
							                                    <a class="deselect-all refine-deselect-all" data-is-visible="false" data-target="{!filter.field}" data-target-element=".js-checkbox-container" href="#">({!$Label.deselect_all})</a>
						                                    </apex:variable>

						                                </div>
						                            </dt>
						                            <dd class="accortion-panel js-checkbox-container is-open" data-id="{!filter.field}">
						                                <ul class="list">
						                                	<apex:variable value="{!1}" var="index2" />
						                                	
						                                	<!-- PickList or Yes/No filters -->
						                                	<apex:variable var="picklistFilters" value="1" rendered="{!OR(filter.type_x =='PICKLIST', filter.type_x =='BOOLEAN')}">
							                                	<apex:repeat value="{!filter.values}" var="item">
								                                    <li>
								                                    	<apex:outputPanel layout="none" rendered="{!AND(item.label != 'In stock', item.label != 'Out of stock')}">
									                                        <div class="field-group checkbox inline">
									                                            <div class="checkbox-box">
									                                                <div class="custom-user-input checkbox">
									                                                    <input class="user-input checkbox" type="checkbox" id="refine-checkbox{!index1}-{!index2}" value="{!filter.field}|{!item.value}" />
									                                                    <label class="custom-checkbox" for="refine-checkbox{!index1}-{!index2}"><i class="icon"></i></label>
									                                                </div>
									                                                <label class="input-label" for="refine-checkbox{!index1}-{!index2}">{!item.label}</label>
									                                            </div>
									                                        </div>
								                                    	</apex:outputPanel>
								                                    </li>
																	<apex:variable value="{!index2 +1}" var="index2" />
							                                    </apex:repeat>
						                                    </apex:variable>
						
						                                    <!-- Free text Filters -->
						                                    <apex:variable var="freeTextFilters" value="1" rendered="{!filter.type_x =='STRING'}">
																<li>
																	<div class="field-group input inline">
																		<input type="text" id="refine-input{!index1}" data-field="{!filter.field}" />
																	</div>
																</li>
						                                    </apex:variable>

						                                </ul>
						                            </dd>
						                            <apex:variable value="{!index1 +1}" var="index1" />
						                        </apex:repeat>
						                    </dl>
						                    <div class="footer-actions">	
												<apex:inputHidden id="selectedFilters" value="{!selectedFilters}" />

						                    	<apex:commandButton styleClass="button secondary" value="{!$Label.Refine}" action="{!refine}" reRender="main_container" status="sortByStatus" 
						                    		oncomplete="javascript:matchHeight2();refinePush();"/>
						                    </div>
						                </div>
					                </apex:form>
								</section>
							</apex:outputPanel>

							<apex:outputPanel styleClass="main-container" layout="block" rendered="{!searchToken==null}">
								<div class="alert error">Please specify search token</div>							
							</apex:outputPanel>
							<apex:outputPanel styleClass="main-container" layout="block" rendered="{!len(searchToken) <2}">
								<div class="alert error">You should specify 2 characters for searching</div>							
							</apex:outputPanel>

							<apex:outputPanel styleClass="main-container" rendered="{!AND(searchToken!=null,len(searchToken) >=2)}" id="main_container">
								<apex:outputPanel layout="block" styleClass="alert error" rendered="{!products.size == 0}">
									NO PRODUCT FOUND
								</apex:outputPanel>

								<apex:outputPanel layout="block" styleClass="sort-by" rendered="{!products.size > 0}">
									<p class="note-results">
										<strong class="number-of-results">{!allProducts.size}</strong> items contain the word(s): <strong class="search-keyword">{!searchToken}</strong>
									</p>

									<div class="sort-by">
						                <label for="sort-by" class="input-label">{!$Label.SortBy}</label>
						                <div class="custom-user-input select">
						                    <apex:form >
						                    	<apex:inputHidden id="ecommerce" value="{!productListStr}" />
												<i class="icon chevron-down"></i>
												<apex:selectList id="sort-by" value="{!sortBy}" styleClass="user-input select" size="1">
		                                			<apex:selectOptions value="{!sortingFields}"/>
		                                			<apex:actionSupport event="onchange" oncomplete="javascript:matchHeight2();sortByPush();" 
		                                				action="{!sortProducts}" status="sortByStatus" reRender="main_container" />
		                            			</apex:selectList>
		                            			<apex:actionStatus id="sortByStatus">
		                            				<apex:facet name="start">
														<div class="overlay"></div>
														<div class="modal-dialog" id="js-modal-dialog"><img src="{!$Resource.IEC_progress}" border="0" width="43" height="15" /></div>
		                                        	</apex:facet>                                        	
		                            			</apex:actionStatus>                                                
	                            			</apex:form>
						                </div>
						            </div>
								</apex:outputPanel>

								<apex:outputPanel layout="block" id="productList" rendered="{!products.size > 0}">
									<ul class="list product-list">
										<apex:repeat value="{!products}" var="prod">
											<li class="list-item">
												<div class="item-wrapper">
													<figure class="item-image">
														<a href="{!$Site.BaseRequestURL}/IEC_ProductDetails?id={!prod.ProductNumber}" onclick="clickProductPush('{!prod.InventoryStatus}','{!prod.ProductNumber}' ,{!prod.productNameAnalytic});">
                                                            <apex:outputPanel layout="block" style="height: 180px;" rendered="{!prod.imageFile != '' }">

                                                            <div class="fileImage" layout="block" style="height: 180px;">
                                                                <apex:outputText value="{!prod.imageFile}" escape="false"/>
                                                            </div>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel rendered="{!prod.imageFile == '' }">
                                                                <img src="{!URLFOR($Resource.Product_Images, prod.ImageName)}" alt="{!prod.ProductName}" />
                                                            </apex:outputPanel>
														</a>
													</figure>
													<h2 class="item-name">
														<a href="{!$Site.BaseRequestURL}/IEC_ProductDetails?id={!prod.ProductNumber}" onclick="clickProductPush('{!prod.InventoryStatus}','{!prod.ProductNumber}' ,{!prod.productNameAnalytic});">{!prod.ProductName}</a>
													</h2>
													<h3 class="item-description-title" style="{! IF(isBlank(prod.Media), 'display:none', 'display:inline')}">
														{!prod.Media}
													</h3>
													<br/>
													<p class="item-edition" style="{! IF(isBlank(prod.Edition), 'display:none', 'display:inline')}">
														Edition: {!prod.Edition}<br />
													</p>
													<p class="item-language" style="{! IF(isBlank(prod.Language), 'display:none', 'display:inline')}">												
														Language: {!prod.Language}
													</p>
													<p class="item-description">{!prod.ProductShortDesc}</p>
													
													<!-- Scenario 1: In Stock -->
													<apex:outputPanel layout="block" styleClass="item-stock in-stock" rendered="{!(prod.InventoryStatus == 'In stock' || prod.InventoryStatus == 'Available Now') && prod.ProductInfoId == null}">
		                                                {!prod.InventoryStatus}
		                                            </apex:outputPanel>
		                                            <!-- Scenario 2: Out of Stock -->
													<apex:outputPanel layout="block" styleClass="item-stock out-of-stock" rendered="{!(prod.InventoryStatus != 'In stock' && prod.InventoryStatus != 'Available Now') && prod.ProductInfoId == null}">
		                                                {!prod.InventoryStatus}
		                                            </apex:outputPanel>


		                                            <!-- Regular Price if exist -->
		                                            <apex:outputPanel styleClass="item-price regular-price {!IF(AND(prod.CustomerPrice!=null , prod.CustomerPrice>0),'line-stroke','')}" layout="block" rendered="{! prod.RegularPrice!=null && prod.RegularPrice > 0 && prod.ProductInfoId == null && prod.Sell_Through_eCommerce}">
														<apex:outputText styleClass="price-value" value="{0, number, currency}">
		                                                    <apex:param value="{!prod.RegularPrice}" />
		                                                </apex:outputText>
														<span class="price-label">{!$Label.regular_price}</span>
													</apex:outputPanel>

													<!-- Discounted price if exist -->
													<apex:outputPanel styleClass="item-price discounted-price" layout="block" rendered="{! prod.CustomerPrice!=null && prod.CustomerPrice > 0 && prod.ProductInfoId == null}">
														<apex:outputText styleClass="price-value" value="{0, number, currency}">
		                                                    <apex:param value="{!prod.CustomerPrice}" />
		                                                </apex:outputText>
														<span class="label-value">{!$Label.discounted_price}</span>
													</apex:outputPanel>

													<!-- Price not exit: Direct Sales -->
													<apex:outputPanel styleClass="item-price regular-price" layout="block" rendered="{! AND(prod.RegularPrice==null, prod.CustomerPrice==null, prod.ProductInfoId == null)}">
														<span class="price-label">{!$Label.Direct_Sales}</span>
													</apex:outputPanel>

                                                    <a class="button" href="{!$Site.BaseRequestURL}/IEC_ProductDetails?id={!prod.ProductNumber}"
                                                    	onclick="clickProductPush('{!prod.InventoryStatus}','{!prod.ProductNumber}' ,{!prod.productNameAnalytic});">
                                                    	{! IF(OR(prod.InventoryStatus == 'Out of stock', prod.InventoryStatus == 'Coming Soon'), $Label.PreOrderAddToCart, $Label.Button_Select)}
                                                    </a>
												</div>
											</li>
										</apex:repeat>
									</ul>
								</apex:outputPanel>

								<!-- Pagination AJAX functions -->
								<apex:form id="frmPagination">
									<apex:actionFunction name="gotoPage" reRender="main_container" action="{!gotoPage}" status="sortByStatus" 
										oncomplete="javascript:matchHeight2(); productListPush(); paginationPush({!pageNumber});">
				                        <apex:param name="pageNum" value="" assignTo="{!pageNumber}"/>
				                    </apex:actionFunction>

				                    <apex:actionFunction name="gotoNext" reRender="main_container" action="{!gotoNext}" status="sortByStatus" 
				                    	oncomplete="javascript:matchHeight2(); productListPush(); paginationPush('Next');" />

				                    <apex:actionFunction name="gotoPrevious" reRender="main_container" action="{!gotoPrevious}" status="sortByStatus" 
				                    	oncomplete="javascript:matchHeight2(); productListPush(); paginationPush('Previous');" />
								</apex:form>
								
								<!-- Pagination -->
								<div class="pagination tablet desktop">
					                <div class="page-number">
					                    <ol class="list page-number">
					                        <apex:variable var="btnPrevious" value="1" rendered="{!showPrevious}">
					                        	<li class="prev"><a href="javascript:gotoPrevious();"><span class="reader-only">Previous</span><i class="fa fa-chevron-left" aria-hidden="true"></i></a></li>
											</apex:variable>
					                        <apex:repeat value="{!pages}" var="page">
					                        	<li class="page-number{!IF(currentPageNumber==page,' selected','')}"><a href="javascript:gotoPage({!page});">{!page}</a></li>
					                        </apex:repeat>
					                        <apex:variable var="btnNext" value="1" rendered="{!showNext}">
					                        	<li class="next"><a href="javascript:gotoNext();"><span class="reader-only">Next</span><i class="fa fa-chevron-right" aria-hidden="true"></i></a></li>
				                        	</apex:variable>
					                    </ol>
					                </div>
					            </div>

					            <div class="pagination mobile">
					            	<apex:variable var="btnPreviousMobile" value="1" rendered="{!showPrevious}">
						                <div class="control prev">
						                    <a href="javascript:gotoPrevious();">
						                        <span class="reader-only">Previous</span>
						                        <i class="fa fa-chevron-left" aria-hidden="true"></i>
						                    </a>
						                </div>
					                </apex:variable>

					                <div class="page-number mobile">
					                    <ol class="list page-number">
					                        <apex:repeat value="{!pages}" var="page">
					                        <li class="page-number{!IF(currentPageNumber==page,' selected','')}"><a href="javascript:gotoPage({!page});">{!page}</a></li>
					                        </apex:repeat>
					                        <li class="page-number"><a href="#">...</a></li>
					                    </ol>
					                </div>
					                <apex:variable var="btnNextMobile" value="1" rendered="{!showNext}">
						                <div class="control next">
						                    <a href="javascript:gotoNext();">
						                        <span class="reader-only">Next</span>
						                        <i class="fa fa-chevron-right" aria-hidden="true"></i>
						                    </a>
						                </div>
					                </apex:variable>
					            </div>
											
							</apex:outputPanel>

						</div>
					</main>

					<!-- Page Footer  -->
					<c:Footer />
				</div>

			</div>

			<div class="modal-container is-hidden" id="js-modal">
        		<div class="overlay"></div>
        		<div class="modal-dialog" id="js-modal-dialog"></div>
    		</div>

			<script src="{!URLFOR($Resource.EcommerceAssets, 'js/vendor.min.js')}"></script>
			<script src="{!URLFOR($Resource.EcommerceAssets, 'js/script.js')}"></script>

			<script type="text/javascript">

				var matchHeight2 = function(){
					setHeightForCustomImages();
					var h = 0;
		            $(".product-list .list-item").each(function(i){
		                if($(this).height() > h)
		                    h = $(this).height();
		            });

		            $(".product-list .list-item").each(function(i){
		                $(this).height(h);
		            });
				}


				$(document).ready(function(){

					var selected_filters;

					var updateSelectedFilters = function(){
						selected_filters = [];
						$(".frmFilters input[type='checkbox']:checked").each(function(idx, item){
							selected_filters.push($(item).val());
						});

						// add free text filters 
						$(".frmFilters input[type='text']").each(function(idx, item){
							if($(item).val().trim() !='')
								selected_filters.push($(this).data('field') + '|' +$(item).val().trim());
						});

						$('input[id$=selectedFilters]').val(selected_filters.join(':'));

						
						//console.log(selected_filters);
					}

					$(".frmFilters input[type='text']").on('change',function(event){
						updateSelectedFilters();
					});

					$('.select-deselect')
						.on('click', '.refine-select-all', function(event) {
							event.preventDefault();
							var targetID = $(this).data('target'),
								targetElement = $(this).data('target-element'),
								targetCheckbox = targetElement+'[data-id="'+targetID+'"] .user-input';

							$(this).parents('.select-deselect').find(targetCheckbox).prop('checked', true);
							updateSelectedFilters();

							$(this).attr('data-is-visible', 'false');
							$(this).siblings().attr('data-is-visible', 'true');
						})
						.on('click', '.refine-deselect-all', function(event) {
							event.preventDefault();
							var targetID = $(this).data('target'),
								targetElement = $(this).data('target-element'),
								// checkboxContainer = targetElement+'[data-id="'+targetID+'"]',
								targetCheckbox = targetElement+'[data-id="'+targetID+'"] .user-input';

							$(this).parents('.select-deselect').find(targetCheckbox).prop('checked', false);
							updateSelectedFilters();

							$(this).attr('data-is-visible', 'false');
							$(this).siblings().attr('data-is-visible', 'true');
						})
						.on('click', '.user-input', function() {
							updateSelectedFilters();
						}
					);

				});
			</script>
		</body>
	</html>
</apex:page>