<apex:page controller="ISSP_ChangePassword" showHeader="false" title="{!$Label.ISSP_ChangePassword}" language="{!$CurrentPage.parameters.language}" applyHtmlTag="false">

	<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >

	<head>
		<apex:includeLightning />
		<apex:slds />
		
		<apex:stylesheet value="s/OneIdResources/css/normalize.css"/>
		<apex:stylesheet value="s/OneIdResources/css/OneIdStyles.css"/>

		<style>
			body{
				background-color: white !important;
				/*needed because OneIdStyles sets body background*/
			}

			.salesforceIdentityChangePassword .slds-button {
				color: #fff;
				background-color: #eb3014;
				text-transform: uppercase;
				font-size: 16px;
				padding: 7px 16px;
			}

			.slds-input[type="password"]{
				border-left: 3px solid red;
				font-size: 16px;
				font-family: 'Open Sans', 'Salesforce Sans', sans serif;
			}
			
			::placeholder, ::-webkit-input-placeholder, ::-moz-placeholder, :-ms-input-placeholder,:-moz-placeholder {
				font-size: 1rem;
			}

			.custPopup{ 
				background-color: white; 
				border-width: 2px; 
				border-style: solid; 
				z-index: 9999; 
				left: 50%; 
				padding:11px; 
				position: absolute; 
				width: 600px; 
				margin-left: -240px; 
				top:100px;
				scrollable: true;
			} 

			.popupBackground{ 
				background-color:black; 
				opacity: 0.20; 
				filter: alpha(opacity = 20);
				position: absolute; 
				width: 100%; 
				height: 100%; 
				top: 0; 
				left: 0; 
				z-index: 9998; 
			}

			.slds-text-link {
				cursor: pointer;
			}

			.terms{
				font-size :14px;
				color:#00305b;
				font-weight: 900;
			}
			div#scrollable_contentz{
				position: relative;
				width: 100%;
				border: 1px solid #E8E9EB;
				height:250px;
				z-index: 1;
				overflow-y:auto;
			}	


			[hidden] {
				display: none !important;
			}
			.checked {
				color: #228B22;
			}

			.checkCircle label {
				display: block;
				width: 15px;
				height: 15px;
				border-radius: 50px;

				transition: all .5s ease;
				cursor: initial;
				position: absolute;
				top: 2.5px;
				left: 2.5px;
				z-index: 1;

				box-shadow:inset 0px 1px 4px rgba(0,0,0,0.5);
			}

			.checkCircle input[type=checkbox]:checked + label {
				background: #228B22;
			}		

		</style>
	</head>
	
	<div class="slds-scope">
		<div class="slds-grid">
			<div id="header" class="slds-size_1-of-1" />
		</div>
		
		<apex:form id="theForm" >
			<apex:outputPanel layout="block" id="mainBlock" styleClass="slds-container_large slds-container_center slds-m-vertical_medium slds-grid slds-wrap salesforceIdentityChangePassword" rendered="{! !passwordChanged}">

				<apex:outputPanel layout="block" rendered="{!changePasswordMessage}" styleClass="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning slds-m-bottom_medium" html-role="alert">
					<span class="slds-assistive-text">Warning</span>
					<span class="slds-icon_container slds-icon-utility-warning slds-m-right_x-small" >
						<svg class="slds-icon slds-icon_x-small" aria-hidden="true">
							<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#warning')}"></use>
						</svg>
					</span>
					<h2><apex:outputText value="{!$Label.ISSP_60Day_Password_Reset}" escape="false" /></h2>
				</apex:outputPanel>

				

				<apex:outputPanel rendered="{!AND(serviceName='FRED',fredFirst = false)}" styleClass="slds-col slds-m-bottom_medium slds-size_1-of-1 slds-has-error slds-text-align_center">					
						<p class="slds-form-element__help">{!$Label.ISSP_Old_Passwords}</p>					
				</apex:outputPanel>

				<div class="slds-col slds-m-bottom_medium slds-size_1-of-1 slds-has-error slds-text-align_center">
					<apex:repeat value="{!errorMessage}" var="er" id="ErrorRepeat">
						<p class="slds-form-element__help"><apex:outputText value="{!er}" escape="false" /></p>
					</apex:repeat>
				</div>

				<div class="passwordRules slds-m-bottom_medium">
					<p>{!$Label.ISSP_new_password_must_have}</p>
					<div class="slds-grid">
						<div class="checkCircle slds-is-relative slds-m-right_x-large" >
							<input type="checkbox" value="1" id="checkCircleInputChars" hidden="true" disabled="true" />
							<label for="checkCircleInput"></label>
						</div>
						<p id='chars' class="notChecked">{!$Label.ISSP_characters_new_password}</p>
					</div>
					<div class="slds-grid">
						<div class="checkCircle slds-is-relative slds-m-right_x-large" >
							<input type="checkbox" value="1" id="checkCircleInputLetter" hidden="true" disabled="true" />
							<label for="checkCircleInput"></label>
						</div>
						<p id='letter' class="notChecked">{!$Label.ISSP_letters_new_password}</p>
					</div>
					<div class="slds-grid">
						<div class="checkCircle slds-is-relative slds-m-right_x-large" >
							<input type="checkbox" value="1" id="checkCircleInputNumber" hidden="true" disabled="true" />
							<label for="checkCircleInput"></label>
						</div>
						<p id='number' class="notChecked">{!$Label.ISSP_number_new_password}</p>
					</div>   
				</div>

				<div class="slds-col slds-m-bottom_medium slds-size_1-of-1">
					<div class="slds-form-element__control">
						<apex:inputSecret id="pass" styleClass="slds-input" value="{!currentPassword}" html-placeholder="{!IF(!tempPass, $Label.ISSP_CurrentPassword, $Label.ISSP_TemporaryPassword)}"/>
					</div>
				</div>

				<div class="slds-col slds-m-bottom_medium slds-size_1-of-1">
					<div class="slds-form-element__control">
						<apex:inputSecret id="newPass" styleClass="slds-input" value="{!newPassword}" html-placeholder="{!$Label.ISSP_NewPassword}"/>
					</div>
				</div>

				<div class="slds-col slds-m-bottom_medium slds-size_1-of-1">
					<div class="slds-form-element__control">
						<apex:inputSecret id="matchPass" styleClass="slds-input" value="{!confirmNewPassword}" html-placeholder="{!$Label.ISSP_ConfirmPassword}"/>
					</div>
				</div>

				<apex:actionFunction name="showpopup"  action="{!showTCpopup}" status="status" reRender="tcpopup"/>
				
				<apex:outputPanel styleClass="slds-m-vertical_medium" rendered="{!serviceName='FRED'}" >
					<div class="slds-form-element">
					 <div class="slds-form-element__control">
						<span class="slds-checkbox">
						 <apex:inputCheckbox id="checkbox" value="{!termsAndConditionChecked}"/>
						 <label class="slds-checkbox__label" for="{!$Component.checkbox}">
							<span class="slds-checkbox_faux"></span>
						 </label>
						 <span class="slds-form-element__label slds-text-link" onclick="showpopup()">{!$Label.ISSP_Registration_acceptGeneralConditions}</span>
						</span>
					 </div>
					</div>
				</apex:outputPanel>	

				
				<apex:outputPanel id="tcpopup">								
					<apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/> 
						<apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
							<div id="scrollable_contentz">
								<apex:pageBlock >		
								<p style="font-size: 36px; color:#00305b; font-weight:900;" >
									{!$Label.TitleTermsConditionFred}</p> <br></br> 
									{!$Label.TermsConditionFred}
								</apex:pageBlock>
								<apex:commandButton value="Close" action="{!closePopup}" rerender="tcpopup"/>
							</div>				
						</apex:outputPanel>				
				</apex:outputPanel>

				<div class="slds-col_bump-left slds-max-small-size_1-of-1">
					<button class="slds-button slds-size_1-of-1 slds-button_neutral" onclick="changePassword(); return false;"> {!$Label.ISSP_ChangePassword}</button>
					<apex:actionFunction name="changePassword" action="{!changePassword}"/>
				</div>				
				
				<apex:outputPanel id="pollerPanel">
					<apex:actionPoller id="poller" action="{!getcheckProvisioning}" enabled="{!statusPoller}" interval="5" reRender="changeData"/>
				</apex:outputPanel>				
				
					<apex:outputPanel id="changeData">
						<apex:outputPanel rendered="{!statusPoller}">
							<div class="slds-spinner_container">
								<div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
									<span class="slds-assistive-text">Please Wait</span>
									<div class="slds-spinner__dot-a"></div>
									<div class="slds-spinner__dot-b"></div>
								</div>
							</div>
						</apex:outputPanel>
					</apex:outputPanel>
				
				<!--<script>
					function showSpinner(){
					console.log('showSpinner');                        
						$('.slds-spinner_container').removeClass('slds-hide');
						$('.slds-spinner_container').addClass('slds-show');
						var winWidth = $(document).width();
						var winHeight = $(document).height();
						$('.slds-spinner_container').css({ 'width': winWidth,'height': winHeight });
					}

					function hideSpinner(){
						
						console.log('aqui hideSpinner');
						if({!refresh})                    	
							$('.slds-spinner_container').removeClass('slds-show');
							$('.slds-spinner_container').addClass('slds-hide');                    	
					}
				</script>-->


			</apex:outputPanel>

			<apex:outputPanel styleClass="slds-container_large slds-container_center slds-m-vertical_medium slds-grid slds-wrap salesforceIdentityChangePassword" rendered="{! passwordChanged}">
				<apex:outputPanel styleClass="slds-text-align_center">
					<h1 class="slds-m-bottom_medium">{! $Label.ISSP_PasswordChanged_FRED}</h1>
				</apex:outputPanel>
			</apex:outputPanel>			

			</apex:form>

		<div class="slds-grid">
			<div id="footer" />
		</div>
	</div>
	

	<script>

	$Lightning.use("c:OneId_Visualforce_APP", function() {
		$Lightning.createComponent("c:OneIdHeader",
			{ blockLogo : true },
			"header"
		);
		$Lightning.createComponent("c:OneIdFooter",
			{ },
			"footer"
		);
	});


	var password = document.getElementById('{!$Component.theForm.pass}');
	var newPassword = document.getElementById('{!$Component.theForm.newPass}');
	var confirmPassword = document.getElementById('{!$Component.theForm.matchPass}');

	newPassword.addEventListener("input", checkRules);
	confirmPassword.addEventListener("input", matchPasswords);

	function checkRules() {

		//check number of characters
		var nChars = newPassword.value.length;
		if (nChars >= 8)
		{
			document.getElementById("chars").className = "checked";
			document.getElementById("checkCircleInputChars").checked = true;
		} else {
			document.getElementById("chars").className = "notChecked";
			document.getElementById("checkCircleInputChars").checked = false;
		}

		//check if it has a number
		var hasNumber = /\d/;
		if (hasNumber.test(newPassword.value)) {
			document.getElementById("number").className = "checked";
			document.getElementById("checkCircleInputNumber").checked = true;
		} else {
			document.getElementById("number").className = "notChecked";
			document.getElementById("checkCircleInputNumber").checked = false;
		}

		//check if it has a letter
		var hasLetter = /\D/;
		if (hasLetter.test(newPassword.value)) {
			document.getElementById("letter").className = "checked";
			document.getElementById("checkCircleInputLetter").checked = true;
		} else {
			document.getElementById("letter").className = "notChecked";
			document.getElementById("checkCircleInputLetter").checked = false;
		}

		if(nChars >= 8 && hasNumber.test(newPassword.value) && hasLetter.test(newPassword.value)) {
			newPassword.style.borderColor = '#228B22';
			newPassword.style.boxShadow = '0 0 8px #22BB22';          
		} else {
			newPassword.style.borderColor = '#ccc';
			newPassword.style.boxShadow = '';
		}

		matchPasswords();
	}

	function matchPasswords() {
		if(confirmPassword.value == newPassword.value && confirmPassword.value != '') {
			confirmPassword.style.borderColor = '#228B22';
			confirmPassword.style.boxShadow = '0 0 8px #22BB22';
		} else {
			if((newPassword.value.length == confirmPassword.value.length || newPassword.value.substring(0, confirmPassword.value.length) != confirmPassword.value) && confirmPassword.value != '') {
				confirmPassword.style.borderColor = '#DC143C';
				confirmPassword.style.boxShadow = '0 0 8px #DC143C';
			} else {
				confirmPassword.style.borderColor = '#ccc';
				confirmPassword.style.boxShadow = '';
			}
		}
	}

	</script>

	</html>
</apex:page>