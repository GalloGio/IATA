<apex:page controller="AMS_OSCAR_Attachments" title="Manage Attachments" >
    <!-- <c:GenericAttachmentList sobjectId="{!oscCase.Id}" uploaderWizard="AMS_File" sourceSystem="Internal" scrollable="true"/> -->
    
    <apex:includeScript value="/support/console/30.0/integration.js"/>
    <apex:includeScript value="{!$Resource.jquery2_1_4}"/>
    <apex:includeScript value="{!URLFOR($Resource.Tablesorter, 'jquery.tablesorter.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Tablesorter,'/themes/blue/style.css')}" />

    <c:Loading />
    <style>
        .tableWrapper{
            max-height: 150px;
            overflow-y: auto;
        }

        .iocontainer{
            padding-right: 15px !important;
        }
    
        .iocontainer:hover{
            background-color: #e3f3ff;
            background: url("../img/func_icons/util/pencil12.gif") no-repeat center right 2px;
        }
        .iocontainer.edited .output{
            font-style: italic;
            font-weight: bold;
            color: #FA6A00;
        }
        
        /*this makes sure that even blank fields have a height and can be clicked*/
        .output:after{
            content: "\00a0";
        }

        .truncate{
            display: inline-block;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            max-width: 150px;
        }

        .popUp{
            position: fixed;
            top: 50%;
            left: 50%;
            padding: 10px;
            background: #F8F8F8;
            transform: translate(-50%, -50%);
            z-index: 10;
        }
        .backdrop{
            content: "";
            display: block;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background: black;
            opacity: 0.3;
        }
        .input, .checkvalue, .hidden{
            display: none;
        }
    </style>
    <script>
    // Get the Root URL dynamically
        var pageMainUrl = window.location.protocol + "//" + window.location.hostname;

        function setConsoleTabTitle(variation) {
            //Set the current tab's title
            var title = document.getElementsByTagName("title")[0].innerHTML;
            sforce.console.setTabTitle(variation+title);
        }

        var pageLoad = window.onload;
        window.onload = function() {
            if (pageLoad) {
                pageLoad();
            }
            setConsoleTabTitle('');
        }

        console.info('jQuery version: '+$.fn.jquery);

        function getS3LInk(fileName) {
            startLoading();
            AMS_OSCAR_Attachments.getExpiringLink(fileName,function(result, event){
                var result2= result.replace("&amp;","&");
                var newWin = window.open(result2);
                if(!newWin || newWin.closed || typeof newWin.closed=='undefined'){
                    alert('{!$Label.Check_popup_settings}');
                }
                stopLoading();
            }, {buffer: true, escape: false, timeout: 120000} );
        }

        function deleteAttachment(id, fullName) {
            if(!confirm("{!$Label.Ask_Delete_Attachment}")) {
                return false;
            }
            startLoading();
            AMS_OSCAR_Attachments.deleteAttachment(id, fullName,function(result, event){
                if (!result) alert("{!$Label.Delete_Attachment_Error}");
                refreshPage();
            }, {timeout: 120000} );
            return false;
        }

        function redirect() {
            //window.top.location=page;
            //return false;
            var redirectUrl = "/apex/transferattachmenttocase?id={!caseId}";
            if (sforce.console.isInConsole()) {
                srcUp(redirectUrl);
            } else {
                window.top.location=redirectUrl;
            }
        }

        function refreshPage(){
            setConsoleTabTitle('');
            refreshList();
        }

        function bindings() {
            var $back = $(".backdrop");
            $back.hide();

            $(".iocontainer > .input").not(".popUp").parent().on("dblclick", function () {
                $(this).find(".output").hide();
                $(this).find(".input").show().focus();
            });

            $(".iocontainer .popUp").parent().on("click", function () {
                $back.show();
                $(this).find(".input").show();
                $(this).find('textarea').focus();
            }).css("cursor", "pointer");

            $(".iocontainer .input").on("change", function() {
                $(this).parent().addClass("edited");

                var $input = $(this).hasClass('popUp') ?  $(this).find("textarea") : $(this);
                var $output = $(this).hasClass('popUp') ? $(this).parent().parent().find(".output") : $(this).parent().find(".output") ;

                if($input.is(':checkbox')){
                    $output.find('img').toggleClass('hidden');
                    $output.find('.checkvalue').text($input.is(':checked') ? '1' : '0');
                }else{
                    $output.text($input.val());
                }
            });

            $(".iocontainer .input").on("focusout", function() {
                $( this ).hide();
                $back.hide();

                $(this).parent().find(".output").show();

                if($(this).parent().hasClass('edited')){
                    $("[id$=tableAttachments]").trigger('update');
                    //$(".saveButton").val('Save *');
                    setConsoleTabTitle('* ');
                }
            });

            $("[id$=tableAttachments]").tablesorter({ 
                headers: { 
                    //disable sorting on Action collumn
                    0: { sorter: false }
                } 
            });
        }
    </script>

    <apex:form id="mainform" >
        <apex:actionFunction name="refreshList" action="{!refreshList}" reRender="mainform" status="loading" oncomplete="stopLoading();" />

        <apex:pageblock id="fileList" title="{!$Label.Attachments}" >

<!--            BUTTONS -->
            <apex:pageblockButtons location="top" >
                <c:UploadMultipleFileToAmazonButton sObjectId="{!caseId}" AmazonCredential="{!credentialName}" path="{!amazonPath}" uploaderWizard="AMS_File" sourceSystem="Internal"/>
                <apex:commandButton value="{!$Label.Transfer_Attachments}" onclick="redirect();" immediate="true" />
                <apex:commandButton value="{!$Label.Make_All_Public}" action="{!makeAllPublic}" oncomplete="refreshPage();" />
                <apex:commandButton value="{!$Label.Make_All_Private}" action="{!makeAllPrivate}" oncomplete="refreshPage()" />
                <apex:commandButton value="{!$Label.site.save}" action="{!updateAllAttach}" oncomplete="refreshPage()" styleClass="saveButton" />
            </apex:pageblockButtons>

            <apex:pageMessages />

            <!-- <apex:pageBlockTable value="{!emptyList}" var="message" rendered="{!listAttachments.size == 0}">
                <apex:column >
                    <apex:facet name="header"><apex:outputPanel layout="block">&nbsp;</apex:outputPanel></apex:facet>
                    <apex:outputPanel layout="block" styleClass="emptyMessage">{!message}</apex:outputPanel>
                </apex:column>
            </apex:pageBlockTable> -->

            <apex:outputPanel layout="block" styleClass="bRelatedList" rendered="{!listAttachments.size == 0}">
                <table class="list" cellpadding="0" cellspacing="0">
                    <tr class="headerRow">
                        <th class="noRowsHeader">No records to display</th>
                    </tr>
                </table>
            </apex:outputPanel> 

            <apex:pageBlockTable styleClass="tablesorter" id="tableAttachments" value="{!listAttachments}" var="attach" rendered="{!listAttachments.size > 0}">

                <!--  ACTIONS -->
                <apex:column headerValue="{!$Label.Action}" styleClass="actionColumn">

                    <!-- <apex:commandLink action="{!callEditAttachment}" value="{!$Label.Edit}" oncomplete="refreshPage();" styleClass="actionLink">
                        <apex:param name="edit" value="{!attach.Id}" assignTo="{!editAttachmentId}" />
                    </apex:commandLink>

                    &nbsp;|&nbsp; -->

                    <!-- VIEW ACTION -->
                    <apex:commandLink action="{!attach.viewFile}" value="{!$Label.View}" target="_blank" rendered="{!!attach.isAmazon}"  styleClass="actionLink" />
                    <apex:outputPanel rendered="{!attach.isAmazon}" >
                        <a title="view" escape="false" target="_blank" onclick="getS3LInk('{!attach.fullName}');" class="actionLink" >{!$Label.View}</a>
                    </apex:outputPanel>

                    &nbsp;|&nbsp;

                    <!-- DEL ACTION -->

                    <apex:outputLink onclick="return deleteAttachment('{!attach.Id}','{!attach.fullName}');" styleClass="actionLink" >{!$Label.Del}</apex:outputLink>

                    <!-- MAKE PUBLIC ACTION -->
                    <!-- &nbsp;|&nbsp;

                    <apex:commandLink onclick="startLoading();" action="{!attach.changePermission}" value="{!IF(attach.isPublic, $Label.Make_Private, $Label.Make_Public)}" target="_blank" oncomplete="refreshPage();" styleClass="actionLink" /> -->
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Review_Status__c.Label}" >
                    <apex:outputPanel styleClass="iocontainer" layout="block" >
                        <apex:inputField styleClass="input" value="{!attach.fileAmazon.amazonFile.Review_Status__c}"/>
                        <apex:outputText styleClass="output" value="{!attach.reviewStatus}" />
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.File_Identifier_picklist__c.Label}" >
                    <apex:outputPanel styleClass="iocontainer" layout="block" >
                        <apex:inputField styleClass="input" value="{!attach.fileAmazon.amazonFile.File_Identifier_picklist__c}" />
                        <apex:outputText styleClass="output" value="{!attach.fileIdentifierPick}"/>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Source__c.Label}" >
                    <apex:outputPanel styleClass="iocontainer" layout="block" >
                        <apex:inputField styleClass="input" value="{!attach.fileAmazon.amazonFile.Source__c}"/>
                        <apex:outputText styleClass="output" value="{!attach.source}"/>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.Public}" >
                    <apex:outputPanel styleClass="{!IF(attach.isArchived, '', 'iocontainer')}" layout="block" >
                        <apex:inputCheckbox styleClass="input" value="{!attach.isPublic}"/>
                        <apex:outputPanel styleClass="output">
                            <apex:outputText styleClass="checkvalue" value="{!IF(attach.isPublic, 1, 0)}"/> <!-- lets the collumn be sorted -->
                            <apex:image styleClass="{!IF(attach.isPublic, '', 'hidden')}" value="../img/checkbox_checked.gif" />
                            <apex:image styleClass="{!IF(attach.isPublic, 'hidden', '')}" value="../img/checkbox_unchecked.gif" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.File_Name}">
                    <apex:outputPanel layout="block" >
                        <apex:outputText value="{!attach.name}"/>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.File_Description}" >
                    <apex:outputPanel styleClass="iocontainer" layout="block" >
                        <apex:outputText styleClass="output truncate" value="{!attach.Description}"/>
                        <apex:outputPanel styleClass="input popUp" layout="block">
                            <apex:inputTextarea value="{!attach.Description}" cols="42" rows="2" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Internal_Comments__c.Label}" >
                    <apex:outputPanel styleClass="iocontainer" layout="block" rendered="{!OR(attach.isAmazon, attach.isArchived)}" >
                        <apex:outputText styleClass="output truncate" value="{!attach.internalComments}"/>
                        <apex:outputPanel styleClass="input popUp" layout="block">
                            <apex:inputTextarea value="{!attach.internalComments}" cols="42" rows="2" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.File_Size}">
                    <apex:outputPanel layout="block" >
                        <apex:outputText value="{0,number,0.##} MB">
                            <apex:param value="{!attach.size}" />
                        </apex:outputText>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.Created_Date}" >
                    <apex:outputPanel layout="block" >
                        <apex:outputText value=" {0,date,d MMM yyyy HH:mm a}">
                            <apex:param value="{!attach.createdDate}" />
                        </apex:outputText>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.Created_By}" >
                    <apex:outputPanel layout="block" >
                        <apex:outputText value="{!attach.createdByName}"/>
                    </apex:outputPanel>
                </apex:column>

                <apex:column headerValue="{!$Label.Location}" rendered="{!isAdminUser}" >
                    <apex:outputPanel layout="block" >
                        <apex:outputText value="{!attach.filetype}"/>
                    </apex:outputPanel>
                </apex:column>

            </apex:pageBlockTable>

            <apex:outputPanel styleClass="backdrop"/>
            <script type="text/javascript">

                bindings();
            </script>
        </apex:pageblock>

    </apex:form>
</apex:page>