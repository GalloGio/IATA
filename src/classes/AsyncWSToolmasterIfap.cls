//Generated by wsdl2apex

public class AsyncWSToolmasterIfap {
	public class mergeAllPDFForCaseResponse_elementFuture extends System.WebServiceCalloutFuture {
		public String getValue() {
		WSToolmasterIfap.mergeAllPDFForCaseResponse_element response = (WSToolmasterIfap.mergeAllPDFForCaseResponse_element)System.WebServiceCallout.endInvoke(this);
			return response.mergeAllPDFForCaseReturn;
		}
	}

	public class mergeAndSubmitParametersResponse_elementFuture extends System.WebServiceCalloutFuture {
		public String getValue() {
		WSToolmasterIfap.mergeAndSubmitParametersResponse_element response = (WSToolmasterIfap.mergeAndSubmitParametersResponse_element)System.WebServiceCallout.endInvoke(this);
			return response.mergeAndSubmitParametersReturn;
		}
	}
	
	public class AsyncIfapToolMaster {
		public String endpoint_x =UserInfo.getOrganizationId().substring(0,15) == '00D2000000008TF'  ? Amazon_Cred__c.getInstance('endpoint').Prod_Configuration__c :Amazon_Cred__c.getInstance('endpoint').Dev_Configuration__c ;
		public Map<String,String> inputHttpHeaders_x;
		public String clientCertName_x;
		public Integer timeout_x;
		private String[] ns_map_type_info = new String[]{'http://webservice.toolmaster.ifap.iata.org', 'WSToolmasterIfap'};

		public AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture beginMergeAllPDFForCase(System.Continuation continuation,String confName,String caseNumber,String mergedFileName) {
			WSToolmasterIfap.mergeAllPDFForCase_element request_x = new WSToolmasterIfap.mergeAllPDFForCase_element();
			request_x.confName = confName;
			request_x.caseNumber = caseNumber;
			request_x.mergedFileName = mergedFileName;
			return (AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
										'',
										'http://webservice.toolmaster.ifap.iata.org',
										'mergeAllPDFForCase',
										'http://webservice.toolmaster.ifap.iata.org',
										'mergeAllPDFForCaseResponse',
										'WSToolmasterIfap.mergeAllPDFForCaseResponse_element'
							}
			);
		}

		public AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture beginMergeAndSubmitParameters(System.Continuation continuation,String confName,String caseNumber,String mergedFileName,String xmlString) {
			WSToolmasterIfap.mergeAndSubmitParameters_element request_x = new WSToolmasterIfap.mergeAndSubmitParameters_element();
			request_x.confName = confName;
			request_x.caseNumber = caseNumber;
			request_x.mergedFileName = mergedFileName;
			request_x.xmlString = xmlString;
			return (AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
										'',
										'http://webservice.toolmaster.ifap.iata.org',
										'mergeAndSubmitParameters',
										'http://webservice.toolmaster.ifap.iata.org',
										'mergeAndSubmitParametersResponse',
										'WSToolmasterIfap.mergeAndSubmitParametersResponse_element'
							}
					);
		}
	}
}
