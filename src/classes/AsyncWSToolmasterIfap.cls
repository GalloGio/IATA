//Generated by wsdl2apex

public class AsyncWSToolmasterIfap {

		 // public static Integer DEFAULT_TIMEOUT = 120000;

	/*  public class processPWCResultsResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.processPWCResultsResponse_element response = (WSToolmasterIfap.processPWCResultsResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.processPWCResultsReturn;
				}
		}*/
		public class mergeAllPDFForCaseResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.mergeAllPDFForCaseResponse_element response = (WSToolmasterIfap.mergeAllPDFForCaseResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.mergeAllPDFForCaseReturn;
				}
		}
 /*   public class submitCaseQualityIssuesToMFTResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_element response = (WSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.submitCaseQualityIssuesToMFTReturn;
				}
		}
		public class deletePWCResultsResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.deletePWCResultsResponse_element response = (WSToolmasterIfap.deletePWCResultsResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.deletePWCResultsReturn;
				}
		}
		public class deletePWCRejectionsResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.deletePWCRejectionsResponse_element response = (WSToolmasterIfap.deletePWCRejectionsResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.deletePWCRejectionsReturn;
				}
		}
		public class submitCaseCancellationToMFTResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.submitCaseCancellationToMFTResponse_element response = (WSToolmasterIfap.submitCaseCancellationToMFTResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.submitCaseCancellationToMFTReturn;
				}
		}
		public class submitCaseParametersToMFTResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.submitCaseParametersToMFTResponse_element response = (WSToolmasterIfap.submitCaseParametersToMFTResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.submitCaseParametersToMFTReturn;
				}
		}
		public class processPWCRejectionsResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.processPWCRejectionsResponse_element response = (WSToolmasterIfap.processPWCRejectionsResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.processPWCRejectionsReturn;
				}
		}*/
		public class mergeAndSubmitParametersResponse_elementFuture extends System.WebServiceCalloutFuture {
				public String getValue() {
						WSToolmasterIfap.mergeAndSubmitParametersResponse_element response = (WSToolmasterIfap.mergeAndSubmitParametersResponse_element)System.WebServiceCallout.endInvoke(this);
						return response.mergeAndSubmitParametersReturn;
				}
		}
		public class AsyncIfapToolMaster {
		 public String endpoint_x =UserInfo.getOrganizationId().substring(0,15) == '00D2000000008TF'  ? Amazon_Cred__c.getInstance('endpoint').Prod_Configuration__c :Amazon_Cred__c.getInstance('endpoint').Dev_Configuration__c ;
				public Map<String,String> inputHttpHeaders_x;
				public String clientCertName_x;
				public Integer timeout_x; //= DEFAULT_TIMEOUT;
				private String[] ns_map_type_info = new String[]{'http://webservice.toolmaster.ifap.iata.org', 'WSToolmasterIfap'};
			/*  public AsyncWSToolmasterIfap.processPWCResultsResponse_elementFuture beginProcessPWCResults(System.Continuation continuation,String confName,Integer maxResults) {
						WSToolmasterIfap.processPWCResults_element request_x = new WSToolmasterIfap.processPWCResults_element();
						request_x.confName = confName;
						request_x.maxResults = maxResults;
						return (AsyncWSToolmasterIfap.processPWCResultsResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.processPWCResultsResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'processPWCResults',
							'http://webservice.toolmaster.ifap.iata.org',
							'processPWCResultsResponse',
							'WSToolmasterIfap.processPWCResultsResponse_element'}
						);
				}*/
				public AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture beginMergeAllPDFForCase(System.Continuation continuation,String confName,String caseNumber,String mergedFileName) {
						WSToolmasterIfap.mergeAllPDFForCase_element request_x = new WSToolmasterIfap.mergeAllPDFForCase_element();
						request_x.confName = confName;
						request_x.caseNumber = caseNumber;
						request_x.mergedFileName = mergedFileName;
						return (AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.mergeAllPDFForCaseResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'mergeAllPDFForCase',
							'http://webservice.toolmaster.ifap.iata.org',
							'mergeAllPDFForCaseResponse',
							'WSToolmasterIfap.mergeAllPDFForCaseResponse_element'}
						);
				}
			/*  public AsyncWSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_elementFuture beginSubmitCaseQualityIssuesToMFT(System.Continuation continuation,String confName,String caseNumber,String xmlFilName,String xmlString) {
						WSToolmasterIfap.submitCaseQualityIssuesToMFT_element request_x = new WSToolmasterIfap.submitCaseQualityIssuesToMFT_element();
						request_x.confName = confName;
						request_x.caseNumber = caseNumber;
						request_x.xmlFilName = xmlFilName;
						request_x.xmlString = xmlString;
						return (AsyncWSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseQualityIssuesToMFT',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseQualityIssuesToMFTResponse',
							'WSToolmasterIfap.submitCaseQualityIssuesToMFTResponse_element'}
						);
				}
				public AsyncWSToolmasterIfap.deletePWCResultsResponse_elementFuture beginDeletePWCResults(System.Continuation continuation,String confName,String jsonFileNames) {
						WSToolmasterIfap.deletePWCResults_element request_x = new WSToolmasterIfap.deletePWCResults_element();
						request_x.confName = confName;
						request_x.jsonFileNames = jsonFileNames;
						return (AsyncWSToolmasterIfap.deletePWCResultsResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.deletePWCResultsResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'deletePWCResults',
							'http://webservice.toolmaster.ifap.iata.org',
							'deletePWCResultsResponse',
							'WSToolmasterIfap.deletePWCResultsResponse_element'}
						);
				}
				public AsyncWSToolmasterIfap.deletePWCRejectionsResponse_elementFuture beginDeletePWCRejections(System.Continuation continuation,String confName,String jsonFileNames) {
						WSToolmasterIfap.deletePWCRejections_element request_x = new WSToolmasterIfap.deletePWCRejections_element();
						request_x.confName = confName;
						request_x.jsonFileNames = jsonFileNames;
						return (AsyncWSToolmasterIfap.deletePWCRejectionsResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.deletePWCRejectionsResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'deletePWCRejections',
							'http://webservice.toolmaster.ifap.iata.org',
							'deletePWCRejectionsResponse',
							'WSToolmasterIfap.deletePWCRejectionsResponse_element'}
						);
				}
				public AsyncWSToolmasterIfap.submitCaseCancellationToMFTResponse_elementFuture beginSubmitCaseCancellationToMFT(System.Continuation continuation,String confName,String caseNumber,String xmlFilName,String xmlString) {
						WSToolmasterIfap.submitCaseCancellationToMFT_element request_x = new WSToolmasterIfap.submitCaseCancellationToMFT_element();
						request_x.confName = confName;
						request_x.caseNumber = caseNumber;
						request_x.xmlFilName = xmlFilName;
						request_x.xmlString = xmlString;
						return (AsyncWSToolmasterIfap.submitCaseCancellationToMFTResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.submitCaseCancellationToMFTResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseCancellationToMFT',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseCancellationToMFTResponse',
							'WSToolmasterIfap.submitCaseCancellationToMFTResponse_element'}
						);
				}
				public AsyncWSToolmasterIfap.submitCaseParametersToMFTResponse_elementFuture beginSubmitCaseParametersToMFT(System.Continuation continuation,String confName,String caseNumber,String pdfName,String xmlString) {
						WSToolmasterIfap.submitCaseParametersToMFT_element request_x = new WSToolmasterIfap.submitCaseParametersToMFT_element();
						request_x.confName = confName;
						request_x.caseNumber = caseNumber;
						request_x.pdfName = pdfName;
						request_x.xmlString = xmlString;
						return (AsyncWSToolmasterIfap.submitCaseParametersToMFTResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.submitCaseParametersToMFTResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseParametersToMFT',
							'http://webservice.toolmaster.ifap.iata.org',
							'submitCaseParametersToMFTResponse',
							'WSToolmasterIfap.submitCaseParametersToMFTResponse_element'}
						);
				}
				public AsyncWSToolmasterIfap.processPWCRejectionsResponse_elementFuture beginProcessPWCRejections(System.Continuation continuation,String confName,Integer maxRejections) {
						WSToolmasterIfap.processPWCRejections_element request_x = new WSToolmasterIfap.processPWCRejections_element();
						request_x.confName = confName;
						request_x.maxRejections = maxRejections;
						return (AsyncWSToolmasterIfap.processPWCRejectionsResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.processPWCRejectionsResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'processPWCRejections',
							'http://webservice.toolmaster.ifap.iata.org',
							'processPWCRejectionsResponse',
							'WSToolmasterIfap.processPWCRejectionsResponse_element'}
						);
				}*/
				public AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture beginMergeAndSubmitParameters(System.Continuation continuation,String confName,String caseNumber,String mergedFileName,String xmlString) {
						WSToolmasterIfap.mergeAndSubmitParameters_element request_x = new WSToolmasterIfap.mergeAndSubmitParameters_element();
						request_x.confName = confName;
						request_x.caseNumber = caseNumber;
						request_x.mergedFileName = mergedFileName;
						request_x.xmlString = xmlString;
						return (AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture) System.WebServiceCallout.beginInvoke(
							this,
							request_x,
							AsyncWSToolmasterIfap.mergeAndSubmitParametersResponse_elementFuture.class,
							continuation,
							new String[]{endpoint_x,
							'',
							'http://webservice.toolmaster.ifap.iata.org',
							'mergeAndSubmitParameters',
							'http://webservice.toolmaster.ifap.iata.org',
							'mergeAndSubmitParametersResponse',
							'WSToolmasterIfap.mergeAndSubmitParametersResponse_element'}
						);
				}
		}
}
