public class clsCaseCommentManager {
    
    
    public static void notifyContacts(List<CaseComment> caseComments){
        
        Set<Id> caseCommentIds = new Set<Id>();
        for(CaseComment caseComment:caseComments){
            
            caseCommentIds.add(caseComment.Id);
        }
        Map<Id, CaseComment> caseCommentsMap = new Map<Id, CaseComment>([Select Id, parentId, Parent.Subject, Parent.CaseNumber, /*Parent.Product_Manager__c,*/
                Parent.RecordType.Name, Parent.Product_Manager_ACR__r.Email, CreatedBy.Profile.Name, IsPublished, Parent.ACCA_Owner__r.Email,
                parent.ContactId, parent.Contact.Email, parent.Owner.email, parent.owner.Name, CommentBody from CaseComment where Id IN :caseCommentIds AND parentId != null]);
        
        String emailTemplateName = 'Self-Service New Comment Notification';
        
        List<EmailTemplate> ets = [Select Name, Id From EmailTemplate where Name = :emailTemplateName]; 
        
        //Code added on 10-Nov-2011 by Jonas Biebuyck
        //[CASE CLEANUP 2017]
        /*List<String> ProductManagers=new List<String>();
        Schema.DescribeFieldResult fieldResult=Case.Product_Manager__c.getDescribe();
        List<Schema.PicklistEntry> ple=fieldResult.getPicklistValues();
        for( Schema.PicklistEntry f : ple){
            ProductManagers.add(f.getValue());
        }       
        List<User> pmUsers=[Select Id, Name, Email From User Where Name IN:ProductManagers];*/
        //End Code added on 10-Nov-2011 by Jonas Biebuyck
        
        if(ets.size() > 0){
            
            EmailTemplate et = ets[0];
            
            List<Messaging.SingleEmailMessage> emails = new List<Messaging.SingleEmailMessage>();
            
            for(CaseComment caseComment:caseComments){
                
                CaseComment cm = caseCommentsMap.get(caseComment.Id);

                if(cm.parent.contact.email != null){
                    
                    // Create a new single email message object
                    // that will send out a single email to the addresses in the To, CC & BCC list.
                    Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
                    
                    String caseSubject = ' : ' + cm.Parent.Subject;
                    if(cm.Parent.Subject == null)
                        caseSubject = '';
                        
                    //Coded added on 12/11/2010 
                    //mail.setSubject('A Case Comment has been added to the ACR (' + cm.Parent.CaseNumber + ')');
                    mail.setSubject('New Case Comment to ACR No ' + cm.Parent.CaseNumber + caseSubject.replaceFirst(':', '-'));
                    mail.setTargetObjectId(cm.parent.contactId);
                    //Code added on 10-Nov-2011 by Jonas Biebuyck
                    String[] ccaddress = new List<String>();
                    //[CASE CLEANUP 2017]
                    /*if(cm.parent.Product_Manager__c != null && cm.parent.Product_Manager__c != 'Ron Cole'){
                        for(User pmUser:pmUsers){
                            if(pmUser.Name==cm.parent.Product_Manager__c && pmUser.Email!=Null){
                                ccaddress.add(pmUser.Email);
                            }
                        }
                    }*/
                    
                    // ********* ACR &  DPC SR cases Notifications **************
                    // Added by shai Fisher in 31/07/14
                    if ((cm.Parent.RecordType.Name == 'Application Change Request (DPC Systems - locked)') ||
                        (cm.Parent.RecordType.Name == 'Application Change Request (DPC System)')) {
                        if (cm.Parent.Owner.Email != null)
                            ccaddress.add(cm.Parent.Owner.Email);
                            
                        if (cm.Parent.Product_Manager_ACR__r.Email != null)
                            ccaddress.add(cm.Parent.Product_Manager_ACR__r.Email);
                            
                        // if comment created by IATA user and the comment is public
                        if (cm.CreatedBy.Profile.Name != 'ISS Portal DPC' && cm.IsPublished) {
                            if(cm.Parent.ACCA_Owner__r.Email != null) {
                                ccaddress.add(cm.Parent.ACCA_Owner__r.Email);
                            }
                        }
                            
                       // ISSP_Utilities.log('clsCaseCommentManager: Owner: ' + cm.Parent.Owner.Email);
                       // ISSP_Utilities.log('clsCaseCommentManager: Product_Manager_ACR__r: ' + cm.Parent.Product_Manager_ACR__r.Email);
                       // ISSP_Utilities.log('clsCaseCommentManager: ACCA_Owner__r: ' + cm.Parent.ACCA_Owner__r.Email);
                       // ISSP_Utilities.log('clsCaseCommentManager: ccaddress: ' + ccaddress);
                    }
                    //****** end of ACR cases Notifications **********
                    
                    mail.setCcAddresses(ccaddress);
                    //End Code added on 10-Nov-2011 by Jonas Biebuyck
                    
                    //mail.setTemplateId(et.Id);
                    String emailbody =  UserInfo.getName() + ' has added a comment to case ' + cm.Parent.CaseNumber + caseSubject + '. Please read the comment below and then click on the link to respond appropriately.\n\n';
                    emailbody += 'Comment:\n\n';
                    emailbody += cm.CommentBody + '\n\n';
                    //emailbody += 'https://cs2.salesforce.com/' + cm.Parent.Id;
                    // The below code added on 08-12-2010
                    //emailbody += 'https://emea.salesforce.com/' + cm.Parent.Id;
                    emailbody += System.Label.SF_Base_URL + '/' +cm.Parent.Id;
                    
                    
                    mail.setPlainTextBody(emailbody);
                    mail.setWhatId(cm.parentId);
                    /*
                    if(cm.parent.owner.email != null)
                        mail.setReplyTo(cm.parent.owner.email);
                    if(cm.parent.owner.Name != null)
                        mail.setSenderDisplayName(cm.parent.owner.Name);
                    */
                    //mail.setBccSender(true);
                    mail.setUseSignature(true);
                    // Send the email you have created.
                    //Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
                    mail.setSaveAsActivity(false);
                    emails.add(mail);
                }
               else {
                    ISSP_Utilities.log('parent.contact.email is null: Parent: ' + cm.ParentId + ', Contact: ' + cm.Parent.contactId);
               }
                
            }
            
            if(emails.size () > 0)
                Messaging.sendEmail(emails);
            
        }
    }
    
    public static testmethod void testNotifyContacts(){
        
        List<RecordType> rts = [Select Id from RecordType where name = 'Application Change Request (DPC Systems - locked)' limit 1];
        
        RecordType rt;
        if(rts.size() > 0)
            rt = rts[0];
        
        Account acc = new Account(Name='Test Account',BillingCity='Montreal', BillingCountry='Canada');
        insert acc;
        
        Contact cont = new Contact(LastName = 'Test Contact', email ='test@test.com', AccountId = acc.Id);
        insert cont;
        
        Case case2 = new Case(contactId=cont.Id, Subject='Test Case');
        if(rt != null)
            case2.recordtypeId=rt.Id;
        insert case2;
        
        CaseComment cm = new CaseComment(parentId=case2.Id);
        insert cm;
        
        
    }
}