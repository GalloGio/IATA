/**
* This class tests the airline participation class.
* Last update by: Niv.Goldenberg, 11-11-14.
*/
@isTest
private class ISSP_APProcess_Test
{
	@testSetup
	static void insertCustomSetting() {



		Portal_Applications__c portalApp = new Portal_Applications__c(Name = 'Stuff');
		insert portalApp;

		List<ISSP_CS__c> settings = new List<ISSP_CS__c> {
				new ISSP_CS__c(Name = 'EasyPay Opt-In Days', Value__c = '0'),
				new ISSP_CS__c(Name = 'EasyPay Opt-Out Days', Value__c = '30')
		};
		insert settings;

		List<AP_Country_specs__c> APCountrySpecsSettings = new List<AP_Country_specs__c> {
			new AP_Country_specs__c(Name = 'DEFAULT-BankMandate', Link_label__c = 'test',Download_URL__c='test')
				};
					insert APCountrySpecsSettings;

		List<Case_Reason_Service__c> caseReasonServiceSettings = new List<Case_Reason_Service__c> {
			new Case_Reason_Service__c(Name = AMS_Utils.passCountryCaseReason, Provider_Required__c = false,Service__c=AMS_Utils.passCountryCaseReason),
				new Case_Reason_Service__c(Name = AMS_Utils.passAggregatorCaseReason, Provider_Required__c = false,Service__c=AMS_Utils.passCountryCaseReason),
				new Case_Reason_Service__c(Name = AMS_Utils.passAirlineCaseReason, Provider_Required__c = false,Service__c=AMS_Utils.passCountryCaseReason)
				};
					insert caseReasonServiceSettings;

		List<Amazon_Cred__c> amazonCredServiceSettings = new List<Amazon_Cred__c> {
			new Amazon_Cred__c(Name = 'GenericAttach', Dev_Configuration__c = 'test',Prod_Configuration__c='test'),
				new Amazon_Cred__c(Name = 'RecycleBin', Dev_Configuration__c = 'test',Prod_Configuration__c='test')
				};
					insert amazonCredServiceSettings;

		IATA_ISO_Country__c country_fr = new IATA_ISO_Country__c(Name = 'France', ISO_Code__c = 'FR', Region__c = 'Europe');
		insert country_fr;
		IATA_ISO_Country__c country_qr = new IATA_ISO_Country__c(Name = 'Qatar', ISO_Code__c = 'QR', Region__c = 'Africa & Middle East');
		insert country_qr;
		IATA_ISO_Country__c countryPT = new IATA_ISO_Country__c (Name = 'PT', ISO_Code__c = 'PT', ANG_Portal_Service__c = portalApp.Id, Airline_EasyPay_Opt_Out_Date__c = Date.today()-1);
		insert countryPT;
		Test.StartTest();
		Id AirlineHQ_RT_Id = RecordTypeSingleton.getInstance().getRecordTypeId('Account', 'IATA_Airline');
		Account acct_hq = new Account(Name = 'Qatar Airways', Airline_designator__c = 'QR', ICCS_Membership_Status__c = 'Member', Industry='Airline', Type='Passenger', Category__c=AMS_Utils.CATEGORY_PASSENGER_ONLY,
									  Sector__c=AMS_Utils.SECTOR_AIRLINE, RecordTypeId = AirlineHQ_RT_Id, IATA_ISO_Country__c = country_qr.Id, Membership_status__c = 'Non-IATA member');
		insert acct_hq;

		Id AirlineBR_RT_Id = RecordTypeSingleton.getInstance().getRecordTypeId('Account', 'IATA_Airline_BR');
		Account acct_br = new Account(Name = 'Qatar Airways FR', ParentId = acct_hq.Id, Airline_designator__c = 'QR', ICCS_Membership_Status__c = 'Member', Industry='Airline', Type='Passenger', Category__c=AMS_Utils.CATEGORY_PASSENGER_ONLY,
									  Sector__c=AMS_Utils.SECTOR_AIRLINE, RecordTypeId = AirlineBR_RT_Id, IATA_ISO_Country__c = countryPT.Id);
		insert acct_br;


		Case testCase = ISSP_ObjectFactory.createNewCase();
		testCase.Verification__c=AMS_Utils.passParticipation;
		testCase.Account_Concerned__c=acct_hq.id;
		testCase.CaseArea__c='Airline Joining';
		testCase.BSPCountry__c='Multiple';
		testCase.IFAP_Country_ISO__c = 'PT';
		insert testCase;

		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId = acct_hq.Id;
		con.Email = 'Test@test1122.com';
		insert con;

		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		Contact con2 = ISSP_ObjectFactory.createNewContact();
		con2.AccountId = acct_hq.Id;
		con2.Email = 'Test75656656565@test112233.com';
		insert con2;

		createGSAPortalUser(con2);
		

		AP_Country_Requierment__c APCountryRequirementTest= new AP_Country_Requierment__c();
		APCountryRequirementTest.Line_of_business__c=AMS_Utils.passParticipation;
		APCountryRequirementTest.Country__c=countryPT.id;
		APCountryRequirementTest.Name='test';
		insert APCountryRequirementTest;

		AP_Country_Requierment__c APCountryRequirementTestFR= new AP_Country_Requierment__c();
		APCountryRequirementTestFR.Line_of_business__c=AMS_Utils.passParticipation;
		APCountryRequirementTestFR.Country__c=country_fr.id;
		APCountryRequirementTestFR.Name='test2';
		insert APCountryRequirementTestFR;

		AP_Process_Form__c apProcessForm = new AP_Process_Form__c();
		apProcessForm.Case__c = testCase.Id;
		apProcessForm.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
		apProcessForm.Accept_terms_and_conditions__c = true;
		apProcessForm.Colombia_City_selection__c = 'test1;test2';
		apProcessForm.Colombia_City_percentage__c = '20;30';
		apProcessForm.Airline_wish_to_join_ICCS__c='No';
		insert apProcessForm;
		AWSKey__c awsKeyTest1= new AWSKey__c();
		awsKeyTest1.Name='test';
		insert awsKeyTest1;
		Test.StopTest();

	}
@isTest static void test_method_a()
	{
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		child.Top_Parent__c = parent.Id;
		insert child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;
		Test.startTest();
		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'Portugal';
			testCase.Reason1__c = 'Cargo';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.IFAP_Country_ISO__c = 'PT';

			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			insert testCase;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			Test.setCurrentPage(pr);
			ISSP_APProcess ctrl = new ISSP_APProcess();
			System.assertEquals(ctrl.vCaseId, testCase.Id);
			ctrl.getIsNewCountryProcess();
			insert new ISSP_CS__c(Name='ISSP_APProcess_New_Countries', Value__c='CH');
			ctrl.getIsNewCountryProcess();
			ctrl.getListSISTypes();
			ctrl.getShowISPAForm();
			ctrl.getShowISUAForm();
		}
		Test.stopTest();

	}

	@isTest static void test_method_b()
	{
		IATA_ISO_Country__c country = new IATA_ISO_Country__c(name = 'test', ISO_Code__c = 'CN', Case_BSP_Country__c = 'test');
		insert country;
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;

		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		con.Title = 'test';
		con.FirstName = 'fName';
		con.LastName = 'lName';
		con.Email = 'testas123as1@test.com';
		con.Title ='testTitle';
		insert con;

		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'BSP',
																City__c = 'test',
																Name = 'test1');
		insert csCity;


		System.runAs(newUser)
		{

			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'China';
			testCase.IFAP_Country_ISO__c = 'CN';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Pending Customer';
			testCase.Verification__c = 'BSP';
			insert testCase;

			Test.startTest();

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			pr.getParameters().put('step', '4');
			pr.getParameters().put('retURL', '/ISSP_TEST');
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.typeOfChangeRequested = new List<String>();
			ctrl.newCase = testCase;
			ctrl.strOperationType = 'BSP';
			ctrl.newForm.Accept_terms_and_conditions__c = true;
			ctrl.newForm.Case__c = testCase.Id;
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);
			ctrl.strOperationType = 'BSP';
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);
			ctrl.strOperationType = 'CASS Export';
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);


			ctrl.getAPTypes();
			ctrl.APQueue('Airline Participation - Head Office');

			PageReference prSteps = ctrl.saveBSPFormAndGoForward();
			System.assert(prSteps.getUrl().endsWith('step=4'));
			prSteps = ctrl.saveBSPFormAndGoBack();
			System.assert(prSteps.getUrl().endsWith('step=2'));
			prSteps = ctrl.saveBSPFormAndLeave();
			System.assert(prSteps.getUrl().containsIgnoreCase('ISSP_APCases'));
			prSteps = ctrl.goToStep1();
			System.assert(prSteps.getUrl().endsWith('step=1'));
			prSteps = ctrl.goToStep3();
			System.assert(prSteps.getUrl().endsWith('step=3'));
			prSteps = ctrl.goToFinalStep();
			System.assert(prSteps == null);
			prSteps = ctrl.cancel();
			System.assert(prSteps.getUrl().endsWith('ISSP_TEST'));
			List<SelectOption> options = ctrl.getListOptionCountries();
			System.assertEquals(options.size(), 1);
			options = ctrl.getAPTypes();
			System.assertEquals(options.size(), 5);//+1 because of PASS
			List<Case> lstCases = ctrl.getAPDraftCases();
			System.assertEquals(lstCases.size(), 0);
			prSteps = ctrl.redirect('https://www.test.com/');
			System.assert(prSteps.getUrl().endsWith('test.com/'));
			prSteps = ctrl.checkRedirect();
			System.assert(prSteps == null);
			Boolean bool = ctrl.getIsEmpty();
			System.assertEquals(bool, true);
			bool = ctrl.getIsNotEmpty();
			System.assertEquals(bool, false);
			System.assert(prSteps == null);
			options = ctrl.countryNameList;
			System.assertEquals(country.id, options[1].getValue());
			ISSP_APProcess.updateGuideCounter(ctrl.newCase.Id);
		}
		Test.stopTest();

	}

	@isTest static void test_method_b_GSSA()
	{
		IATA_ISO_Country__c country = new IATA_ISO_Country__c(name = 'test', ISO_Code__c = 'CN', Case_BSP_Country__c = 'test');
		insert country;
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;

		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		con.Title = 'test';
		con.FirstName = 'fName';
		con.LastName = 'lName';
		con.Email = 'testas123as1@test.com';
		con.Title ='testTitle';
		insert con;

		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'BSP',
																City__c = 'test',
																Name = 'test1');
		insert csCity;


		System.runAs(newUser)
		{

			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'China';
			testCase.IFAP_Country_ISO__c = 'CN';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Pending Customer';
			testCase.Verification__c = 'BSP';
			insert testCase;

			Test.startTest();

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			pr.getParameters().put('step', '4');
			pr.getParameters().put('retURL', '/ISSP_TEST');
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.isGSSAUser = true;
			ctrl.typeOfChangeRequested = new List<String>();
			ctrl.newCase = testCase;
			ctrl.strOperationType = 'BSP';
			ctrl.newForm.Accept_terms_and_conditions__c = true;
			ctrl.newForm.Case__c = testCase.Id;
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);
			ctrl.strOperationType = 'BSP';
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);
			ctrl.strOperationType = 'CASS Export';
			ctrl.save();
			System.assertEquals(ctrl.newForm.Case__c, testCase.Id);


			ctrl.getAPTypes();
			ctrl.APQueue('Airline Participation - Head Office');

			PageReference prSteps = ctrl.saveBSPFormAndGoForward();
			System.assert(prSteps.getUrl().endsWith('step=4'));
			prSteps = ctrl.saveBSPFormAndGoBack();
			System.assert(prSteps.getUrl().endsWith('step=2'));
			prSteps = ctrl.saveBSPFormAndLeave();
			System.assert(prSteps.getUrl().containsIgnoreCase('ISSP_APCases'));
			prSteps = ctrl.goToStep1();
			System.assert(prSteps.getUrl().endsWith('step=1'));
			prSteps = ctrl.goToStep3();
			System.assert(prSteps.getUrl().endsWith('step=3'));
			prSteps = ctrl.goToFinalStep();
			System.assert(prSteps == null);
			prSteps = ctrl.cancel();
			System.assert(prSteps.getUrl().endsWith('ISSP_TEST'));
			List<SelectOption> options = ctrl.getListOptionCountries();
			System.assertEquals(options.size(), 1);
			options = ctrl.getAPTypes();
			System.assertEquals(options.size(), 4);//+1 because of PASS
			List<Case> lstCases = ctrl.getAPDraftCases();
			System.assertEquals(lstCases.size(), 0);
			prSteps = ctrl.redirect('https://www.test.com/');
			System.assert(prSteps.getUrl().endsWith('test.com/'));
			prSteps = ctrl.checkRedirect();
			System.assert(prSteps == null);
			Boolean bool = ctrl.getIsEmpty();
			System.assertEquals(bool, true);
			bool = ctrl.getIsNotEmpty();
			System.assertEquals(bool, false);
			System.assert(prSteps == null);
			options = ctrl.countryNameList;
			System.assertEquals(country.Id, options[1].getValue());
		}
		Test.stopTest();

	}

	@isTest static void test_method_c()
	{
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'BSP',
																City__c = 'test',
																Name = 'test1');
		insert csCity;


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.IFAP_Country_ISO__c = 'PT';
			insert testCase;
			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Colombia_City_selection__c = 'test1;test2';
			ap.Colombia_City_percentage__c = '20;30';
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}


	}

	@isTest static void test_method_d()
	{
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'BSP',
																City__c = 'test',
																Name = 'test1');
		insert csCity;


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'CASS HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.IFAP_Country_ISO__c = 'PT';
			insert testCase;
			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}




	}

	@isTest static void test_method_e()
	{
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test1',
																Name = 'test1');
		insert csCity;

		AP_Country_Cities__c csCity2 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test2',
																Name = 'test2');
		insert csCity2;

		AP_Country_Cities__c csCity3 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test3',
																Name = 'test3');
		insert csCity3;

		AP_Country_Requierment__c cReq = new AP_Country_Requierment__c(
			Country__c = country.Id,
			Line_of_business__c = 'BSP');
		insert cReq;

		Test.startTest();
		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'Portugal';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.IFAP_Country_ISO__c = 'PT';
			insert testCase;

			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Colombia_City_selection__c = 'test1;test2';
			ap.Colombia_City_percentage__c = '20;30';
			insert ap;

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			pr.getParameters().put('step', '3');
			pr.getParameters().put('retURL', '/ISSP_TEST');
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.getCityData();
			ctrl.cityList[0].selected = true;
			ctrl.cityList[1].selected = true;
			PageReference prSteps = ctrl.saveBSPFormAndGoForward();
			System.assert(prSteps.getUrl().endsWith('step=4'));

		}
		Test.stopTest();

	}

	@isTest static void test_method_f()
	{
		Id RECORD_TYPE_ID = RecordTypeSingleton.getInstance().getRecordTypeId('Case', 'IDFS_Airline_Participation_Process');
		AMS_Settlement_System__c issOperation = new AMS_Settlement_System__c(
			DPC_System__c = 'Maestro'
		);
		insert issOperation;

		Case_Reason_Service__c cs = new Case_Reason_Service__c(name =  'CASS HOT', Service__C = 'CASS HOT', Provider_Required__c = false);
		insert cs;

		IATA_ISO_Country__c country = new IATA_ISO_Country__c(
			Name= 'test country',
			ISO_Code__c = 'AA',
			AMS_Settlement_System__c = issOperation.Id
		);
		insert country;

		IATA_ISO_Country__c countryPT = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		child.IATA_ISO_Country__c = country.Id;
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'BSP',
																City__c = 'test',
																Name = 'test1');
		insert csCity;


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.RecordTypeId = RecordTypeSingleton.getInstance().getRecordTypeId('Case', 'IDFS_Airline_Participation_Process');
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'CASS HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.CaseArea__c = 'Airline Joining';
			testCase.IFAP_Country_ISO__c = 'PT';
			testCase.RecordTypeId = RECORD_TYPE_ID;
			insert testCase;

			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Participate_in_any_Commission_Control__c = 'Yes';
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}




	}

	@isTest static void test_method_g()
	{
		AMS_Settlement_System__c issOperation = new AMS_Settlement_System__c(
			DPC_System__c = 'Maestro'
		);
		insert issOperation;

		IATA_ISO_Country__c country = new IATA_ISO_Country__c(
			Name= 'test country',
			ISO_Code__c = 'AA',
			AMS_Settlement_System__c = issOperation.Id
		);
		insert country;

		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		child.IATA_ISO_Country__c = country.Id;
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = 'CASS',
																City__c = 'test',
																Name = 'test1');
		insert csCity;

		insert new Case_Reason_Service__c(Name='CASS HOT', Service__c='CASS HOT');


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.RecordTypeId = RecordTypeSingleton.getInstance().getRecordTypeId('Case', 'IDFS_Airline_Participation_Process');
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'CASS HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'CASS';
			testCase.CaseArea__c = 'Airline Joining';
			testCase.IFAP_Country_ISO__c = country.ISO_Code__c;
			insert testCase;
			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Participate_in_any_Commission_Control__c = 'Yes';
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}




	}

	@isTest static void test_method_h()
	{
		AMS_Settlement_System__c issOperation = new AMS_Settlement_System__c(
			DPC_System__c = 'Maestro'
		);
		insert issOperation;

		IATA_ISO_Country__c country = new IATA_ISO_Country__c(
			Name= 'test country',
			ISO_Code__c = 'AA',
			AMS_Settlement_System__c = issOperation.Id
		);
		insert country;

		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		child.IATA_ISO_Country__c = country.Id;
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = '',
																City__c = 'test',
																Name = 'test1');
		insert csCity;

		insert new Case_Reason_Service__c(Name='CASS HOT', Service__c='CASS HOT');


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.RecordTypeId = RecordTypeSingleton.getInstance().getRecordTypeId('Case', 'IDFS_Airline_Participation_Process');
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'Minor database changes';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.CaseArea__c = 'Airline Change';
			testCase.IFAP_Country_ISO__c = country.ISO_Code__c;
			insert testCase;
			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Participate_in_any_Commission_Control__c = 'Yes';
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			pr.getParameters().put('proc', 'chg');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}

	}

	@isTest static void test_method_i()
	{
		AMS_Settlement_System__c issOperation = new AMS_Settlement_System__c(
			DPC_System__c = 'Maestro'
		);
		insert issOperation;

		IATA_ISO_Country__c country = new IATA_ISO_Country__c(
			Name= 'test country',
			ISO_Code__c = 'AA',
			AMS_Settlement_System__c = issOperation.Id
		);
		insert country;

		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		child.IATA_ISO_Country__c = country.Id;
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'CN',
																Operation__c = '',
																City__c = 'test',
																Name = 'test1');
		insert csCity;

		insert new Case_Reason_Service__c(Name='CASS HOT', Service__c='CASS HOT');


		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.RecordTypeId = RecordTypeSingleton.getInstance().getRecordTypeId('Case', 'IDFS_Airline_Participation_Process');
			testCase.BSPCountry__c = 'China';
			testCase.Reason1__c = 'Bank Account Instructions';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.CaseArea__c = 'Airline Change';
			testCase.IFAP_Country_ISO__c = country.ISO_Code__c;
			insert testCase;
			Test.startTest();
			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Participate_in_any_Commission_Control__c = 'Yes';
			insert ap;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('step', 'Final');
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			ISSP_AP_Cities inlinepage = new ISSP_AP_Cities(new Apexpages.Standardcontroller(ap));

			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('ctryreq', 'false');
			pr.getParameters().put('proc', 'chg');
			Test.setCurrentPage(pr);
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '1');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '2');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '3');
			ctrl = new ISSP_APProcess();
			pr.getParameters().put('step', '4');
			ctrl = new ISSP_APProcess();

			ctrl.fileBody = Blob.toPDF('test');
			ctrl.fileName = 'testName';
			Test.stopTest();
		}

	}

	@isTest static void test_sendEmail1() {
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		Case newCase = new Case(Subject='testecase',ContactId = con.Id);
		insert newCase;

		Case testCase = [SELECT Id,Subject,ContactId,Contact.IsEmailBounced,Contact.Email FROM Case WHERE Subject='testecase'];

		Test.startTest();
		System.runAs(newUser) {
			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			ctrl.isBSP = true;
			testCase.BSPCountry__c = 'Spain';
			ctrl.sendConfirmationEmail(testCase);
			testCase.BSPCountry__c = 'France';
			ctrl.sendConfirmationEmail(testCase);
			testCase.BSPCountry__c = '';
			testCase.Region__c = 'Europe';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'Americas';
			ctrl.sendConfirmationEmail(testCase);
			testCase.BSPCountry__c = 'Canada';
			ctrl.sendConfirmationEmail(testCase);
			testCase.BSPCountry__c = 'Brazil';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'China';
			testCase.BSPCountry__c = 'China';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'Africa';
			testCase.BSPCountry__c = 'Africa';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'Port';
			testCase.BSPCountry__c = 'Port';
			ctrl.sendConfirmationEmail(testCase);
		}
		Test.stopTest();

	}

	@isTest static void test_sendEmail2() {
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		Case newCase = new Case(Subject='testecase',ContactId = con.Id);
		insert newCase;

		Case testCase = [SELECT Id,Subject,ContactId,Contact.IsEmailBounced,Contact.Email FROM Case WHERE Subject='testecase'];
		Test.startTest();
		System.runAs(newUser) {
			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			ISSP_APProcess ctrl = new ISSP_APProcess();

			testCase.BSPCountry__c = 'Brazil';
			ctrl.sendConfirmationEmail(testCase);
			testCase.BSPCountry__c = '';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'China';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = 'Africa';
			testCase.BSPCountry__c = '';
			ctrl.sendConfirmationEmail(testCase);
			testCase.Region__c = '';
			testCase.BSPCountry__c = '';
			ctrl.sendConfirmationEmail(testCase);

			ctrl.isBSP = false;
			ctrl.isICH = true;
			ctrl.sendConfirmationEmail(testCase);
		}
		Test.stopTest();

	}

	@isTest static void test_method_1()
	{
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test1',
																Name = 'test1');
		insert csCity;

		AP_Country_Cities__c csCity2 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test2',
																Name = 'test2');
		insert csCity2;

		AP_Country_Cities__c csCity3 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test3',
																Name = 'test3');
		insert csCity3;

		AP_Country_Requierment__c cReq = new AP_Country_Requierment__c(
			Country__c = country.Id,
			Line_of_business__c = 'BSP');
		insert cReq;

		Test.startTest();
		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'Portugal';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.IFAP_Country_ISO__c = 'PT';
			insert testCase;


			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Colombia_City_selection__c = 'test1;test2';
			ap.Colombia_City_percentage__c = '20;30';
			insert ap;

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('proc', 'chg');
			Test.setCurrentPage(pr);
			pr.getParameters().put('step', '3');
			pr.getParameters().put('retURL', '/ISSP_TEST');
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.getCityData();
			ctrl.cityList[0].selected = true;
			ctrl.cityList[1].selected = true;
			ctrl.cassairlineid = 'as';
			ctrl.isocountry = country;
			ctrl.isStep4 = true;
			ctrl.BankMandateUrl = 'as';
			ctrl.fileName = 'as';
			ctrl.strCountryspecURL = 'as';
			ctrl.strCountryspecLinkLabel = 'as';
			ctrl.strCountryspecURL2 = 'as';
			ctrl.strCountryspecLinkLabel2 = 'as';
			ctrl.strCountryspecURL3 = 'as';
			ctrl.strCountryspecLinkLabel3 = 'as';
			ctrl.strGSSAName = 'as';
			ctrl.gssaCountryISOCode = 'as';
			ctrl.category = 'IBCS consolidator';
			ctrl.getAPTypes();
			ctrl.category = 'test';
			ctrl.getAPTypes();
			ctrl.strGSSAAddress = 'as';
			ctrl.isGSSAUser = true;
			ctrl.countryNameList = null;
			ctrl.getCassAirlines();
			ctrl.getAPDraftCases();
			ctrl.APQueue('Airline Participation - Drafts');
			ctrl.goToFinalStep();
			ctrl.getChangeItems();
			ctrl.retrieveAccountToShowSections();

			PageReference prSteps = ctrl.saveBSPFormAndGoForward();
			System.assert(prSteps.getUrl().endsWith('step=4'));

		}
		Test.stopTest();

	}

	@isTest static void test_method_2() {
		IATA_ISO_Country__c country = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Cities__c csCity = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test1',
																Name = 'test1');
		insert csCity;

		AP_Country_Cities__c csCity2 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test2',
																Name = 'test2');
		insert csCity2;

		AP_Country_Cities__c csCity3 = new AP_Country_Cities__c(Country_ISO_Code__c = 'PT',
																Operation__c = 'BSP',
																City__c = 'test3',
																Name = 'test3');
		insert csCity3;

		AP_Country_Requierment__c cReq = new AP_Country_Requierment__c(
			Country__c = country.Id,
			Line_of_business__c = 'BSP');
		insert cReq;

		Test.startTest();
		System.runAs(newUser)
		{
			Case testCase = ISSP_ObjectFactory.createNewCase();
			testCase.BSPCountry__c = 'Portugal';
			testCase.Reason1__c = 'BSP HOT';
			testCase.Customer_recovery__c = false;
			testCase.BounceEmailCounter__c = 0.0;
			testCase.Case_Language__c = 'English';
			testCase.Subject = 'Test 006';
			testCase.Reopened_case__c = 0.0;
			testCase.Status = 'Action Needed';
			testCase.Account_Concerned__c = child.Id;
			testCase.Verification__c = 'BSP';
			testCase.IFAP_Country_ISO__c = 'PT';
			insert testCase;


			AP_Process_Form__c ap = new AP_Process_Form__c();
			ap.Case__c = testCase.Id;
			ap.Accept_payment_Cards_for_BSP_ticket__c = 'Yes';
			ap.Accept_terms_and_conditions__c = true;
			ap.Colombia_City_selection__c = 'test1;test2';
			ap.Colombia_City_percentage__c = '20;30';
			insert ap;

			AP_Country_specs__c testSpec = new AP_Country_specs__c();
			testSpec.Name = 'DEFAULT-BankMandate';
			testSpec.Link_label__c = 'Test1';
			testSpec.Download_URL__c = 'Test1';
			insert testSpec;

			PageReference pr = Page.ISSP_APCases;
			pr.getParameters().put('caseId', testCase.Id);
			pr.getParameters().put('cdupetype', 'test');
			pr.getParameters().put('isMandatory', 'test');
			pr.getParameters().put('proc', 'chg');
			Test.setCurrentPage(pr);
			pr.getParameters().put('step', '3');
			pr.getParameters().put('retURL', '/ISSP_TEST');
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.showNewGSTNumberFields();
			ctrl.newGSTInfo.India_Local_VAT_Number__c = '123456';
			ctrl.newGSTInfo.India_Local_VAT_Street__c = 'Street';
			ctrl.newGSTInfo.India_Local_VAT_City__c = 'City';
			ctrl.checkAllFieldGST();
			ctrl.newGSTInfo.India_Local_VAT_State_Name__c = 'State';
			ctrl.newGSTInfo.India_Local_VAT_State_Code__c = 'ST';
			ctrl.checkAllFieldGST();
			ctrl.addGSTInfo();
			System.assertEquals(ctrl.list_GSTNumber.size(), 1);
			GST_Information__c info = [SELECT Id FROM GST_Information__c];
			pr.getParameters().put('recordIdEdit', info.Id);
			ctrl.editGSTNumber();
			pr.getParameters().put('recordIdDel', info.Id);
			ctrl.delGSTNumber();
			ctrl.showNewGSTNumberFields();
			ctrl.closePopup();

			System.assertEquals(ctrl.list_GSTNumber.size(), 0);

		}
		Test.stopTest();
	}

	@isTest static void test_ICH()
	{
		IATA_ISO_Country__c country = new IATA_ISO_Country__c(name = 'WW', ISO_Code__c = 'WW', Case_BSP_Country__c = 'WW');
		insert country;
		Account parent = ISSP_ObjectFactory.createNewAccount();
		parent.BillingCity = 'test';
		parent.Name = 'test';
		insert parent;
		Account child = ISSP_ObjectFactory.createNewAccount();
		child.ParentId = parent.Id;
		child.BillingCity = 'test2';
		child.Name = 'test2';
		child.Site = 'headSite';
		insert child;
		child.Top_Parent__c = null;
		update child;
		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId= child.Id;
		con.Email = 'test2098398439@email.com';
		insert con;
		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		AP_Country_Requierment__c cReq = new AP_Country_Requierment__c(
			Country__c = country.Id,
			Line_of_business__c = 'ICH');
		insert cReq;

		insert new Case_Reason_Service__c(Name='New ICH participant', Service__C = 'ICH', Provider_Required__c = false);

		Test.startTest();
		System.runAs(newUser)
		{
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.strOperationType = 'ICH';
			ctrl.strParentMembershipstatus = ISSP_APProcess.ICH_TYPE_IATA_MEMBER;
			ctrl.newCase.Classification_SIS__c = ISSP_APProcess.ICH_TYPE_IATA_MEMBER;
			ctrl.isICH = true;
			ctrl.save();
			System.assert(ctrl.newCase.Id!=null);

			ctrl.gotoStep3();
			ctrl.goToFinalStep();
			ctrl.goToFinalStep();
			ctrl.newForm.Accept_terms_and_conditions__c = true;
			ctrl.goToFinalStep();
		}
		Test.stopTest();
	}

	@isTest static void testOptInOut() {
		Portal_Applications__c portalApp = new Portal_Applications__c(Name = 'Stuff');
		insert portalApp;

		List<IATA_ISO_Country__c> countries = new List<IATA_ISO_Country__c>();

		IATA_ISO_Country__c countryUS = new IATA_ISO_Country__c (Name = 'US', ISO_Code__c = 'US', ANG_Portal_Service__c = portalApp.Id, Airline_EasyPay_Opt_Out_Date__c = Date.today()-1);
		countries.add(countryUS);
		IATA_ISO_Country__c countryES = new IATA_ISO_Country__c (Name = 'ES', ISO_Code__c = 'ES', ANG_Portal_Service__c = portalApp.Id, Airline_EasyPay_Opt_Out_Date__c = Date.today()-1);
		countries.add(countryES);
		IATA_ISO_Country__c countryPT = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c ='PT'
										 LIMIT 1];

		insert countries;

		Id airlineBranchRT = RecordTypeSingleton.getInstance().getRecordTypeId('Account', 'IATA_Airline_BR');
		Id airlineHeadquartersRT = RecordTypeSingleton.getInstance().getRecordTypeId('Account', 'IATA_Airline');

		Account headquarter = new Account(Name = 'Emirates hq',
										  Field_Head_Office__c = 'Headquarter',
										  Airline_Designator__c = 'LH',
										  IATACode__c = '220',
										  Airline_Prefix__c = '220',
										  Sector__c = 'Airline',
										  Category__c = 'Passenger and Cargo',
										  Key_Customer_Reason__c = 'Volume',
										  TradeName__c = 'Emirates',
										  Legal_name__c = 'Stuff',
										  Name_on_AOC__c = 'Stuff',
										  IATA_ISO_Country__c = countryUS.Id,
										  RecordTypeId = airlineHeadquartersRT);

		insert headquarter;

		List<Account> airlines = new List<Account>();

		Account branch1 = new Account(Name = 'Emirates br1',
									  Field_Head_Office__c = 'Headquarter',
									  Airline_Designator__c = 'LH',
									  IATACode__c = '220',
									  Airline_Prefix__c = '220',
									  Sector__c = 'Airline',
									  Category__c = 'Passenger and Cargo',
									  Key_Customer_Reason__c = 'Volume',
									  TradeName__c = 'Emirates',
									  Legal_name__c = 'Stuff',
									  Name_on_AOC__c = 'Stuff',
									  IATA_ISO_Country__c = countryES.Id,
									  RecordTypeId = airlineBranchRT,
									  ParentId = headquarter.Id);

		Account branch2 = new Account(Name = 'Emirates br2',
									  Field_Head_Office__c = 'Headquarter',
									  Airline_Designator__c = 'LH',
									  IATACode__c = '220',
									  Airline_Prefix__c = '220',
									  Sector__c = 'Airline',
									  Category__c = 'Passenger and Cargo',
									  Key_Customer_Reason__c = 'Volume',
									  TradeName__c = 'Emirates',
									  Legal_name__c = 'Stuff',
									  Name_on_AOC__c = 'Stuff',
									  IATA_ISO_Country__c = countryPT.Id,
									  RecordTypeId = airlineBranchRT,
									  ParentId = headquarter.Id);

		airlines.add(branch1);
		airlines.add(branch2);
		insert airlines;

		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId = headquarter.Id;
		insert con;

		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		List<Services_Rendered__c> services = new List<Services_Rendered__c>();

		Services_Rendered__c serviceBranch1 = new Services_Rendered__c(Services_Rendered_to_Airline__c = branch1.Id,
																 Services_Rendered_By__c = headquarter.Id,
																 Services_Rendered_Type__c = 'BSP Participation',
																 Services_Rendered_Status__c = 'Active',
																 ANG_IATA_EasyPay_Opt_out__c = true);

		Services_Rendered__c serviceBranch2 = new Services_Rendered__c(Services_Rendered_to_Airline__c = branch2.Id,
																 Services_Rendered_By__c = headquarter.Id,
																 Services_Rendered_Type__c = 'BSP Participation',
																 Services_Rendered_Status__c = 'Active',
																 ANG_IATA_EasyPay_Opt_out__c = false);

		services.add(serviceBranch1);
		services.add(serviceBranch2);

		insert services;

		// create a new Authorized Signatory
		Authorized_Signatories_Package__c asp = new Authorized_Signatories_Package__c(Account__c = headquarter.Id);
		insert asp;
		Authorized_Signatory__c auths = new Authorized_Signatory__c(Authorized_Signatories_Package__c = asp.Id, Contact__c = con.Id);
		insert auths;

		Test.startTest();
		System.runAs(newUser) {

			PageReference pr = Page.ISSP_APCases;
			List<String> countriesOut = new List<String> {countryES.Id, countryPT.Id};
				String optInOutParam = 'OUT';

			pr.getParameters().put('optInOutParam', optInOutParam);
			pr.getParameters().put('countriesParam', System.JSON.serialize(countriesOut));
			pr.getParameters().put('effectiveDateParam', '2999-09-10');

			Test.setCurrentPage(pr);

			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.submitOptInOutServer();

			List<Case> resultingCases = [SELECT Id FROM Case WHERE Reason1__c = 'IATA Easy Pay' AND Subject LIKE '%Airline Participation - IATA EasyPay%'];

			System.assertEquals(countriesOut.size(), resultingCases.size());
			ctrl.getIsNewCountryProcess();
			ctrl.retrieveAccountToShowSections();
			ctrl.getAuthorizedSignatories();
			ctrl.getDocumentCASSSpecificationUrl();
			ctrl.getDocumentCASSSpecificationName();
			ctrl.getDocumentAppendixAUrl();
			ctrl.getDocumentAppendixAName();
			ctrl.getICCSJoiningPackageUrl();
			ctrl.getICCSJoiningPackageName();
			ctrl.getICCSJoiningThisMarketUrl();
			ctrl.getICCSJoiningThisMarketName();
			ctrl.getBSPCounterIndemnityAgreementUrl();
			ctrl.getBSPCounterIndemnityAgreementName();
			ctrl.getBSPFormOfConcurrenceUrl();
			ctrl.getBSPFormOfConcurrenceName();
			ctrl.getBSPFormOfApplicationUrl();
			ctrl.getBSPFormOfApplicationName();
			ctrl.getCASSCounterIndemnityAgreementUrl();
			ctrl.getCASSCounterIndemnityAgreementName();
			ctrl.getCASSFormOfApplicacionConcurrenceUrl();
			ctrl.getCASSFormOfApplicacionConcurrenceName();
			ctrl.getICHBankMandateFormUrl();
			ctrl.getICHBankMandateFormName();
			ctrl.getSISBankMandateFormUrl();
			ctrl.getSISBankMandateFormName();
			ctrl.getAdditionalSignatoryFormUrl();
			ctrl.getAdditionalSignatoryFormName();
			ctrl.securityCheck();
			ctrl.getShowJoinICCSQuestion();
			ctrl.getShowJoinICCS();
			ctrl.getShowFormOfConcurrence();
			ctrl.getShowFormOfApplication();
			ctrl.getShowFormOfApplicationAndConcurrence();
			ctrl.getMandatoryFieldsForCommission();
			ctrl.getVATAlwaysInserted();
			ctrl.getLocalVATMandatory();
			ctrl.getlocalAddressMandatory();
			ctrl.getShowCounterIndemnity();
			ctrl.isBSP=true;
			ctrl.isCASS=false;
			ctrl.getShowCounterIndemnity();
			ctrl.getDocumentGuide();
			ctrl.isBSP=false;
			ctrl.isCASS=true;
			ctrl.getShowCounterIndemnity();
			ctrl.getDocumentGuide();
			ISSP_APProcess.updateGuideCounter(ctrl.newCase.Id);

			System.assert(ctrl.thisController!=null);

			ctrl.selectedContact = new Contact_Endorsement__c();
			ctrl.selectedContactPosition_SISSuperUser = true;
			System.assertEquals(true,ctrl.selectedContactPosition_SISSuperUser);
			ctrl.selectedContactPosition_ICHPrimaryContact = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHPrimaryContact);
			ctrl.selectedContactPosition_ICHFinancialContact = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHFinancialContact);
			ctrl.selectedContactPosition_ICHNotificationContact = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHNotificationContact);
			ctrl.selectedContactPosition_ICHAdvice = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHAdvice);
			ctrl.selectedContactPosition_ICHCleanConfirmation = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHCleanConfirmation);
			ctrl.selectedContactPosition_ICHCleanInitialization = true;
			System.assertEquals(true,ctrl.selectedContactPosition_ICHCleanInitialization);
			ctrl.selectedContact = null;
			ctrl.selectedContactPosition_SISSuperUser = true;
			System.assertEquals(false,ctrl.selectedContactPosition_SISSuperUser);
			ctrl.ICHCurrencyClearance = '';
			System.assertEquals('',ctrl.ICHCurrencyClearance);
			ctrl.hideTermsConditionsPopup();
			System.assert(!ctrl.financialCountryNameList.isEmpty());
			System.assert(!ctrl.countryNameList.isEmpty());
			ctrl.getListOptionICHParticipation();

			ctrl.getICHCurrencyClearanceLabel();

			ctrl.hqaccount.ICH_Member__c = true;
			System.assert(ctrl.getICHSubtypes().isEmpty());
			ctrl.hqaccount.ICH_Member__c = false;
			ctrl.hqaccount.Sector__c = 'Airline2';
			ctrl.hqaccount.Category__c = 'Cargo Only';
			System.assert(ctrl.getICHSubtypes().isEmpty());
			ctrl.hqaccount.Sector__c = 'Airline';
			ctrl.hqaccount.Membership_status__c = 'Active';
			System.assert(!ctrl.getICHSubtypes().isEmpty());
			ctrl.strOperationType = 'ICH';
			ctrl.getListOptionICHParticipation();

			ctrl.getIsICHType_IATAMember();
			ctrl.getIsICHType_NonIATAMember();
			ctrl.getIsICHType_SponsoredAirline();
			ctrl.getIsICHType_SponsoredAssociates();
			ctrl.getIsICHType_AssociateSP();
			ctrl.getIsICHType_AssociateSubsidiary();
			ctrl.getIsICHType_AssociateAggregator();

			ctrl.UploadFile();
			ctrl.getAttachList();

			ctrl.newCase.Classification_SIS__c = ISSP_APProcess.ICH_TYPE_IATA_MEMBER;
			list<AP_Country_specs__c> listCountrySpecs = new list<AP_Country_specs__c>();
			listCountrySpecs.add(new AP_Country_specs__c(
				Name = ctrl.newCase.Classification_SIS__c,
				Download_URL__c = 'testurl',
				Link_label__c='label')
								);
			listCountrySpecs.add(new AP_Country_specs__c(
				Name = 'Associate_Aggregator_Member_App',
				Library_Doc_Name__c = 'testdoc',
				Link_label__c='label')
								);
			insert listCountrySpecs;
			ctrl.getICHTermsAndConditionsUrl();
			ctrl.getICHTermsAndConditionsName();
			ctrl.getICHGenericTermsAndConditionsUrl();
			ctrl.getICHGenericTermsAndConditionsName();
			ctrl.getAssociateAggregatorMemberApplicationUrl();
			ctrl.getAssociateAggregatorMemberApplicationName();
			ctrl.getSponsorshipLetterUrl();
			ctrl.getSponsorshipLetterName();
			ctrl.getICHCurrencyClearanceOptions();
			ctrl.getIsSISMember();
			ctrl.getIsValidDueDiligence();
			ctrl.newCase.CaseArea__c='Airline Joining';
			ctrl.isBSP = true;
			ctrl.isCASS = false;
			ctrl.getApp();
			ctrl.getPageTitle();
			ctrl.isBSP = false;
			ctrl.isCASS = true;
			ctrl.getApp();
			ctrl.getPageTitle();
			ctrl.isCASS = false;
			ctrl.isICH = true;
			ctrl.getApp();
			ctrl.getPageTitle();
			ctrl.newCase.CaseArea__c='Airline Change';
			ctrl.newCase.Reason1__c='Minor database changes';
			ctrl.getApp();
			ctrl.getPageTitle();
			ctrl.newCase.Reason1__c='Bank Account Instructions';
			ctrl.getApp();
			ctrl.getPageTitle();
			ctrl.getPageTitle();
			ctrl.strAreaType='';
			ctrl.getPageTitle();
			ctrl.newForm = null;
		}

		Test.stopTest();
	}
	@isTest static void testContactEndorsement() {
		Portal_Applications__c portalApp = new Portal_Applications__c(Name = 'App');
		insert portalApp;

		List<IATA_ISO_Country__c> countries = new List<IATA_ISO_Country__c>();

		IATA_ISO_Country__c countryUS = new IATA_ISO_Country__c (Name = 'US', ISO_Code__c = 'US', ANG_Portal_Service__c = portalApp.Id, Airline_EasyPay_Opt_Out_Date__c = Date.today()-1);
		insert countryUS;

		Account headquarter = new Account(
			Name = 'Emirates hq',
			Field_Head_Office__c = 'Headquarter',
			Airline_Designator__c = 'LH',
			IATACode__c = '220',
			Airline_Prefix__c = '220',
			Sector__c = 'Airline',
			Category__c = 'Passenger and Cargo',
			Key_Customer_Reason__c = 'Volume',
			TradeName__c = 'Emirates',
			Legal_name__c = 'Stuff',
			Name_on_AOC__c = 'Stuff',
			IATA_ISO_Country__c = countryUS.Id,
			RecordTypeId = RecordTypeSingleton.getInstance().getRecordTypeId('Account', 'IATA_Airline'));
		insert headquarter;

		Contact con = ISSP_ObjectFactory.createNewContact();
		con.AccountId = headquarter.Id;
		insert con;

		User newUser = ISSP_ObjectFactory.createPortalUser(con);
		con.OwnerId = newUser.Id;
		update con;

		System.runAs(newUser) {
			Test.startTest();
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.newContact();
			Contact_Endorsement__c contact = ctrl.selectedContact;
			contact.Position__c = 'SIS Super User';
			ctrl.saveContact();
			ctrl.selectedContactId = contact.Id;
			ctrl.editContact();
			ctrl.selectedContact = contact;
			ctrl.deleteContact();
			Test.StopTest();
		}
	}

	@isTest static void testAPProcessPASS() {

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c,Country_concerned__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];

		Test.startTest();

		System.runAs(newUser) {
			ApexPages.currentPage().getParameters().put('airline' ,AMS_Utils.passParticipation);
			ApexPages.currentPage().getParameters().put('step' ,'1');
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('strOT' ,AMS_Utils.passParticipation);

			ISSP_APProcess ctrl = new ISSP_APProcess();

			ctrl.fetchPassCountries(testCase);
			ctrl.save();
			ctrl.newCase = testCase;
			ctrl.wrapperPassCountries=ctrl.fetchWrapperCaseCountries(testCase);
			ctrl.goToFinalStep();
			ctrl.changeIsPassAirlineMethod();

			System.assert(ctrl.isPassAirline);
			System.assertEquals(ctrl.passParam, '&airline=PASS');
		}

		Test.stopTest();
	}

	@isTest static void testAPProcessPASS2() {

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c,Country_concerned__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];

		

		Test.startTest();

		System.runAs(newUser) {

			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('managePASS' ,'true');
			ApexPages.currentPage().getParameters().put('step' ,'4');

			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);
			ctrl.save();
			//ctrl.newForm = apProcessForm;
			ctrl.newCase= testCase;
			ctrl.goToFinalStep();

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			ctrl.newForm.Receive_PDF_Reports__c='YES';
			ctrl.newForm.Receive_HOT_files__c='YES';
			ctrl.newForm.Hot_files_delivery_format__c='E-mail and Download';
			ctrl.newForm.PDF_Report_Delivery_Format__c='E-mail and Download';

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			System.assertEquals('&airline=PASS',ctrl.passParam);
		}

		Test.stopTest();
	}


	@isTest static void testAPProcessPASS3() {
		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c, Country_concerned__c,CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];

		Test.startTest();

		System.runAs(newUser) {


			PageReference pageRef = Page.ISSP_APProcess;
			Test.setCurrentPage(pageRef);
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('managePASS' ,'true');
			ApexPages.currentPage().getParameters().put('step' ,'4');

			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);
			ctrl.save();
			//ctrl.newForm = apProcessForm;
			ctrl.newCase= testCase;
			ctrl.goToFinalStep();

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			ctrl.newForm.Receive_PDF_Reports__c='YES';
			ctrl.newForm.Receive_HOT_files__c='YES';
			ctrl.newForm.Hot_files_delivery_format__c='E-mail and Download';
			ctrl.newForm.PDF_Report_Delivery_Format__c='E-mail and Download';

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			System.assertEquals(false,ctrl.managePASS);
		}

		Test.stopTest();
	}

	public static User createGSAPortalUser(Contact con) {
		String orgId = UserInfo.getOrganizationId();
		String dateString = String.valueof(Datetime.now()).replace(' ','').replace(':','').replace('-','');
		Integer randomInt = Integer.valueOf(math.rint(math.random()*1000000));
		String uniqueName = orgId + dateString;
		String conId15 = con.Id;
		String UserNameStr=uniqueName+ string.valueof(randomInt) + '@test' + orgId + '.org';
		String ComNickNameStr=con.email.substring(0, con.email.indexOf('@'))+randomInt;//Datetime.now().formatLong().substring(10,15);
		User newUser = new User(alias = 'dsfsdfds',
								email = con.email,
								emailencodingkey = 'UTF-8',
								firstname = con.firstName,
								lastname = con.lastname,
								languagelocalekey = 'en_US',
								localesidkey = 'en_US',
								contactId = con.Id,
								FederationIdentifier = conId15,
								timezonesidkey = 'Asia/Dubai',
								Username = UserNameStr,
								PortalRole = 'Manager',
								CommunityNickname = ComNickNameStr,
								ProfileId = [SELECT Id FROM Profile WHERE Name LIKE 'ISS Portal GSA%' LIMIT 1].Id,
								IsActive = true);
		insert newUser;
		return newUser;
	}


	@isTest static void testAPProcessPASSGSSA() {

		Test.startTest();


		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test75656656565@test112233.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c, Country_concerned__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		IATA_ISO_Country__c isocountry = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c =:testCase.IFAP_Country_ISO__c
										 LIMIT 1];

		AP_Process_Form__c apProcessForm = [SELECT Case__c, Accept_payment_Cards_for_BSP_ticket__c, Receive_HOT_files__c, Receive_PDF_Reports__c
											FROM AP_Process_Form__c
											WHERE Case__c =:  testCase.Id
											LIMIT 1];

		System.runAs(newUser) {


			ApexPages.currentPage().getParameters().put('airline' ,AMS_Utils.passParticipation);
			ApexPages.currentPage().getParameters().put('step' ,'3');
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('strOT' ,AMS_Utils.passParticipation);

			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);
			ctrl.save();
			ctrl.newForm = apProcessForm;
			ctrl.newCase = testCase;
			ctrl.wrapperPassCountries=ctrl.fetchWrapperCaseCountries(testCase);
			ctrl.goToFinalStep();
			ctrl.changeIsPassAirlineMethod();

			System.assert(ctrl.isPassAirline);
			System.debug('ctrl.passParam: '+ctrl.passParam);
			System.assertEquals(ctrl.passParam, '&airline=PASS');
		}

		Test.stopTest();
	}

	@isTest static void testAPProcessManagePASS() {


		Test.startTest();

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c,Country_concerned__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		IATA_ISO_Country__c isocountry = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c =:testCase.IFAP_Country_ISO__c
										 LIMIT 1];

		System.debug('isocountry: '+isocountry);



		AP_Process_Form__c apProcessForm = [SELECT Case__c, Accept_payment_Cards_for_BSP_ticket__c, Receive_HOT_files__c, Receive_PDF_Reports__c
											FROM AP_Process_Form__c
											WHERE Case__c =:  testCase.Id
											LIMIT 1];


		System.runAs(newUser) {

			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('managePASS' ,'true');
			ApexPages.currentPage().getParameters().put('step' ,'4');

			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);
			ctrl.goToStep2();
			ctrl.goToStep3();
			ctrl.goToStep4();
			ctrl.save();
			ctrl.newForm = apProcessForm;
			ctrl.newCase= testCase;
			ctrl.goToFinalStep();

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			ctrl.newForm.Receive_PDF_Reports__c='YES';
			ctrl.newForm.Receive_HOT_files__c='YES';
			ctrl.newForm.Hot_files_delivery_format__c='E-mail and Download';
			ctrl.newForm.PDF_Report_Delivery_Format__c='E-mail and Download';

			ctrl.showHideHotFilesPreferenceMethod();
			ctrl.showHidePdfReportsPreferenceMethod();

			System.assertEquals('&airline=PASS',ctrl.passParam);

		}

		Test.stopTest();
	}


	@isTest static void testAPProcessWithdrawPASS_positive() {

		Test.startTest();

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		System.runAs(newUser) {
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);

			ctrl.withdrawPassCountries.add(new SelectOption('France', 'FR'));
			ctrl.withdrawPassCountries.add(new SelectOption('Qatar', 'QR'));

			List<String> isoCountriesList = new List<String>();
			for(SelectOption option : ctrl.withdrawPassCountries){
				isoCountriesList.add(option.getValue());
			}

			ctrl.withdrawCountries();

		}
		System.assertEquals(0,[SELECT Count() FROM Services_Rendered__c WHERE Services_Rendered_Status__c = 'Inactive']);

		Test.stopTest();
	}

	@isTest static void testAPProcessWithdrawPASS_negative() {

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		Test.startTest();

		System.runAs(newUser) {
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ctrl.fetchPassCountries(testCase);
			ctrl.withdrawCountries();
		}
		System.assertEquals(0,[SELECT Count() FROM Services_Rendered__c WHERE Services_Rendered_Status__c = 'Active']);

		Test.stopTest();
	}

	@isTest static void testAPProcessManagePASS2() {

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c,Country_concerned__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];
		testCase.BSPCountry__c = 'Multiple;';
		testCase.Country_concerned__c = 'PT;FR;';
		update testCase;

		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		IATA_ISO_Country__c isocountry = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c =:testCase.IFAP_Country_ISO__c
										 LIMIT 1];




		AP_Process_Form__c apProcessForm = [SELECT Case__c, Accept_payment_Cards_for_BSP_ticket__c, Receive_HOT_files__c, Receive_PDF_Reports__c
											FROM AP_Process_Form__c
											WHERE Case__c =:  testCase.Id
											LIMIT 1];

		Services_Rendered__c sr = new Services_Rendered__c(Name='PASS Participation', Services_Rendered_Type__c = AMS_Utils.passCountryCaseReason, Services_Rendered_By__c = cont.AccountId,
														   Services_Rendered_to_Airline__c = cont.AccountId, Services_Rendered_Status__c = 'Active');
		insert sr;

		System.runAs(newUser) {
			
			ISSP_APProcess ctrl = new ISSP_APProcess();
			ApexPages.currentPage().getParameters().put('airline' ,AMS_Utils.passParticipation);
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('managePASS' ,'true');
			ApexPages.currentPage().getParameters().put('step' ,'3');

			ctrl = new ISSP_APProcess();
			ctrl.goToStep2();
			ApexPages.currentPage().getParameters().put('airline' ,AMS_Utils.passParticipation);
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('managePASS' ,'true');
			ApexPages.currentPage().getParameters().put('step' ,'1');
			ctrl = new ISSP_APProcess();
			ctrl.goToStep2();
			ctrl.save();

			System.assertEquals('&airline=PASS&managePASS=true',ctrl.passParam);
		}
	}

	@isTest static void testAPProcessPASSMultipleCountries() {

		User newUser = [SELECT Id, contactId, Email
						FROM User
						WHERE Email =: 'Test@test1122.com'
						LIMIT 1];

		Case testCase = [SELECT Account_Concerned__c, Verification__c,Country_concerned__c, CaseArea__c, BSPCountry__c, IFAP_Country_ISO__c
						 FROM Case
						 LIMIT 1];
		testCase.BSPCountry__c = 'Multiple;';
		testCase.Country_concerned__c = 'PT;FR;';
		update testCase;



		Contact cont = [SELECT AccountId, Email, OwnerId
						FROM Contact
						LIMIT 1];


		IATA_ISO_Country__c isocountry = [SELECT Airline_EasyPay_Opt_Out_Date__c,ANG_Portal_Service__c,Case_BSP_Country__c,ISO_Code__c
										  FROM IATA_ISO_Country__c
										  WHERE ISO_Code__c =:testCase.IFAP_Country_ISO__c
										 LIMIT 1];




		AP_Process_Form__c apProcessForm = [SELECT Case__c, Accept_payment_Cards_for_BSP_ticket__c, Receive_HOT_files__c, Receive_PDF_Reports__c
											FROM AP_Process_Form__c
											WHERE Case__c =:  testCase.Id
											LIMIT 1];

		Test.StartTest();
		System.runAs(newUser) {
			
			ApexPages.currentPage().getParameters().put('airline' ,AMS_Utils.passParticipation);
			ApexPages.currentPage().getParameters().put('step' ,'4');
			ApexPages.currentPage().getParameters().put('caseId' ,testCase.id);
			ApexPages.currentPage().getParameters().put('strOT' ,AMS_Utils.passParticipation);
			ISSP_APProcess ctrl =new ISSP_APProcess();
			ctrl.selectedPASSCountries.add(new SelectOption('France', 'FR'));
			ctrl.selectedPASSCountries.add(new SelectOption('Qatar', 'QR'));
			ctrl.fetchPassCountries(testCase);
			ctrl.goToStep2();
			ctrl.save();
			ctrl.goToFinalStep();

			System.assertEquals('&airline=PASS',ctrl.passParam);
		}
		Test.StopTest();
	}

}
