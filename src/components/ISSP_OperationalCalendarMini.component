<apex:component allowDML="false" controller="ISSP_OperationalCalendarController">

<script>
function loadScript(url, callback){

    var script = document.createElement("script")
    script.type = "text/javascript";

    if (script.readyState){  //IE
        script.onreadystatechange = function(){
            if (script.readyState == "loaded" ||
                    script.readyState == "complete"){
                script.onreadystatechange = null;
                callback();
            }
        };
    } else {  //Others
        script.onload = function(){
            callback();
        };
    }

    script.src = url;
    document.getElementsByTagName("head")[0].appendChild(script);
}
</script>

<apex:stylesheet value="{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/fullcalendar.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ISSP_OperationalCalendar, '/lib/qtip/jquery.qtip.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ISSP_OperationalCalendar, '/css/minicalendar.min.css')}"/>

<script>
    var LIST_FILTERS = {!listFiltersJson};
    var MAP_FREQUENCIES = {!mapFrequenciesJson};
    var isAirline = {!isAirline};
    var defaultCountry = "{!defaultCountry}";
    var events = {!ListEventsJSONGrouped};
    //console.log(MAP_FREQUENCIES);
    //console.log(isAirline);
    //console.log(defaultCountry);
    //console.log(events);
    // Load js scripts using this method due to a conflict in home page
    loadScript("{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/lib/moment.min.js')}",function(){
    loadScript("{!URLFOR($Resource.fullcalendar, '/fullcalendar-3.9.0/fullcalendar.min.js')}",function(){
    loadScript("{!URLFOR($Resource.ISSP_OperationalCalendar, '/lib/qtip/jquery.qtip.min.js')}",function(){
        initFilters();
        initCalendar();
        refreshEvents();
    });
    });
    });


    $(document).ready(function() {
        $(".countryFilter").change(function() {
            updatePicklistsFromCountry();
            refreshEvents();
        });
        $("#typeFilter").change(function() {
            updatePicklistsFromType();
            refreshEvents();
        });
        $("#frequencyFilter").change(function() {
            updatePicklistsFromFrequency();
            refreshEvents();
        });
        $("#currencyFilter").change(function() {
            refreshEvents();
        });
        $("#resetButton").click(function() {
            $(".countryFilter").val(defaultCountry);
            $("#typeFilter").val("");
            updatePicklist($("#frequencyFilter"),[],0,"");
            updatePicklist($("#currencyFilter"),[],0,"");
            refreshEvents();
        });
    });

    function initCalendar() {
        var calendar =  $('#calendar').fullCalendar({
            aspectRatio: 1,
            header: {
                left: 'title',
                right: 'prev,next'
            },
            views: {
              listMonth: {
                type: 'list',
                duration: { months: 1 }
              }
            },
            validRange: {
              start: '{!TEXT(minDate)}',
              end: '{!TEXT(maxDate)}'
            },
            theme: false,
            displayEventTime: false,
            editable: false,
            selectable: false,
            defaultView: 'month',
            allDaySlot: false,
            selectHelper: false,
            droppable: false,
            
            // locale
            isRTL: false,
            firstDay: 1,
            monthNames: ['{!$Label.ISSP_AMS_Month_January}','{!$Label.ISSP_AMS_Month_February}','{!$Label.ISSP_AMS_Month_March}','{!$Label.ISSP_AMS_Month_April}','{!$Label.ISSP_AMS_Month_May}','{!$Label.ISSP_AMS_Month_June}','{!$Label.ISSP_AMS_Month_July}','{!$Label.ISSP_AMS_Month_August}','{!$Label.ISSP_AMS_Month_September}','{!$Label.ISSP_AMS_Month_October}','{!$Label.ISSP_AMS_Month_November}','{!$Label.ISSP_AMS_Month_December}'],
            monthNamesShort: ['{!$Label.PKB2_month_January}','{!$Label.PKB2_month_February}','{!$Label.PKB2_month_March}','{!$Label.PKB2_month_April}','{!$Label.PKB2_month_May}','{!$Label.PKB2_month_June}','{!$Label.PKB2_month_July}','{!$Label.PKB2_month_August}','{!$Label.PKB2_month_September}','{!$Label.PKB2_month_October}','{!$Label.PKB2_month_November}','{!$Label.PKB2_month_December}'],
            dayNames: ['{!$Label.ISSP_Weekday_Sunday}','{!$Label.ISSP_Weekday_Monday}','{!$Label.ISSP_Weekday_Tuesday}','{!$Label.ISSP_Weekday_Wednesday}','{!$Label.ISSP_Weekday_Thursday}','{!$Label.ISSP_Weekday_Friday}','{!$Label.ISSP_Weekday_Saturday}'],
            dayNamesShort: ['{!$Label.ISSP_Weekday_Short_Sunday}','{!$Label.ISSP_Weekday_Short_Monday}','{!$Label.ISSP_Weekday_Short_Tuesday}','{!$Label.ISSP_Weekday_Short_Wednesday}','{!$Label.ISSP_Weekday_Short_Thursday}','{!$Label.ISSP_Weekday_Short_Friday}','{!$Label.ISSP_Weekday_Short_Saturday}'],
            buttonText: {
                month: 'Month View',
                listMonth: 'Task List'
            },
            eventRender: function(event, element) {
                element.qtip({
                    content: {text: event.description},
                    position: {
                        my: 'center left',
                        at: 'center right'
                    },
                    style: {
                        classes: 'qtip-blue qtip-rounded qtip-shadow'
                    }
                });
            }
        });
    }

    function initFilters(){
        if (isAirline) {
            if ("{!$CurrentPage.parameters.fcountry}">"") {
                $(".countryFilter").val("{!$CurrentPage.parameters.fcountry}");
            } else {
                $(".countryFilter").val(defaultCountry);
            }
            updatePicklistsFromCountry();
            if ("{!$CurrentPage.parameters.ftype}">"") {
                $("#typeFilter").val("{!$CurrentPage.parameters.ftype}");
                updatePicklistsFromType();
            }
            if ("{!$CurrentPage.parameters.ffrequency}">"") {
                $("#frequencyFilter").val("{!$CurrentPage.parameters.ffrequency}");
                updatePicklistsFromFrequency();
            }
            if ("{!$CurrentPage.parameters.fcurrency}">"") {
                $("#currencyFilter").val("{!$CurrentPage.parameters.fcurrency}");
            }
        } else {
            //if it's an agency the filters are populated with a single value, and not selectible
            var listValues = LIST_FILTERS[0].split(",");
            //country filter
            $(".countryFilter").prop("disabled",true);
            //type filter
            $("#typeFilter").append($('<option>', {value: listValues[1],text: listValues[1]}));
            $("#typeFilter").prop("disabled",true);
            //frequency filter
            var label = MAP_FREQUENCIES[listValues[2]];
            $("#frequencyFilter").append($('<option>', {value: listValues[2],text: label}));
            $("#frequencyFilter").prop("disabled",true);
        }
    }
    
    function refreshEvents() {
        if (isAirline){
            hideError();
            //remove existing events
            $("#calendar").fullCalendar('removeEvents' , function(e){ return true; });
            var country = $(".countryFilter").val();
            var frequency = $("#frequencyFilter").val();
            var operationType = $("#typeFilter").val();
            var currency = $("#currencyFilter").val();
            // validate country and operationtype
            if (country=='') {
                showError("{!$Label.ISSP_OperationalCalendar_Country_Filter_Required}");
                return;
            }
            if (operationType=='') {
                showError("{!$Label.ISSP_OperationalCalendar_BSPCASS_Filter_Required}");
                return;
            }
            //console.log("country: " + country + " frequency: " + frequency + " operationType: " + operationType + " currency: " + currency);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ISSP_OperationalCalendarController.loadEventsGroupedRemote}',
                country, frequency, operationType, currency,
                function(result, event){
                    if (event.status) {
                        setCalendarEvents($.parseJSON(result));
                    } else if (event.type === 'exception') {
                        showError(event.message);
                    } else {
                        console.log('Unknown error in refreshEvents result: ' + unescape(result));
                    }
                }, 
                {escape: false}
            );
        } else {
            setCalendarEvents(events);
        }
    }

    function setCalendarEvents(listEvents){
        var calendar =  $('#calendar');
        //remove existing events
        calendar.fullCalendar('removeEvents' , function(e){ return true; });
        if (listEvents.length ==0) {
            calendar.addClass("disabled");
            showError("{!$Label.ISSP_OperationalCalendar_No_Events}");
        } else {
            // add new events
            calendar.fullCalendar('renderEvents' , listEvents, true);
            calendar.removeClass("disabled");
            //$('.fc-event').tooltip({placement: "right"});
        }
    }
    
    function containsInArray(array, match) {
        var result = [];
        for (i = 0; i < array.length; i++) {
            if (array[i].includes(match)) {
                result.push(array[i])
            }
        }
        return result;
    };
    
    function updatePicklistsFromCountry() {
        var country = $(".countryFilter").val();
        var operationType = $("#typeFilter").val();
        var filter = country + ",";
        var listValues = containsInArray(LIST_FILTERS,filter);
        updatePicklist($("#typeFilter"), listValues,1,operationType);
        updatePicklist($("#frequencyFilter"), listValues,2,'');
        updatePicklist($("#currencyFilter"), listValues,3,'');
    }
    
    function updatePicklistsFromType(position) {
        var country = $(".countryFilter").val();
        var operationType = $("#typeFilter").val();
        var filter = country + ",";
        if (operationType!=undefined) {
            filter+= operationType + ",";
        }
        var listValues = containsInArray(LIST_FILTERS,filter);
        if (operationType==undefined) {
            updatePicklist($("#typeFilter"), listValues,1,'');
        }
        updatePicklist($("#frequencyFilter"), listValues,2,'');
        updatePicklist($("#currencyFilter"), listValues,3,'');
    }
    
    function updatePicklistsFromFrequency() {
        var country = $(".countryFilter").val();
        var operationType = $("#typeFilter").val();
        var frequency = $("#frequencyFilter").val();
        var filter = country + "," + operationType + ",";
        if (frequency>"") {
             filter+= frequency + ",";
        }
        var listValues = containsInArray(LIST_FILTERS,filter);
        updatePicklist($("#currencyFilter"), listValues,3,'');
    }

    function updatePicklist(inputSelect, listValues, position, defValue) {
        if (!isAirline) return;
        inputSelect.find('option').remove();
        var listUniqueValues = [];
        // get only the part required
        $.each(listValues, function (i, item) {
            listUniqueValues.push(item.split(",")[position]);
        });
        // remove duplicates
        listUniqueValues = listUniqueValues.sort().filter(function(item, pos, self) {
            return self.indexOf(item) == pos;
        });
        // add None option if required
        if (listUniqueValues.length!=1) {
            var emptyText = "--{!$Label.ISSP_All}--";
            if (inputSelect.attr('id')=="typeFilter") {
                emptyText = "{!$Label.ANG_ISSP_Picklist_None}";
            }
            inputSelect.append($("<option>", {value: "",text : emptyText}));
        }
        // Add options
        $.each(listUniqueValues, function (i, item) {
            var label = item;
            if (position==2) {
                label = MAP_FREQUENCIES[item];
            }
            var option = $('<option>', {value: item,text: label});
            if (defValue==item) option.attr("selected",true);
            inputSelect.append(option);
        });
    }
    
    function showError(message) {
        $('#calendar').addClass("disabled");
        $("#errormessage")
            .text(message)
            .show();
    }
    function hideError() {
        $("#errormessage").hide();
        $('#calendar').removeClass("disabled");
    }
</script>

<div class="container" style="width:100%">
    <div id="rowCalendar" class="row">
        <div class="col-sm-4">
            <apex:form >
                <div class="form-group"/>
                <div class="form-group form-group-xxs">
                    <label for="countryFilterInput">{!$Label.ISSP_OperationalCalendar_CountryFilter}</label>
                    <apex:selectList styleclass="countryFilter form-control input-xxs {!IF(isAirline,'required','')}" multiselect="false" size="1">
                        <apex:selectOptions value="{!countryOptions}" />
                    </apex:selectList>
                </div>
                <div class="form-group form-group-xxs">
                    <label for="typeFilter">{!$Label.ISSP_OperationalCalendar_BSPCASSFilter}</label>
                    <select id="typeFilter" class="form-control input-xxs {!IF(isAirline,'required','')}"></select>
                </div>
                <div class="form-group form-group-xxs">
                    <label for="frequencyFilter">{!$Label.ISSP_OperationalCalendar_FrequencyFilter}</label>
                    <select id="frequencyFilter" class="form-control input-xxs"></select>
                </div>
                <apex:outputPanel layout="block" styleclass="form-group form-group-xxs" rendered="{!isAirline}">
                    <label for="currencyFilter">{!$Label.ISSP_OperationalCalendar_CurrencyFilter}</label>
                    <select id="currencyFilter" class="form-control input-xxs"></select>
                </apex:outputPanel>
                <apex:outputPanel layout="block" styleclass="form-group" rendered="{!isAirline}">
                    <button id="resetButton" class="btn btn-primary btn-xs" type="button">{!$Label.ISSP_OperationalCalendar_Reset}</button>
                </apex:outputPanel>
            </apex:form>
        </div>
        <div class="col-sm-8">
            <div id="calendar-container">
              <div id="errormessage" class="center" style="display:none"></div>
              <div id='calendar'></div>
            </div>
        </div>
    </div>
</div>
</apex:component>