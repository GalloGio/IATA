<apex:component controller="EF_AttachmentListController" allowDML="true" >
    <apex:attribute name="sobjectId" description="id" type="Id" required="true" assignTo="{!id}" />

    <apex:includeScript value="/soap/ajax/33.0/connection.js"/>
    <apex:includeScript value="/soap/ajax/33.0/apex.js"/>
    <apex:includeScript value="{!$Resource.jquery2_1_4}"/>

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css"/>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>

    <style type="text/css">
        div.datePicker{
            z-index: 500;
        }
        .requiredInput .requiredBlock.warn{
            background-color: #CC0;
        }
    </style>

    <script>
    // Get the Root URL dynamically
        var pageMainUrl = window.location.protocol + "//" + window.location.hostname;

        function refreshList() {
            startLoading();
            refreshListServer();
        }

        function getS3LInk(fileName) {
            startLoading();
            EF_AttachmentListController.getExpiringLink(fileName,function(result, event){
                var result2= result.replace("&amp;","&");
                var newWin = window.open(result2);
                if(!newWin || newWin.closed || typeof newWin.closed=='undefined'){
                    alert('{!$Label.Check_popup_settings}');
                }
                stopLoading();
            }, {buffer: true, escape: false, timeout: 120000} );
        }

        function deleteAttachment(id, fullName) {
            if(!confirm("{!$Label.Ask_Delete_Attachment}")) {
                return false;
            }
            startLoading();
            EF_AttachmentListController.deleteAttachment(id, fullName,function(result, event){
                if (!result) alert("{!$Label.Delete_Attachment_Error}");
                refreshList();
            }, {timeout: 120000} );
            return false;
        }

        function redirect(page) {
            window.top.location=page;
            return false;
        }

        $.fn.isBound = function(type, fn) {
            try{
                var data = jQuery._data(this[0], 'events')[type];
            }catch(err){
                console.error(err);
                return false;
            }

            console.info("bound events:");
            console.info(data);

            if (data === undefined || data.length === 0) {
                return false;
            }

            //return (-1 !== $.inArray(fn, data));

            for (var i = 0; i < data.length; i++) {

                console.info('Is '+fn+' on '+type+' bound? '+ (data[i].handler.toString() === fn.toString() && data[i].type === type) );
                if (data[i].handler.toString() === fn.toString() && data[i].type === type) {
                    return true;
                }
            }

            return false;
        };
    </script>

    <!-- upload scripts -->

    <script>
        var fileCounter = {
            value: 0,
            reset: function(val) {    value = val; },
            //increase: function() { value++; },
            //decrease: function() { value--; },
            refreshIfEmpty: function() {
                value--;
                if (value==0) refreshList();
            }
        }

        function onButtonClicked() {
            startLoading();
            uploadFiles(this.files);
        }

        $( document ).ready(function() {
            var fileInput = $("#file-field");

            fileInput.bind("change", onButtonClicked);
        });

        function uploadFiles(files) {

            try{
                $( '#dialog' ).dialog('destroy');
            }catch(err){}

            fileCounter.reset(files.length);
            $.each(files, function(i, file) {
                uploadFile(file);
            });
        }

        function browseFiles() {
            var fileInput = $("#file-field");

            if (!fileInput.isBound('change', onButtonClicked)) {
                fileInput.bind("change", onButtonClicked);
            };

            fileInput.click();
        }

        function uploadFile(file) {
            EF_AttachmentListController.createUploadFile("{!sobjectId}",file.name,file.type, file.size, '{!amazonPath}', '{!credentialName}', function(result, event){
                if(event.type == "exception") {
                    alert("Exception!!");
                    stopLoading();
                    fileCounter.refreshIfEmpty();
                    return false;
                }
                if(!event.status) {
                    alert("Bad status " + event.status);
                    stopLoading();
                    fileCounter.refreshIfEmpty();
                    return false;
                }
                if( ! result["isSuccess"]){
                    alert(result["errorMessage"].replace("&#39;","'").replace("&amp", "&").replace(";",""));
                    stopLoading();
                    fileCounter.refreshIfEmpty();
                    return false;
                }
                var credentialNames = result;
                var reader = new FileReader();
                reader.readAsArrayBuffer(file);
                reader.onload = function(e) {
                    var arrayBuffer = reader.result;
                    remoteFunctionPut(credentialNames, file, reader.result);
                };
            }, {buffer: true, escape: true, timeout: 120000} );

        }

        function remoteFunctionPut(credentialNames, file, fileBody) {
            var amazonFilePath = credentialNames.endpoint+credentialNames.bucketName+'/'+credentialNames.fullFileNameEncoded;
            sforce.connection.sessionId = "{!$Api.Session_ID}";
            sforce.connection.init("{!$Api.Session_ID}", amazonFilePath);

            //var progressBar;

            var xhr = new XMLHttpRequest();

            // salesforce overrides original XMLHttpRequest in IE
            if (!xhr.upload && window.Sarissa && window.Sarissa.originalXMLHttpRequest) {
                xhr = new Sarissa.originalXMLHttpRequest();
            }

            xhr.onreadystatechange = function () {
                if (this.readyState == 4) {
                    fileCounter.refreshIfEmpty();
                    var status = this.status;
                    if (status == 200) {
                        ////progressUpload(100, this.progressBar);
                        //uploadFile(file);
                    } else {
                        if (this.responseText) {
                            getResponseFromXML(this.responseText);
                            //uploadFile(file);
                        } else {
                            var message = '';
                            if (this.statusText) {
                                message = 'Status: '+this.status+'. Error: '+this.statusText;
                            }
                            else if (this.responseText) {
                                message = 'Status: '+this.status+'. Error: '+this.responseText;
                            }
                            else {
                                message = 'Status:'+this.status+'. Error: Unknown error.';
                            }
                        }
                    }
                }
            };

            xhr.open("PUT", amazonFilePath);

            xhr.setRequestHeader("Cache-Control", "no-cache");
            xhr.setRequestHeader("Authorization",credentialNames.authorization);
            xhr.setRequestHeader("X-Amz-Date",credentialNames.timestamp);
            xhr.setRequestHeader("Content-Type",file.type+';charset=UTF-8');

            xhr.send(fileBody);

            callToCreateAmazonFileObject(file, credentialNames.fullFileName);
        }

        function getResponseFromXML(response) {
            parser = new DOMParser();
            var xmlDoc = parser.parseFromString(response, "text/xml");
            if (xmlDoc.getElementsByTagName("Message")[0].childNodes[0].nodeValue) {
                alert ('Error. Message from Amazon S3: '+xmlDoc.getElementsByTagName("Message")[0].childNodes[0].nodeValue);
                stopLoading();
            }
        }

         function callToCreateAmazonFileObject(file, path) {

            startLoading();

            var efCategory = $("[id$='dataToSubmit_Category__c']").val();
            var efSubCategory = $("[id$='dataToSubmit_Subcategory__c']").val();
            var efExpiryDate = $("[id$='dataToSubmit_Expiry_Date__c']").val();
            var efExpired = $("[id$='dataToSubmit_Expired__c']").prop("checked");
            var efSapNumber = $("[id$='dataToSubmit_SAP_Number__c']").val();

            console.warn('efSubCategory: '+efSubCategory);

             EF_AttachmentListController.createAmazonFileObject(
                 path,
                 file.size,
                 "{!sobjectId}",
                 "EF_File",
                 efCategory,
                 ($("[id$='dataToSubmit_Subcategory__c']").prop("disabled") ? '' : efSubCategory),
                 efExpiryDate,
                 efExpired,
                 efSapNumber,
                 function(result, event){}
               );

            //refreshList();
         }

        function uploadEfFile() {

            if(validateInputs("dataToSubmit")) {

                browseFiles();
            }else{

                alert('Please fill all the information.');
            }
        }


        function validateUpdate() {

            if(validateInputs("editFile")) {

                updateAttach();
            }else{

                alert('Please fill all the information.');
            }

            return false;
        }

        function validateInputs(identifier) {

            var $efCategory = $("[id$='"+identifier+"_Category__c']");
            var $efSubCategory = $("[id$='"+identifier+"_Subcategory__c']");
            var $efAdditionalInformation = $("[id$='"+identifier+"_Additional_Information__c']");
            var $efSapNumber = $("[id$='"+identifier+"_SAP_Number__c']");
            var $efExpiryDate = $("[id$='"+identifier+"_Expiry_Date__c']");
            var $efExpired = $("[id$='"+identifier+"_Expired__c']");

            if ($efCategory.val() == '' || $efSubCategory.val() == '') return false;
            if(($efCategory.val() == 'Ad-Hoc Report' || $efCategory.val() == 'Miscellaneous' )) {
                if ( $efAdditionalInformation.val() == '') return false;
            } else {
                if ( $efSubCategory.val() == '') return false;
            }
            if($efSapNumber.prop("required") && $efSapNumber.val() == '') return false;
            if($efExpiryDate.prop("required") && $efExpiryDate.val() == '') return false;
            if($efExpired.prop("required") && !$efExpired.prop("checked")) return false;

            return true;
        }

        function openDialog() {

            $( '#dialog' ).dialog({width: '650px', modal: true, close: function( event, ui ) {$( '#dialog' ).dialog('destroy');}});
        }

        function bindRequirements(identifier) {
            var $efCategory = $("[id$='"+identifier+"_Category__c']");
            var $efSubCategory = $("[id$='"+identifier+"_Subcategory__c']");
            var $efSapNumber = $("[id$='"+identifier+"_SAP_Number__c']");
            var $efExpiryDate = $("[id$='"+identifier+"_Expiry_Date__c']");
            var $efExpired = $("[id$='"+identifier+"_Expired__c']");

            var catSelection = $efCategory.val() + '.' + $efSubCategory.val()

            console.info('catSelection: '+catSelection);

            var sapNumberRequired = jQuery.parseJSON('{!sapNumberRequiredJSON}');
            var expiryDateRequired = jQuery.parseJSON('{!expiryDateRequiredJSON}');
            var expiredRequired = jQuery.parseJSON('{!expiredRequiredJSON}');

            // toggleRequired($efSubCategory, !$efSubCategory.prop("disabled"));

            toggleRequired($efSapNumber, jQuery.inArray(catSelection, sapNumberRequired) > -1);
            toggleRequired($efExpiryDate, jQuery.inArray(catSelection, expiryDateRequired) > -1);
            toggleRequired($efExpired, jQuery.inArray(catSelection, expiredRequired) > -1);

        }

        function toggleRequired(input, required) {
            var requiredBlock = input.prev();
            if(input.parent().hasClass('dateInput') || input.is('select')) requiredBlock = input.parent().prev();

            console.info('Toggling Required ('+required+') for '+input.attr("id"));
            // console.info('input is select? '+input.is('select'));
            // console.info('input is disabled? '+input.prop('disabled'));
            console.info(requiredBlock);

            input.prop("required", required);
            requiredBlock.toggle(required);
        }
    </script>

    <c:Loading />

    <apex:form id="mainform" >

        <apex:actionFunction name="refreshListServer" action="{!refreshList}" rerender="mainform" oncomplete="stopLoading();"/>
        <apex:pageMessages />

        <apex:pageblock id="fileList" title="{!$Label.Attachments}" >

<!--            BUTTONS -->
            <apex:pageblockButtons location="top" >
                <apex:outputPanel layout="none">
                    <apex:commandButton value="{!$Label.Select_File}" title="Select File" onclick="openDialog(); return false;" immediate="true" />
                </apex:outputPanel>

                <!-- <apex:commandButton value="{!$Label.Transfer_Attachments}" onclick="redirect('{!TransferAttachmentsUrl}');" immediate="true" />
                <apex:commandButton value="{!$Label.Make_All_Public}" action="{!makeAllPublic}" onclick="startLoading();" rerender="mainform" oncomplete="refreshList();" />
                <apex:commandButton value="{!$Label.Make_All_Private}" action="{!makeAllPrivate}" onclick="startLoading();" rerender="mainform" oncomplete="refreshList()" /> -->
            </apex:pageblockButtons>

            <apex:pageBlockTable id="tableAttachments" value="{!listAttachments}" var="attach" Title="title">

<!--                ACTIONS -->
                <apex:column headerValue="{!$Label.Action}">

                    <!-- EDIT ACTION -->
                    <apex:outputPanel >
                    <apex:actionRegion >
                        <apex:commandLink style="color:#015ba7; cursor: pointer;" action="{!callEditAttachment}" value="{!$Label.Edit}" reRender="mainform">
                            <apex:param name="edit" value="{!attach.Id}" assignTo="{!editAttachmentId}" />
                        </apex:commandLink>
                        &nbsp;|&nbsp;
                    </apex:actionRegion>
                    </apex:outputPanel>

                    <!-- VIEW ACTION -->
                    <apex:commandLink style="color:#015ba7; cursor: pointer;" action="{!attach.viewFile}" value="{!$Label.View}" target="_blank" rendered="{!!attach.isAmazon}" />
                    <apex:outputPanel rendered="{!attach.isAmazon}" >
                        <a title="view" escape="false" target="_blank" onclick="getS3LInk('{!attach.fullName}');" style="color:#015ba7; cursor: pointer; text-decoration: underline;" >{!$Label.View}</a>
                    </apex:outputPanel>

                    <!-- DEL ACTION -->
                    <apex:outputPanel >
                        &nbsp;|&nbsp;
                        <apex:outputLink style="color:#015ba7; cursor: pointer;" onclick="return deleteAttachment('{!attach.Id}','{!attach.fullName}');" >{!$Label.Del}</apex:outputLink>
                    </apex:outputPanel>

                    <!-- MAKE PUBLIC ACTION -->
                    <!-- <apex:outputPanel >
                        &nbsp;|&nbsp;
                        <apex:commandLink style="color:#015ba7; cursor: pointer;" onclick="startLoading();" action="{!attach.changePermission}" value="{!IF(attach.isPublic, $Label.Make_Private, $Label.Make_Public)}" target="_blank" oncomplete="refreshList();" />
                    </apex:outputPanel> -->
                </apex:column>

                <apex:column headerValue="{!$Label.File_Name}">
                    <apex:outputLink value="../{!attach.Id}" target="_blank">{!attach.Name}</apex:outputLink>
                    <!-- <apex:outputText value="{!attach.name}"/> -->
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Document_Date__c.Label}" >
                    <apex:outputText value=" {0,date,d MMM yyyy HH:mm a}">
                        <apex:param value="{!attach.efDocumentDate}" />
                    </apex:outputText>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Category__c.Label}" >
                    <apex:outputText value="{!attach.efCategory}"/>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Subcategory__c.Label}" >
                    <apex:outputText value="{!attach.efSubCategory}"/>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Expiry_Date__c.Label}" >
                    <apex:outputText value=" {0,date,d MMM yyyy HH:mm a}">
                        <apex:param value="{!attach.efExpiryDate}" />
                    </apex:outputText>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.Expired__c.Label}" >
                    <apex:inputCheckbox value="{!attach.efExpired}" disabled="true" />
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.SAP_Number__c.Label}" >
                    <apex:outputText value="{!attach.efSAPNumber}"/>
                </apex:column>

                <apex:column headerValue="{!$ObjectType.AmazonFile__c.fields.EF_Private__c.Label}" >
                    <apex:inputCheckbox value="{!attach.efPrivate}" disabled="true"/>
                </apex:column>

            </apex:pageBlockTable>
        </apex:pageblock>


        <!-- modal to upload files -->
        <div id="dialog" style="display: none;" title="{!$Label.Select_File}">
            <input id="file-field" multiple="true" name="file" style="display: none;" type="file" />

            <apex:pageBlock title="{!$Label.Description_Edit}" mode="edit" tabStyle="AmazonFile__c" >

                <apex:pageBlockButtons location="top" >
                    <input class="btn" id="btnUpload" value="{!$Label.Upload_File}" type="submit" onclick="uploadEfFile(); return false;" />
                </apex:pageBlockButtons>
                <apex:pageBlockSection columns="1">

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Category__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock" />
                            <apex:inputField id="dataToSubmit_Category__c" value="{!amazonFileToUpload.Category__c}" onchange="bindRequirements('dataToSubmit');"/>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Subcategory__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock warn" />
                            <apex:inputField id="dataToSubmit_Subcategory__c" value="{!amazonFileToUpload.Subcategory__c}" onchange="bindRequirements('dataToSubmit');" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Additional_Information__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock warn" />
                            <apex:inputField id="dataToSubmit_Additional_Information__c" value="{!amazonFileToUpload.Additional_Information__c}" onchange="bindRequirements('dataToSubmit');" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Expiry_Date__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                            <apex:inputField id="dataToSubmit_Expiry_Date__c" value="{!amazonFileToUpload.Expiry_Date__c}" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Expired__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                            <apex:inputField id="dataToSubmit_Expired__c" value="{!amazonFileToUpload.Expired__c}" />
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.SAP_Number__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                            <apex:inputField id="dataToSubmit_SAP_Number__c" value="{!amazonFileToUpload.SAP_Number__c}"/>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.EF_Private__c.Label}"/>
                        <apex:outputPanel layout="block" styleClass="requiredInput">
                            <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                            <apex:inputField id="dataToSubmit_EF_Private__c" value="{!amazonFileToUpload.EF_Private__c}"/>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                </apex:pageBlockSection>
            </apex:pageBlock>


        </div>


        <!-- Panel to edit an attachment -->
        <apex:outputPanel id="editAttachmentPanel" layout="block" styleclass="editPopup" rendered="{!editAttachment!=null}" >
            <div style="height:100%;width:100%;z-index:100; position:fixed;background:black;opacity:0.5; top:0; left:0;">
            </div>
            <div style="
                //display: inline-block;
                z-index: 101;
                width: 500px;
                position: absolute;
                top: 5px;
                right: 0;
                bottom: 0;
                left: 0;
                margin: auto;
                " >

               <apex:pageBlock title="{!$Label.Description_Edit}" mode="edit" tabStyle="AmazonFile__c" >

                    <script>bindRequirements('editFile');</script>

                    <apex:actionFunction name="updateAttach" action="{!updateAttach}" oncomplete="refreshList();"/>

                    <apex:pageBlockButtons location="top" >
                        <input type="button" class="btn" value="{!$Label.Save}" onclick="return validateUpdate();" />
                        <apex:commandButton action="{!cancelPopupAttach}" value="{!$Label.Cancel}" oncomplete="refreshList();" />
                    </apex:pageBlockButtons>
                    <apex:pageBlockSection columns="1" >

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$Label.File_Name}"/>
                            <apex:outputText value="{!editAttachment.name}"/>
                        </apex:pageBlockSectionItem>

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Document_Date__c.Label}"/>
                            <apex:inputField value="{!editAttachment.fileAmazon.amazonFile.Document_Date__c}" />
                        </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Category__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock" />
                               <apex:inputField id="editFile_Category__c" value="{!editAttachment.fileAmazon.amazonFile.Category__c}" onchange="bindRequirements('editFile');" />
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Subcategory__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock warn" />
                               <apex:inputField id="editFile_Subcategory__c" value="{!editAttachment.fileAmazon.amazonFile.Subcategory__c}" onchange="bindRequirements('editFile');" />
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Additional_Information__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock warn" />
                               <apex:inputField id="editFile_Additional_Information__c" value="{!editAttachment.fileAmazon.amazonFile.Additional_Information__c}" onchange="bindRequirements('editFile');" />
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Expiry_Date__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                               <apex:inputField id="editFile_Expiry_Date__c" value="{!editAttachment.fileAmazon.amazonFile.Expiry_Date__c}" />
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.Expired__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                               <apex:inputField id="editFile_Expired__c" value="{!editAttachment.fileAmazon.amazonFile.Expired__c}" />
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.SAP_Number__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                               <apex:inputField id="editFile_SAP_Number__c" value="{!editAttachment.fileAmazon.amazonFile.SAP_Number__c}"/>
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                       <apex:pageBlockSectionItem >
                           <apex:outputLabel value="{!$ObjectType.AmazonFile__c.fields.EF_Private__c.Label}"/>
                           <apex:outputPanel layout="block" styleClass="requiredInput">
                               <apex:outputPanel layout="block" styleClass="requiredBlock hidden" />
                               <apex:inputField id="editFile_EF_Private__c" value="{!editAttachment.fileAmazon.amazonFile.EF_Private__c}"/>
                           </apex:outputPanel>
                       </apex:pageBlockSectionItem>

                    </apex:pageBlockSection>
                </apex:pageBlock>
            </div>
        </apex:outputPanel>

    </apex:form>

</apex:component>
