<project name="Retrieve and Deploy SFDC data and metadata" default="deployTestOnly" basedir=".." xmlns:sf="antlib:com.salesforce">

  <!-- PROPERTIES -->

  <taskdef uri="antlib:com.salesforce" resource="com/salesforce/antlib.xml" classpath="${basedir}/build/ant-salesforce.jar" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${basedir}/build/ant-contrib/ant-contrib-1.0b3.jar" />

  <property file="${basedir}/build/build.properties" />
  <property environment="env" />

  <!-- HELPERS -->
  <macrodef name="deldir">
    <sequential>
      <if>
        <available file="${basedir}/Code" type="dir" />
        <then>
          <echo level="info">Deleting ${basedir}/Code</echo>
          <delete includeEmptyDirs="true">
            <fileset dir="${basedir}/Code"></fileset>
          </delete>
        </then>
      </if>
    </sequential>
  </macrodef>

  <macrodef name="printlist">
    <attribute name="list" />
    <attribute name="message" default="" />
    <sequential>
      <echo level="info">====================================================================
@{message}</echo>
      <for list="@{list}" delimiter="," param="item">
        <sequential>
          <echo>- @{item}</echo>
        </sequential>
      </for>
      <echo level="info">====================================================================
      </echo>
    </sequential>
  </macrodef>

  <target name="compressProfiles">
    <property name="folder" value="folder" />
    <for param="file">
      <path>
        <fileset dir="src/${folder}" />
      </path>
      <sequential>
        <var name="name" unset="true" />
        <basename file="@{file}" property="name" />
        <echo message=" ${name}" />
        <exec executable="perl">
          <arg value="-pi" />
          <arg value="build/profileCompress.pl" />
          <arg value="src/${folder}/${name}" />
        </exec>
      </sequential>
    </for>
    <delete>
      <fileset dir="src/${folder}" includes="*.profile.bak" />
    </delete>
  </target>

  <target name="compressPermissionSets">
    <property name="folderPermissionSet" value="folderPermissionSet" />
    <for param="file">
      <path>
        <fileset dir="src/${folderPermissionSet}" />
      </path>
      <sequential>
        <var name="name" unset="true" />
        <basename file="@{file}" property="name" />
        <echo message=" ${name}" />
        <exec executable="perl">
          <arg value="-pi" />
          <arg value="build/profileCompress.pl" />
          <arg value="src/${folderPermissionSet}/${name}" />
        </exec>
      </sequential>
    </for>
    <delete>
      <fileset dir="src/${folderPermissionSet}" includes="*.permissionset.bak" />
    </delete>
  </target>

  <macrodef name="createDirectories">
    <attribute name="folderList" default="" />
    <sequential>
      <echo level="info">
        Resetting directories
      </echo>
      <deldir />
      <mkdir dir="${basedir}/Code" />
      <for list="@{folderList}" param="folder">
        <sequential>
          <mkdir dir="${basedir}/Code/@{folder}" />
        </sequential>
      </for>
    </sequential>
  </macrodef>

  <macrodef name="copyPackageXML">
    <attribute name="sourceFile" />
    <sequential>
      <copy file="@{sourceFile}" tofile="${basedir}/Code/package.xml" />
    </sequential>
  </macrodef>

  <macrodef name="fecthFiles">
    <attribute name="folderList" />
    <attribute name="packageName" />
    <attribute name="suffix" default="" />
    <sequential>
      <echo level="info">
        Moving files 
      </echo>
      <for list="@{folderList}" param="folder" delimiter=",">
        <sequential>
          <copy todir="${basedir}/Code/@{folder}">
            <fileset dir="${basedir}/src/@{folder}@{suffix}"></fileset>
          </copy>
        </sequential>
      </for>
      <copyPackageXML sourceFile="${basedir}/src/@{packageName}.xml" />
    </sequential>
  </macrodef>

  <macrodef name="deployCodeLocal">
    <attribute name="deleteDirectories" default="false" />
    <sequential>
      <antcall target="deployLocal" />
      <if>
        <equals arg1="${deleteDirectories}" arg2="true" />
        <then>
          <deldir />
        </then>
      </if>
    </sequential>
  </macrodef>

  <target name="deployLocal">
    <echo level="info">
      Deploying to Salesforce
    </echo>
    <sf:deploy username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" deployRoot="${basedir}/Code" pollWaitMillis="${sfdc.pollWaitMillis}" maxPoll="${sfdc.maxPoll}" />
  </target>

  <target name="validateCodeLocal">
    <echo level="info">Performing the deploy</echo>
    <!--<createDirectories folderList="${code}"/>-->
    <!-- <fecthFiles folderList="${code}" packageName="packagThee"/>-->
    <sf:deploy checkOnly="true" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" deployRoot="${basedir}/Code" pollWaitMillis="${sfdc.pollWaitMillis}" maxPoll="${sfdc.maxPoll}" testLevel="RunSpecifiedTests">
      <runTest>AmazonFileTest</runTest>
      <runTest>GenericAttachmentListControllerTest</runTest>
      <runTest>ISSP_TIPExternalReportsController_Test</runTest>
      <runTest>UploadMultipleFileToAmazonButtonCtrlTest</runTest>
      <runTest>WrapperAttachTest</runTest>
    </sf:deploy>
  </target>

  <!-- DEPLOYS -->

  <!-- only runs the tests, no actual deploy -->
  <target name="deployTestOnly">
    <echo level="info">Testing the deploy</echo>
    <sf:deploy username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" deployRoot="${basedir}/emptyCheck" pollWaitMillis="${sfdc.pollWaitMillis}" maxPoll="${sfdc.maxPoll}" checkOnly="true" logType="Detail" testLevel="RunLocalTests" />
  </target>

  <!-- destructive changes -->
  <target name="undeployCodeLocal">
    <echo level="info">Undeploying code</echo>
    <sf:deploy username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" maxPoll="${sfdc.maxPoll}" rollbackOnError="true" allowMissingFiles="false" autoUpdatePackage="false" ignoreWarnings="true" logType="Debugonly" purgeOnDelete="true" deployroot="${basedir}/removecodepkg" />
  </target>

  <target name="deployPermissions">
    <antcall target="deployPermissionsObjects" />
    <antcall target="deployPermissionsApex" />
  </target>

  <target name="deployPermissionsObjects">
    <echo level="info">
      Deploying permissions for objects
    </echo>

    <createDirectories folderList="${permissionFolders}" />
    <fecthFiles folderList="${permissionFolders}" suffix="Objects" packageName="permissions" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployPermissionsApex">
    <echo level="info">
      Deploying permissions for apex
    </echo>

    <createDirectories folderList="${permissionFolders}" />
    <fecthFiles folderList="${permissionFolders}" suffix="Apex" packageName="permissions2" />

    <deployCodeLocal deleteDirectories="true" />
  </target>


  <target name="deployEverything">
    <echo level="info">
      Deploying STARTS
    </echo>
    <antcall target="deployLabelStep" />
  </target>

  <target name="deployLabelStep">
    <antcall target="deployLabels" />
    <antcall target="deployStaticDocsStep" />
  </target>

  <target name="deployStaticDocsStep">
    <antcall target="deployStaticDocs" />
    <antcall target="deployObjectsStep" />
  </target>

  <target name="deployObjectsStep">
    <antcall target="deployObjects" />
    <antcall target="deployApexStep" />
  </target>

  <target name="deployApexStep">
    <antcall target="deployApex" />
    <antcall target="deployLightStep" />
  </target>

  <target name="deployLightStep">
    <antcall target="deployLight" />
    <antcall target="deployLayoutStep" />
  </target>

  <target name="deployLayoutStep">
    <antcall target="deployLayouts" />
    <antcall target="deployFlowStep" />
  </target>

  <target name="deployFlowStep">
    <antcall target="deployFlows" />
  </target>


  <target name="deployLabels">
    <printlist list="${labelsTranslation}" message="Deploying Labels" />

    <createDirectories folderList="${labelsTranslation}" />
    <fecthFiles folderList="${labelsTranslation}" packageName="labelPackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployStaticDocs">
    <printlist list="${staticDocs}" message="Deploying Static Resources and Documents" />

    <createDirectories folderList="${staticDocs}" />
    <fecthFiles folderList="${staticDocs}" packageName="staticDocsPackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployObjects">
    <printlist list="${object}" message="Deploying OBJECTS" />

    <createDirectories folderList="${object}" />
    <fecthFiles folderList="${object}" packageName="objectPackageDep" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployApex">
    <printlist list="${apexCode}" message="Deploying APEX and VISUALFORCE" />

    <createDirectories folderList="${apexCode}" />
    <fecthFiles folderList="${apexCode}" packageName="apexCodePackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployLight">
    <printlist list="${lightningCode}" message="Deploying Aura, LWC and FlexiPages" />

    <createDirectories folderList="${lightningCode}" />
    <fecthFiles folderList="${lightningCode}" packageName="lightCodePackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployLayouts">
    <printlist list="${layout}" message="Deploying LAYOUT" />

    <createDirectories folderList="${layout}" />
    <fecthFiles folderList="${layout}" packageName="layoutPackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>

  <target name="deployFlows">
    <printlist list="${flow}" message="Deploying Flow" />

    <createDirectories folderList="${flow}" />
    <fecthFiles folderList="${flow}" packageName="flowPackage" />

    <deployCodeLocal deleteDirectories="true" />
  </target>


  <!-- RETRIEVES -->

  <target name="simpleRetrieve">
    <antcallback target="getObjects" />
    <antcallback target="getStaticResourceAndLayouts" />
    <antcallback target="getLabelsAndTranslations" />
  </target>

  <target name="completeRetrieve">
    <antcall target="getObjects" />
    <antcall target="getApex" />
    <antcall target="getStaticResourceAndLayouts" />
  </target>

  <target name="simpleRetrieveWithPermissions">
    <antcall target="getObjectsWithPermissions" />
    <antcall target="getStaticResourceAndLayouts" />
  </target>

  <target name="completeRetrieveWithPermissions">
    <antcall target="getObjectsWithPermissions" />
    <antcall target="getApexWithPermissions" />
    <antcall target="getStaticResourceAndLayouts" />
  </target>

  <target name="getObjects">
    <echo level="info">
      Retrieving the server's version of EmailTemplate, FlexiPage, Flow, Object, QuickAction, Workflow
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/objectPackageRet.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/objectPackageRet.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
  </target>

  <target name="getObjectsWithPermissions">
    <echo level="info">
      Retrieving the server's version of OBJECTs with permissions
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/objectPackageWithProfiles.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/objectPackageWithProfiles.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/profiles/" tofile="src/profilesObjects/" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/permissionsets/" tofile="src/permissionsetsObjects/" />
    <copy file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
    <antcall target="compressProfiles">
      <param name="folder" value="profilesObjects" />
    </antcall>
    <antcall target="compressPermissionSets">
      <param name="folderPermissionSet" value="permissionsetsObjects" />
    </antcall>
  </target>

  <target name="getApex">
    <echo level="info">
      Retrieving the server's version of APEX VISUALFORCE
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/codePackage.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/codePackage.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
  </target>

  <target name="getApexWithPermissions">
    <echo level="info">
      Retrieving the server's version of APEX VISUALFORCE with permissions
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/codePackageRetrieveWithProfiles.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/codePackageRetrieveWithProfiles.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/profiles/" tofile="src/profilesApex/" />
    <copy file="${basedir}/${sfdc.retrieveTarget}/permissionsets/" tofile="src/permissionsetsApex" />
    <copy file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
    <antcall target="compressProfiles">
      <param name="folder" value="profilesApex" />
    </antcall>
    <antcall target="compressPermissionSets">
      <param name="folderPermissionSet" value="permissionsetsApex" />
    </antcall>
  </target>

  <target name="getStaticResourceAndLayouts">
    <echo level="info">
      Retrieving the server's version of STATIC RESOURCES
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/layoutPackageandStatic.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/layoutPackageandStatic.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
  </target>

  <target name="getLabelsAndTranslations">
    <echo level="info">
      Retrieving the server's version of Labels and Translations
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <sf:retrieve retrieveTarget="${basedir}/${sfdc.retrieveTarget}" username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" unpackaged="src/retrieveLabelPackage.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}/package.xml" tofile="src/retrieveLabelPackage.xml" />
    <move file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
  </target>

  <target name="bulkRetrieveEmailTemplate">
    <echo level="info">
      Retrieving the emailtemplates
    </echo>
    <mkdir dir="${basedir}/${sfdc.retrieveTarget}" />
    <for list="${listEmailTemplateFoldersName}" param="param">
      <sequential>
        <sf:bulkRetrieve username="${sfdc.username}" password="${sfdc.password}" serverurl="${sfdc.serverurl}" metadataType="EmailTemplate" retrieveTarget="${basedir}/${sfdc.retrieveTarget}" containingFolder="@{param}" />
      </sequential>
    </for>
    <delete file="${basedir}/${sfdc.retrieveTarget}/package.xml" />
    <copy file="${basedir}/${sfdc.retrieveTarget}" tofile="src" />
  </target>
</project>