$link-color: #23828c;


$text-color: #394a58;
$title-color: #333;
$accent-color: #e41d70;
$border-gray: #ccc;
$gray-light: #e2e2e2;
$text-color-light: #666;


/*------------------------------------*\
    #$Colors
\*------------------------------------*/
$brand-primary:		#4078c0;
$brand-accent: 		#e6176f;
$brand-success:		#5cb85c;
$brand-info:		#5bc0de;
$brand-warning:		#f0ad4e;
$brand-danger:		#d9534f;

/*------------------------------------*\
    #$Typography
\*------------------------------------*/
$font-family-base:	'Raleway', sans-serif;

$font-size-base:	1.4rem;
$font-size-larger:   1.6rem;
$font-size-largest:	2.4rem;
$font-size-small:	1.4rem;

$font-size-h1:	1.6rem;
$font-size-h2:	1.6rem;
$font-size-h3:	1.6rem;
$font-size-h4:	1.6rem;
$font-size-h5:	1.6rem;
$font-size-h6:	1.6rem;


$font-weight-lighter: 200;
$font-weight-light:   300;
$font-weight-normal:  400;
$font-weight-bold:    600;
$font-weight-bolder:  700;

/*------------------------------------*\
    #$Media queries breakpoints
\*------------------------------------*/
/*------------------------------------*\
    #$table
\*------------------------------------*/
$table-border-color: #ccc;
$border-color: #ccc;
$table-bg-dark: #00305b;

/*------------------------------------*\
    #$header
\*------------------------------------*/
$header-bg: #00305b;
$color-accent: #e5176e;
$accent-color: #e5176e;

/*------------------------------------*\
    #$header
\*------------------------------------*/
$mobile-header-icon-width: 70px;
$mobile-header-icon-height: 60px;

/*------------------------------------*\
    #$Foundation
    http://foundation.zurb.com/ 
\*------------------------------------*/
$em-base: 16px !default;

@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

@function convert-to-em($value, $base-value: $em-base)  {
	$value: strip-unit($value) / strip-unit($base-value) * 1em;
	@if ($value == 0em) { $value: 0; } /* Turn 0em into 0 */
	@return $value;
}

@function em-calc($values, $base-value: $em-base) {
	$max: length($values);

	@if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

	$emValues: ();
	@for $i from 1 through $max {
		$emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
	}
	@return $emValues;
}

/* Support for the old syntax */

@function emCalc($values){
	@return em-calc($values);
}